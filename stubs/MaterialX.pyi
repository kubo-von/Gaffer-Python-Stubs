
def ARRAY_PREFERRED_SEPARATOR (*args):
      '''

'''      
    ...

def ARRAY_VALID_SEPARATORS (*args):
      '''

'''      
    ...

def AttributeDef (*args):
      '''

'''      
    ...

class AttributeDef:
    def CATEGORY (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def TYPE_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def _addChildCollection (self, *args, **kwargs):
      '''_addChildCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Collection
'''
    ...
    def _addChildDocument (self, *args, **kwargs):
      '''_addChildDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Document
'''
    ...
    def _addChildGeomInfo (self, *args, **kwargs):
      '''_addChildGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomInfo
'''
    ...
    def _addChildGeomProp (self, *args, **kwargs):
      '''_addChildGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def _addChildImplementation (self, *args, **kwargs):
      '''_addChildImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Implementation
'''
    ...
    def _addChildLook (self, *args, **kwargs):
      '''_addChildLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Look
'''
    ...
    def _addChildMaterialAssign (self, *args, **kwargs):
      '''_addChildMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::MaterialAssign
'''
    ...
    def _addChildNode (self, *args, **kwargs):
      '''_addChildNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Node
'''
    ...
    def _addChildNodeDef (self, *args, **kwargs):
      '''_addChildNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeDef
'''
    ...
    def _addChildNodeGraph (self, *args, **kwargs):
      '''_addChildNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeGraph
'''
    ...
    def _addChildProperty (self, *args, **kwargs):
      '''_addChildProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Property
'''
    ...
    def _addChildPropertySet (self, *args, **kwargs):
      '''_addChildPropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySet
'''
    ...
    def _addChildPropertySetAssign (self, *args, **kwargs):
      '''_addChildPropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySetAssign
'''
    ...
    def _addChildToken (self, *args, **kwargs):
      '''_addChildToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Token
'''
    ...
    def _addChildTypeDef (self, *args, **kwargs):
      '''_addChildTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def _addChildVisibility (self, *args, **kwargs):
      '''_addChildVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Visibility
'''
    ...
    def _getChild (self, *args, **kwargs):
      '''_getChild(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def _getChildOfTypeCollection (self, *args, **kwargs):
      '''_getChildOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Collection
'''
    ...
    def _getChildOfTypeDocument (self, *args, **kwargs):
      '''_getChildOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Document
'''
    ...
    def _getChildOfTypeGeomInfo (self, *args, **kwargs):
      '''_getChildOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomInfo
'''
    ...
    def _getChildOfTypeGeomProp (self, *args, **kwargs):
      '''_getChildOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def _getChildOfTypeImplementation (self, *args, **kwargs):
      '''_getChildOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Implementation
'''
    ...
    def _getChildOfTypeLook (self, *args, **kwargs):
      '''_getChildOfTypeLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Look
'''
    ...
    def _getChildOfTypeMaterialAssign (self, *args, **kwargs):
      '''_getChildOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::MaterialAssign
'''
    ...
    def _getChildOfTypeNode (self, *args, **kwargs):
      '''_getChildOfTypeNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Node
'''
    ...
    def _getChildOfTypeNodeDef (self, *args, **kwargs):
      '''_getChildOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeDef
'''
    ...
    def _getChildOfTypeNodeGraph (self, *args, **kwargs):
      '''_getChildOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeGraph
'''
    ...
    def _getChildOfTypeProperty (self, *args, **kwargs):
      '''_getChildOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Property
'''
    ...
    def _getChildOfTypePropertySet (self, *args, **kwargs):
      '''_getChildOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySet
'''
    ...
    def _getChildOfTypePropertySetAssign (self, *args, **kwargs):
      '''_getChildOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySetAssign
'''
    ...
    def _getChildOfTypeToken (self, *args, **kwargs):
      '''_getChildOfTypeToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Token
'''
    ...
    def _getChildOfTypeTypeDef (self, *args, **kwargs):
      '''_getChildOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def _getChildOfTypeVisibility (self, *args, **kwargs):
      '''_getChildOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Visibility
'''
    ...
    def _getChildrenOfTypeCollection (self, *args, **kwargs):
      '''_getChildrenOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Collection]
'''
    ...
    def _getChildrenOfTypeDocument (self, *args, **kwargs):
      '''_getChildrenOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Document]
'''
    ...
    def _getChildrenOfTypeGeomInfo (self, *args, **kwargs):
      '''_getChildrenOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::GeomInfo]
'''
    ...
    def _getChildrenOfTypeGeomProp (self, *args, **kwargs):
      '''_getChildrenOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::GeomProp]
'''
    ...
    def _getChildrenOfTypeImplementation (self, *args, **kwargs):
      '''_getChildrenOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Implementation]
'''
    ...
    def _getChildrenOfTypeLook (self, *args, **kwargs):
      '''_getChildrenOfTypeLook(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Look]
'''
    ...
    def _getChildrenOfTypeMaterialAssign (self, *args, **kwargs):
      '''_getChildrenOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::MaterialAssign]
'''
    ...
    def _getChildrenOfTypeNode (self, *args, **kwargs):
      '''_getChildrenOfTypeNode(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Node]
'''
    ...
    def _getChildrenOfTypeNodeDef (self, *args, **kwargs):
      '''_getChildrenOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::NodeDef]
'''
    ...
    def _getChildrenOfTypeNodeGraph (self, *args, **kwargs):
      '''_getChildrenOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::NodeGraph]
'''
    ...
    def _getChildrenOfTypeProperty (self, *args, **kwargs):
      '''_getChildrenOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Property]
'''
    ...
    def _getChildrenOfTypePropertySet (self, *args, **kwargs):
      '''_getChildrenOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::PropertySet]
'''
    ...
    def _getChildrenOfTypePropertySetAssign (self, *args, **kwargs):
      '''_getChildrenOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::PropertySetAssign]
'''
    ...
    def _getChildrenOfTypeToken (self, *args, **kwargs):
      '''_getChildrenOfTypeToken(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Token]
'''
    ...
    def _getChildrenOfTypeTypeDef (self, *args, **kwargs):
      '''_getChildrenOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::TypeDef]
'''
    ...
    def _getChildrenOfTypeVisibility (self, *args, **kwargs):
      '''_getChildrenOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Visibility]
'''
    ...
    def _removeChildOfTypeCollection (self, *args, **kwargs):
      '''_removeChildOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeDocument (self, *args, **kwargs):
      '''_removeChildOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeGeomInfo (self, *args, **kwargs):
      '''_removeChildOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeGeomProp (self, *args, **kwargs):
      '''_removeChildOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeImplementation (self, *args, **kwargs):
      '''_removeChildOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeLook (self, *args, **kwargs):
      '''_removeChildOfTypeLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeMaterialAssign (self, *args, **kwargs):
      '''_removeChildOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNode (self, *args, **kwargs):
      '''_removeChildOfTypeNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNodeDef (self, *args, **kwargs):
      '''_removeChildOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNodeGraph (self, *args, **kwargs):
      '''_removeChildOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeProperty (self, *args, **kwargs):
      '''_removeChildOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypePropertySet (self, *args, **kwargs):
      '''_removeChildOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypePropertySetAssign (self, *args, **kwargs):
      '''_removeChildOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeToken (self, *args, **kwargs):
      '''_removeChildOfTypeToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeTypeDef (self, *args, **kwargs):
      '''_removeChildOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeVisibility (self, *args, **kwargs):
      '''_removeChildOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def addChild (self, elementClass, name, typeString=''):
      '''Add a child element of the given subclass, name, and optional type string.'''
    ...
    def addChildOfCategory (self, *args, **kwargs):
      '''addChildOfCategory(self: MaterialX.PyMaterialXCore.Element, category: str, name: str = '') -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def asString (self, *args, **kwargs):
      '''asString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def changeChildCategory (self, *args, **kwargs):
      '''changeChildCategory(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element, arg1: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def clearContent (self, *args, **kwargs):
      '''clearContent(self: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def copyContentFrom (self, *args, **kwargs):
      '''copyContentFrom(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def createStringResolver (self, *args, **kwargs):
      '''createStringResolver(self: MaterialX.PyMaterialXCore.Element, geom: str = '') -> MaterialX_v1_38_8::StringResolver
'''
    ...
    def createValidChildName (self, *args, **kwargs):
      '''createValidChildName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getActiveColorSpace (self, *args, **kwargs):
      '''getActiveColorSpace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveFilePrefix (self, *args, **kwargs):
      '''getActiveFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveGeomPrefix (self, *args, **kwargs):
      '''getActiveGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveSourceUri (self, *args, **kwargs):
      '''getActiveSourceUri(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getAttrName (self, *args, **kwargs):
      '''getAttrName(self: MaterialX.PyMaterialXCore.AttributeDef) -> str
'''
    ...
    def getAttribute (self, *args, **kwargs):
      '''getAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getAttributeNames (self, *args, **kwargs):
      '''getAttributeNames(self: MaterialX.PyMaterialXCore.Element) -> List[str]
'''
    ...
    def getCategory (self, *args, **kwargs):
      '''getCategory(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getChild (self, name):
      '''Return the child element, if any, with the given name.'''
    ...
    def getChildIndex (self, *args, **kwargs):
      '''getChildIndex(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> int
'''
    ...
    def getChildOfType (self, elementClass, name):
      '''Return the child element, if any, with the given name and subclass.'''
    ...
    def getChildren (self, *args, **kwargs):
      '''getChildren(self: MaterialX.PyMaterialXCore.Element) -> List[MaterialX.PyMaterialXCore.Element]
'''
    ...
    def getChildrenOfType (self, elementClass):
      '''Return a list of all child elements that are instances of the given type.
       The returned list maintains the order in which children were added.'''
    ...
    def getColorSpace (self, *args, **kwargs):
      '''getColorSpace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getDescendant (self, *args, **kwargs):
      '''getDescendant(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getDocString (self, *args, **kwargs):
      '''getDocString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getDocument (self, *args, **kwargs):
      '''getDocument(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::Document
'''
    ...
    def getExportable (self, *args, **kwargs):
      '''getExportable(self: MaterialX.PyMaterialXCore.AttributeDef) -> bool
'''
    ...
    def getFilePrefix (self, *args, **kwargs):
      '''getFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getGeomPrefix (self, *args, **kwargs):
      '''getGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getInheritString (self, *args, **kwargs):
      '''getInheritString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getInheritsFrom (self, *args, **kwargs):
      '''getInheritsFrom(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getName (self, *args, **kwargs):
      '''getName(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getNamePath (self, *args, **kwargs):
      '''getNamePath(self: MaterialX.PyMaterialXCore.Element, relativeTo: MaterialX.PyMaterialXCore.Element = None) -> str
'''
    ...
    def getNamespace (self, *args, **kwargs):
      '''getNamespace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getParent (self, *args, **kwargs):
      '''getParent(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getQualifiedName (self, *args, **kwargs):
      '''getQualifiedName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getRoot (self, *args, **kwargs):
      '''getRoot(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getSelf (self, *args, **kwargs):
      '''getSelf(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getSourceUri (self, *args, **kwargs):
      '''getSourceUri(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getType (self, *args, **kwargs):
      '''getType(self: MaterialX.PyMaterialXCore.TypedElement) -> str
'''
    ...
    def getTypeDef (self, *args, **kwargs):
      '''getTypeDef(self: MaterialX.PyMaterialXCore.TypedElement) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def getUpstreamEdge (self, *args, **kwargs):
      '''getUpstreamEdge(self: MaterialX.PyMaterialXCore.Element, index: int = 0) -> MaterialX_v1_38_8::Edge
'''
    ...
    def getUpstreamEdgeCount (self, *args, **kwargs):
      '''getUpstreamEdgeCount(self: MaterialX.PyMaterialXCore.Element) -> int
'''
    ...
    def getUpstreamElement (self, *args, **kwargs):
      '''getUpstreamElement(self: MaterialX.PyMaterialXCore.Element, index: int = 0) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getValueString (self, *args, **kwargs):
      '''getValueString(self: MaterialX.PyMaterialXCore.AttributeDef) -> str
'''
    ...
    def hasAttrName (self, *args, **kwargs):
      '''hasAttrName(self: MaterialX.PyMaterialXCore.AttributeDef) -> bool
'''
    ...
    def hasAttribute (self, *args, **kwargs):
      '''hasAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> bool
'''
    ...
    def hasColorSpace (self, *args, **kwargs):
      '''hasColorSpace(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasFilePrefix (self, *args, **kwargs):
      '''hasFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasGeomPrefix (self, *args, **kwargs):
      '''hasGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritString (self, *args, **kwargs):
      '''hasInheritString(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritanceCycle (self, *args, **kwargs):
      '''hasInheritanceCycle(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritedBase (self, *args, **kwargs):
      '''hasInheritedBase(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasNamespace (self, *args, **kwargs):
      '''hasNamespace(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasSourceUri (self, *args, **kwargs):
      '''hasSourceUri(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasType (self, *args, **kwargs):
      '''hasType(self: MaterialX.PyMaterialXCore.TypedElement) -> bool
'''
    ...
    def hasValueString (self, *args, **kwargs):
      '''hasValueString(self: MaterialX.PyMaterialXCore.AttributeDef) -> bool
'''
    ...
    def isA (self, elementClass, category=''):
      '''Return True if this element is an instance of the given subclass.
       If a category string is specified, then both subclass and category
       matches are required.'''
    ...
    def isMultiOutputType (self, *args, **kwargs):
      '''isMultiOutputType(self: MaterialX.PyMaterialXCore.TypedElement) -> bool
'''
    ...
    def removeAttribute (self, *args, **kwargs):
      '''removeAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def removeChild (self, *args, **kwargs):
      '''removeChild(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def removeChildOfType (self, elementClass, name):
      '''Remove the typed child element, if any, with the given name.'''
    ...
    def setAttrName (self, *args, **kwargs):
      '''setAttrName(self: MaterialX.PyMaterialXCore.AttributeDef, arg0: str) -> None
'''
    ...
    def setAttribute (self, *args, **kwargs):
      '''setAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str, arg1: str) -> None
'''
    ...
    def setCategory (self, *args, **kwargs):
      '''setCategory(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setChildIndex (self, *args, **kwargs):
      '''setChildIndex(self: MaterialX.PyMaterialXCore.Element, arg0: str, arg1: int) -> None
'''
    ...
    def setColorSpace (self, *args, **kwargs):
      '''setColorSpace(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setDocString (self, *args, **kwargs):
      '''setDocString(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setExportable (self, *args, **kwargs):
      '''setExportable(self: MaterialX.PyMaterialXCore.AttributeDef, arg0: bool) -> None
'''
    ...
    def setFilePrefix (self, *args, **kwargs):
      '''setFilePrefix(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setGeomPrefix (self, *args, **kwargs):
      '''setGeomPrefix(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setInheritString (self, *args, **kwargs):
      '''setInheritString(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setInheritsFrom (self, *args, **kwargs):
      '''setInheritsFrom(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def setName (self, *args, **kwargs):
      '''setName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setNamespace (self, *args, **kwargs):
      '''setNamespace(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setSourceUri (self, *args, **kwargs):
      '''setSourceUri(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setType (self, *args, **kwargs):
      '''setType(self: MaterialX.PyMaterialXCore.TypedElement, arg0: str) -> None
'''
    ...
    def setValueString (self, *args, **kwargs):
      '''setValueString(self: MaterialX.PyMaterialXCore.AttributeDef, arg0: str) -> None
'''
    ...
    def traverseGraph (self, *args, **kwargs):
      '''traverseGraph(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::GraphIterator
'''
    ...
    def traverseInheritance (self, *args, **kwargs):
      '''traverseInheritance(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::InheritanceIterator
'''
    ...
    def traverseTree (self, *args, **kwargs):
      '''traverseTree(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::TreeIterator
'''
    ...
    def validate (self, *args, **kwargs):
      '''validate(self: MaterialX.PyMaterialXCore.Element) -> Tuple[bool, str]
'''
    ...

def BSDF_TYPE_STRING (*args):
      '''

'''      
    ...

def Backdrop (*args):
      '''

'''      
    ...

class Backdrop:
    def CATEGORY (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def CONTAINS_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def HEIGHT_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def WIDTH_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def _addChildCollection (self, *args, **kwargs):
      '''_addChildCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Collection
'''
    ...
    def _addChildDocument (self, *args, **kwargs):
      '''_addChildDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Document
'''
    ...
    def _addChildGeomInfo (self, *args, **kwargs):
      '''_addChildGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomInfo
'''
    ...
    def _addChildGeomProp (self, *args, **kwargs):
      '''_addChildGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def _addChildImplementation (self, *args, **kwargs):
      '''_addChildImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Implementation
'''
    ...
    def _addChildLook (self, *args, **kwargs):
      '''_addChildLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Look
'''
    ...
    def _addChildMaterialAssign (self, *args, **kwargs):
      '''_addChildMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::MaterialAssign
'''
    ...
    def _addChildNode (self, *args, **kwargs):
      '''_addChildNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Node
'''
    ...
    def _addChildNodeDef (self, *args, **kwargs):
      '''_addChildNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeDef
'''
    ...
    def _addChildNodeGraph (self, *args, **kwargs):
      '''_addChildNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeGraph
'''
    ...
    def _addChildProperty (self, *args, **kwargs):
      '''_addChildProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Property
'''
    ...
    def _addChildPropertySet (self, *args, **kwargs):
      '''_addChildPropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySet
'''
    ...
    def _addChildPropertySetAssign (self, *args, **kwargs):
      '''_addChildPropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySetAssign
'''
    ...
    def _addChildToken (self, *args, **kwargs):
      '''_addChildToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Token
'''
    ...
    def _addChildTypeDef (self, *args, **kwargs):
      '''_addChildTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def _addChildVisibility (self, *args, **kwargs):
      '''_addChildVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Visibility
'''
    ...
    def _getChild (self, *args, **kwargs):
      '''_getChild(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def _getChildOfTypeCollection (self, *args, **kwargs):
      '''_getChildOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Collection
'''
    ...
    def _getChildOfTypeDocument (self, *args, **kwargs):
      '''_getChildOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Document
'''
    ...
    def _getChildOfTypeGeomInfo (self, *args, **kwargs):
      '''_getChildOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomInfo
'''
    ...
    def _getChildOfTypeGeomProp (self, *args, **kwargs):
      '''_getChildOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def _getChildOfTypeImplementation (self, *args, **kwargs):
      '''_getChildOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Implementation
'''
    ...
    def _getChildOfTypeLook (self, *args, **kwargs):
      '''_getChildOfTypeLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Look
'''
    ...
    def _getChildOfTypeMaterialAssign (self, *args, **kwargs):
      '''_getChildOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::MaterialAssign
'''
    ...
    def _getChildOfTypeNode (self, *args, **kwargs):
      '''_getChildOfTypeNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Node
'''
    ...
    def _getChildOfTypeNodeDef (self, *args, **kwargs):
      '''_getChildOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeDef
'''
    ...
    def _getChildOfTypeNodeGraph (self, *args, **kwargs):
      '''_getChildOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeGraph
'''
    ...
    def _getChildOfTypeProperty (self, *args, **kwargs):
      '''_getChildOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Property
'''
    ...
    def _getChildOfTypePropertySet (self, *args, **kwargs):
      '''_getChildOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySet
'''
    ...
    def _getChildOfTypePropertySetAssign (self, *args, **kwargs):
      '''_getChildOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySetAssign
'''
    ...
    def _getChildOfTypeToken (self, *args, **kwargs):
      '''_getChildOfTypeToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Token
'''
    ...
    def _getChildOfTypeTypeDef (self, *args, **kwargs):
      '''_getChildOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def _getChildOfTypeVisibility (self, *args, **kwargs):
      '''_getChildOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Visibility
'''
    ...
    def _getChildrenOfTypeCollection (self, *args, **kwargs):
      '''_getChildrenOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Collection]
'''
    ...
    def _getChildrenOfTypeDocument (self, *args, **kwargs):
      '''_getChildrenOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Document]
'''
    ...
    def _getChildrenOfTypeGeomInfo (self, *args, **kwargs):
      '''_getChildrenOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::GeomInfo]
'''
    ...
    def _getChildrenOfTypeGeomProp (self, *args, **kwargs):
      '''_getChildrenOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::GeomProp]
'''
    ...
    def _getChildrenOfTypeImplementation (self, *args, **kwargs):
      '''_getChildrenOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Implementation]
'''
    ...
    def _getChildrenOfTypeLook (self, *args, **kwargs):
      '''_getChildrenOfTypeLook(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Look]
'''
    ...
    def _getChildrenOfTypeMaterialAssign (self, *args, **kwargs):
      '''_getChildrenOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::MaterialAssign]
'''
    ...
    def _getChildrenOfTypeNode (self, *args, **kwargs):
      '''_getChildrenOfTypeNode(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Node]
'''
    ...
    def _getChildrenOfTypeNodeDef (self, *args, **kwargs):
      '''_getChildrenOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::NodeDef]
'''
    ...
    def _getChildrenOfTypeNodeGraph (self, *args, **kwargs):
      '''_getChildrenOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::NodeGraph]
'''
    ...
    def _getChildrenOfTypeProperty (self, *args, **kwargs):
      '''_getChildrenOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Property]
'''
    ...
    def _getChildrenOfTypePropertySet (self, *args, **kwargs):
      '''_getChildrenOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::PropertySet]
'''
    ...
    def _getChildrenOfTypePropertySetAssign (self, *args, **kwargs):
      '''_getChildrenOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::PropertySetAssign]
'''
    ...
    def _getChildrenOfTypeToken (self, *args, **kwargs):
      '''_getChildrenOfTypeToken(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Token]
'''
    ...
    def _getChildrenOfTypeTypeDef (self, *args, **kwargs):
      '''_getChildrenOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::TypeDef]
'''
    ...
    def _getChildrenOfTypeVisibility (self, *args, **kwargs):
      '''_getChildrenOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Visibility]
'''
    ...
    def _removeChildOfTypeCollection (self, *args, **kwargs):
      '''_removeChildOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeDocument (self, *args, **kwargs):
      '''_removeChildOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeGeomInfo (self, *args, **kwargs):
      '''_removeChildOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeGeomProp (self, *args, **kwargs):
      '''_removeChildOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeImplementation (self, *args, **kwargs):
      '''_removeChildOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeLook (self, *args, **kwargs):
      '''_removeChildOfTypeLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeMaterialAssign (self, *args, **kwargs):
      '''_removeChildOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNode (self, *args, **kwargs):
      '''_removeChildOfTypeNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNodeDef (self, *args, **kwargs):
      '''_removeChildOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNodeGraph (self, *args, **kwargs):
      '''_removeChildOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeProperty (self, *args, **kwargs):
      '''_removeChildOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypePropertySet (self, *args, **kwargs):
      '''_removeChildOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypePropertySetAssign (self, *args, **kwargs):
      '''_removeChildOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeToken (self, *args, **kwargs):
      '''_removeChildOfTypeToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeTypeDef (self, *args, **kwargs):
      '''_removeChildOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeVisibility (self, *args, **kwargs):
      '''_removeChildOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def addChild (self, elementClass, name, typeString=''):
      '''Add a child element of the given subclass, name, and optional type string.'''
    ...
    def addChildOfCategory (self, *args, **kwargs):
      '''addChildOfCategory(self: MaterialX.PyMaterialXCore.Element, category: str, name: str = '') -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def asString (self, *args, **kwargs):
      '''asString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def changeChildCategory (self, *args, **kwargs):
      '''changeChildCategory(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element, arg1: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def clearContent (self, *args, **kwargs):
      '''clearContent(self: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def copyContentFrom (self, *args, **kwargs):
      '''copyContentFrom(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def createStringResolver (self, *args, **kwargs):
      '''createStringResolver(self: MaterialX.PyMaterialXCore.Element, geom: str = '') -> MaterialX_v1_38_8::StringResolver
'''
    ...
    def createValidChildName (self, *args, **kwargs):
      '''createValidChildName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getActiveColorSpace (self, *args, **kwargs):
      '''getActiveColorSpace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveFilePrefix (self, *args, **kwargs):
      '''getActiveFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveGeomPrefix (self, *args, **kwargs):
      '''getActiveGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveSourceUri (self, *args, **kwargs):
      '''getActiveSourceUri(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getAttribute (self, *args, **kwargs):
      '''getAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getAttributeNames (self, *args, **kwargs):
      '''getAttributeNames(self: MaterialX.PyMaterialXCore.Element) -> List[str]
'''
    ...
    def getCategory (self, *args, **kwargs):
      '''getCategory(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getChild (self, name):
      '''Return the child element, if any, with the given name.'''
    ...
    def getChildIndex (self, *args, **kwargs):
      '''getChildIndex(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> int
'''
    ...
    def getChildOfType (self, elementClass, name):
      '''Return the child element, if any, with the given name and subclass.'''
    ...
    def getChildren (self, *args, **kwargs):
      '''getChildren(self: MaterialX.PyMaterialXCore.Element) -> List[MaterialX.PyMaterialXCore.Element]
'''
    ...
    def getChildrenOfType (self, elementClass):
      '''Return a list of all child elements that are instances of the given type.
       The returned list maintains the order in which children were added.'''
    ...
    def getColorSpace (self, *args, **kwargs):
      '''getColorSpace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getContainsElements (self, *args, **kwargs):
      '''getContainsElements(self: MaterialX.PyMaterialXCore.Backdrop) -> List[MaterialX.PyMaterialXCore.TypedElement]
'''
    ...
    def getContainsString (self, *args, **kwargs):
      '''getContainsString(self: MaterialX.PyMaterialXCore.Backdrop) -> str
'''
    ...
    def getDescendant (self, *args, **kwargs):
      '''getDescendant(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getDocString (self, *args, **kwargs):
      '''getDocString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getDocument (self, *args, **kwargs):
      '''getDocument(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::Document
'''
    ...
    def getFilePrefix (self, *args, **kwargs):
      '''getFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getGeomPrefix (self, *args, **kwargs):
      '''getGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getHeight (self, *args, **kwargs):
      '''getHeight(self: MaterialX.PyMaterialXCore.Backdrop) -> float
'''
    ...
    def getInheritString (self, *args, **kwargs):
      '''getInheritString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getInheritsFrom (self, *args, **kwargs):
      '''getInheritsFrom(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getName (self, *args, **kwargs):
      '''getName(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getNamePath (self, *args, **kwargs):
      '''getNamePath(self: MaterialX.PyMaterialXCore.Element, relativeTo: MaterialX.PyMaterialXCore.Element = None) -> str
'''
    ...
    def getNamespace (self, *args, **kwargs):
      '''getNamespace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getParent (self, *args, **kwargs):
      '''getParent(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getQualifiedName (self, *args, **kwargs):
      '''getQualifiedName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getRoot (self, *args, **kwargs):
      '''getRoot(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getSelf (self, *args, **kwargs):
      '''getSelf(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getSourceUri (self, *args, **kwargs):
      '''getSourceUri(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getUpstreamEdge (self, *args, **kwargs):
      '''getUpstreamEdge(self: MaterialX.PyMaterialXCore.Element, index: int = 0) -> MaterialX_v1_38_8::Edge
'''
    ...
    def getUpstreamEdgeCount (self, *args, **kwargs):
      '''getUpstreamEdgeCount(self: MaterialX.PyMaterialXCore.Element) -> int
'''
    ...
    def getUpstreamElement (self, *args, **kwargs):
      '''getUpstreamElement(self: MaterialX.PyMaterialXCore.Element, index: int = 0) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getWidth (self, *args, **kwargs):
      '''getWidth(self: MaterialX.PyMaterialXCore.Backdrop) -> float
'''
    ...
    def hasAttribute (self, *args, **kwargs):
      '''hasAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> bool
'''
    ...
    def hasColorSpace (self, *args, **kwargs):
      '''hasColorSpace(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasContainsString (self, *args, **kwargs):
      '''hasContainsString(self: MaterialX.PyMaterialXCore.Backdrop) -> bool
'''
    ...
    def hasFilePrefix (self, *args, **kwargs):
      '''hasFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasGeomPrefix (self, *args, **kwargs):
      '''hasGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasHeight (self, *args, **kwargs):
      '''hasHeight(self: MaterialX.PyMaterialXCore.Backdrop) -> bool
'''
    ...
    def hasInheritString (self, *args, **kwargs):
      '''hasInheritString(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritanceCycle (self, *args, **kwargs):
      '''hasInheritanceCycle(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritedBase (self, *args, **kwargs):
      '''hasInheritedBase(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasNamespace (self, *args, **kwargs):
      '''hasNamespace(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasSourceUri (self, *args, **kwargs):
      '''hasSourceUri(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasWidth (self, *args, **kwargs):
      '''hasWidth(self: MaterialX.PyMaterialXCore.Backdrop) -> bool
'''
    ...
    def isA (self, elementClass, category=''):
      '''Return True if this element is an instance of the given subclass.
       If a category string is specified, then both subclass and category
       matches are required.'''
    ...
    def removeAttribute (self, *args, **kwargs):
      '''removeAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def removeChild (self, *args, **kwargs):
      '''removeChild(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def removeChildOfType (self, elementClass, name):
      '''Remove the typed child element, if any, with the given name.'''
    ...
    def setAttribute (self, *args, **kwargs):
      '''setAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str, arg1: str) -> None
'''
    ...
    def setCategory (self, *args, **kwargs):
      '''setCategory(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setChildIndex (self, *args, **kwargs):
      '''setChildIndex(self: MaterialX.PyMaterialXCore.Element, arg0: str, arg1: int) -> None
'''
    ...
    def setColorSpace (self, *args, **kwargs):
      '''setColorSpace(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setContainsElements (self, *args, **kwargs):
      '''setContainsElements(self: MaterialX.PyMaterialXCore.Backdrop, arg0: List[MaterialX.PyMaterialXCore.TypedElement]) -> None
'''
    ...
    def setContainsString (self, *args, **kwargs):
      '''setContainsString(self: MaterialX.PyMaterialXCore.Backdrop, arg0: str) -> None
'''
    ...
    def setDocString (self, *args, **kwargs):
      '''setDocString(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setFilePrefix (self, *args, **kwargs):
      '''setFilePrefix(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setGeomPrefix (self, *args, **kwargs):
      '''setGeomPrefix(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setHeight (self, *args, **kwargs):
      '''setHeight(self: MaterialX.PyMaterialXCore.Backdrop, arg0: float) -> None
'''
    ...
    def setInheritString (self, *args, **kwargs):
      '''setInheritString(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setInheritsFrom (self, *args, **kwargs):
      '''setInheritsFrom(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def setName (self, *args, **kwargs):
      '''setName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setNamespace (self, *args, **kwargs):
      '''setNamespace(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setSourceUri (self, *args, **kwargs):
      '''setSourceUri(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setWidth (self, *args, **kwargs):
      '''setWidth(self: MaterialX.PyMaterialXCore.Backdrop, arg0: float) -> None
'''
    ...
    def traverseGraph (self, *args, **kwargs):
      '''traverseGraph(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::GraphIterator
'''
    ...
    def traverseInheritance (self, *args, **kwargs):
      '''traverseInheritance(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::InheritanceIterator
'''
    ...
    def traverseTree (self, *args, **kwargs):
      '''traverseTree(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::TreeIterator
'''
    ...
    def validate (self, *args, **kwargs):
      '''validate(self: MaterialX.PyMaterialXCore.Element) -> Tuple[bool, str]
'''
    ...

def Collection (*args):
      '''

'''      
    ...

class Collection:
    def CATEGORY (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def _addChildCollection (self, *args, **kwargs):
      '''_addChildCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Collection
'''
    ...
    def _addChildDocument (self, *args, **kwargs):
      '''_addChildDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Document
'''
    ...
    def _addChildGeomInfo (self, *args, **kwargs):
      '''_addChildGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomInfo
'''
    ...
    def _addChildGeomProp (self, *args, **kwargs):
      '''_addChildGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def _addChildImplementation (self, *args, **kwargs):
      '''_addChildImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Implementation
'''
    ...
    def _addChildLook (self, *args, **kwargs):
      '''_addChildLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Look
'''
    ...
    def _addChildMaterialAssign (self, *args, **kwargs):
      '''_addChildMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::MaterialAssign
'''
    ...
    def _addChildNode (self, *args, **kwargs):
      '''_addChildNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Node
'''
    ...
    def _addChildNodeDef (self, *args, **kwargs):
      '''_addChildNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeDef
'''
    ...
    def _addChildNodeGraph (self, *args, **kwargs):
      '''_addChildNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeGraph
'''
    ...
    def _addChildProperty (self, *args, **kwargs):
      '''_addChildProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Property
'''
    ...
    def _addChildPropertySet (self, *args, **kwargs):
      '''_addChildPropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySet
'''
    ...
    def _addChildPropertySetAssign (self, *args, **kwargs):
      '''_addChildPropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySetAssign
'''
    ...
    def _addChildToken (self, *args, **kwargs):
      '''_addChildToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Token
'''
    ...
    def _addChildTypeDef (self, *args, **kwargs):
      '''_addChildTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def _addChildVisibility (self, *args, **kwargs):
      '''_addChildVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Visibility
'''
    ...
    def _getChild (self, *args, **kwargs):
      '''_getChild(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def _getChildOfTypeCollection (self, *args, **kwargs):
      '''_getChildOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Collection
'''
    ...
    def _getChildOfTypeDocument (self, *args, **kwargs):
      '''_getChildOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Document
'''
    ...
    def _getChildOfTypeGeomInfo (self, *args, **kwargs):
      '''_getChildOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomInfo
'''
    ...
    def _getChildOfTypeGeomProp (self, *args, **kwargs):
      '''_getChildOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def _getChildOfTypeImplementation (self, *args, **kwargs):
      '''_getChildOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Implementation
'''
    ...
    def _getChildOfTypeLook (self, *args, **kwargs):
      '''_getChildOfTypeLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Look
'''
    ...
    def _getChildOfTypeMaterialAssign (self, *args, **kwargs):
      '''_getChildOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::MaterialAssign
'''
    ...
    def _getChildOfTypeNode (self, *args, **kwargs):
      '''_getChildOfTypeNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Node
'''
    ...
    def _getChildOfTypeNodeDef (self, *args, **kwargs):
      '''_getChildOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeDef
'''
    ...
    def _getChildOfTypeNodeGraph (self, *args, **kwargs):
      '''_getChildOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeGraph
'''
    ...
    def _getChildOfTypeProperty (self, *args, **kwargs):
      '''_getChildOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Property
'''
    ...
    def _getChildOfTypePropertySet (self, *args, **kwargs):
      '''_getChildOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySet
'''
    ...
    def _getChildOfTypePropertySetAssign (self, *args, **kwargs):
      '''_getChildOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySetAssign
'''
    ...
    def _getChildOfTypeToken (self, *args, **kwargs):
      '''_getChildOfTypeToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Token
'''
    ...
    def _getChildOfTypeTypeDef (self, *args, **kwargs):
      '''_getChildOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def _getChildOfTypeVisibility (self, *args, **kwargs):
      '''_getChildOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Visibility
'''
    ...
    def _getChildrenOfTypeCollection (self, *args, **kwargs):
      '''_getChildrenOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Collection]
'''
    ...
    def _getChildrenOfTypeDocument (self, *args, **kwargs):
      '''_getChildrenOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Document]
'''
    ...
    def _getChildrenOfTypeGeomInfo (self, *args, **kwargs):
      '''_getChildrenOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::GeomInfo]
'''
    ...
    def _getChildrenOfTypeGeomProp (self, *args, **kwargs):
      '''_getChildrenOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::GeomProp]
'''
    ...
    def _getChildrenOfTypeImplementation (self, *args, **kwargs):
      '''_getChildrenOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Implementation]
'''
    ...
    def _getChildrenOfTypeLook (self, *args, **kwargs):
      '''_getChildrenOfTypeLook(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Look]
'''
    ...
    def _getChildrenOfTypeMaterialAssign (self, *args, **kwargs):
      '''_getChildrenOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::MaterialAssign]
'''
    ...
    def _getChildrenOfTypeNode (self, *args, **kwargs):
      '''_getChildrenOfTypeNode(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Node]
'''
    ...
    def _getChildrenOfTypeNodeDef (self, *args, **kwargs):
      '''_getChildrenOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::NodeDef]
'''
    ...
    def _getChildrenOfTypeNodeGraph (self, *args, **kwargs):
      '''_getChildrenOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::NodeGraph]
'''
    ...
    def _getChildrenOfTypeProperty (self, *args, **kwargs):
      '''_getChildrenOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Property]
'''
    ...
    def _getChildrenOfTypePropertySet (self, *args, **kwargs):
      '''_getChildrenOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::PropertySet]
'''
    ...
    def _getChildrenOfTypePropertySetAssign (self, *args, **kwargs):
      '''_getChildrenOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::PropertySetAssign]
'''
    ...
    def _getChildrenOfTypeToken (self, *args, **kwargs):
      '''_getChildrenOfTypeToken(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Token]
'''
    ...
    def _getChildrenOfTypeTypeDef (self, *args, **kwargs):
      '''_getChildrenOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::TypeDef]
'''
    ...
    def _getChildrenOfTypeVisibility (self, *args, **kwargs):
      '''_getChildrenOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Visibility]
'''
    ...
    def _removeChildOfTypeCollection (self, *args, **kwargs):
      '''_removeChildOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeDocument (self, *args, **kwargs):
      '''_removeChildOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeGeomInfo (self, *args, **kwargs):
      '''_removeChildOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeGeomProp (self, *args, **kwargs):
      '''_removeChildOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeImplementation (self, *args, **kwargs):
      '''_removeChildOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeLook (self, *args, **kwargs):
      '''_removeChildOfTypeLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeMaterialAssign (self, *args, **kwargs):
      '''_removeChildOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNode (self, *args, **kwargs):
      '''_removeChildOfTypeNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNodeDef (self, *args, **kwargs):
      '''_removeChildOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNodeGraph (self, *args, **kwargs):
      '''_removeChildOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeProperty (self, *args, **kwargs):
      '''_removeChildOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypePropertySet (self, *args, **kwargs):
      '''_removeChildOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypePropertySetAssign (self, *args, **kwargs):
      '''_removeChildOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeToken (self, *args, **kwargs):
      '''_removeChildOfTypeToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeTypeDef (self, *args, **kwargs):
      '''_removeChildOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeVisibility (self, *args, **kwargs):
      '''_removeChildOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def addChild (self, elementClass, name, typeString=''):
      '''Add a child element of the given subclass, name, and optional type string.'''
    ...
    def addChildOfCategory (self, *args, **kwargs):
      '''addChildOfCategory(self: MaterialX.PyMaterialXCore.Element, category: str, name: str = '') -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def asString (self, *args, **kwargs):
      '''asString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def changeChildCategory (self, *args, **kwargs):
      '''changeChildCategory(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element, arg1: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def clearContent (self, *args, **kwargs):
      '''clearContent(self: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def copyContentFrom (self, *args, **kwargs):
      '''copyContentFrom(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def createStringResolver (self, *args, **kwargs):
      '''createStringResolver(self: MaterialX.PyMaterialXCore.Element, geom: str = '') -> MaterialX_v1_38_8::StringResolver
'''
    ...
    def createValidChildName (self, *args, **kwargs):
      '''createValidChildName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getActiveColorSpace (self, *args, **kwargs):
      '''getActiveColorSpace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveFilePrefix (self, *args, **kwargs):
      '''getActiveFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveGeomPrefix (self, *args, **kwargs):
      '''getActiveGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveSourceUri (self, *args, **kwargs):
      '''getActiveSourceUri(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getAttribute (self, *args, **kwargs):
      '''getAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getAttributeNames (self, *args, **kwargs):
      '''getAttributeNames(self: MaterialX.PyMaterialXCore.Element) -> List[str]
'''
    ...
    def getCategory (self, *args, **kwargs):
      '''getCategory(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getChild (self, name):
      '''Return the child element, if any, with the given name.'''
    ...
    def getChildIndex (self, *args, **kwargs):
      '''getChildIndex(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> int
'''
    ...
    def getChildOfType (self, elementClass, name):
      '''Return the child element, if any, with the given name and subclass.'''
    ...
    def getChildren (self, *args, **kwargs):
      '''getChildren(self: MaterialX.PyMaterialXCore.Element) -> List[MaterialX.PyMaterialXCore.Element]
'''
    ...
    def getChildrenOfType (self, elementClass):
      '''Return a list of all child elements that are instances of the given type.
       The returned list maintains the order in which children were added.'''
    ...
    def getColorSpace (self, *args, **kwargs):
      '''getColorSpace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getDescendant (self, *args, **kwargs):
      '''getDescendant(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getDocString (self, *args, **kwargs):
      '''getDocString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getDocument (self, *args, **kwargs):
      '''getDocument(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::Document
'''
    ...
    def getExcludeGeom (self, *args, **kwargs):
      '''getExcludeGeom(self: MaterialX.PyMaterialXCore.Collection) -> str
'''
    ...
    def getFilePrefix (self, *args, **kwargs):
      '''getFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getGeomPrefix (self, *args, **kwargs):
      '''getGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getIncludeCollectionString (self, *args, **kwargs):
      '''getIncludeCollectionString(self: MaterialX.PyMaterialXCore.Collection) -> str
'''
    ...
    def getIncludeCollections (self, *args, **kwargs):
      '''getIncludeCollections(self: MaterialX.PyMaterialXCore.Collection) -> List[MaterialX.PyMaterialXCore.Collection]
'''
    ...
    def getIncludeGeom (self, *args, **kwargs):
      '''getIncludeGeom(self: MaterialX.PyMaterialXCore.Collection) -> str
'''
    ...
    def getInheritString (self, *args, **kwargs):
      '''getInheritString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getInheritsFrom (self, *args, **kwargs):
      '''getInheritsFrom(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getName (self, *args, **kwargs):
      '''getName(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getNamePath (self, *args, **kwargs):
      '''getNamePath(self: MaterialX.PyMaterialXCore.Element, relativeTo: MaterialX.PyMaterialXCore.Element = None) -> str
'''
    ...
    def getNamespace (self, *args, **kwargs):
      '''getNamespace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getParent (self, *args, **kwargs):
      '''getParent(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getQualifiedName (self, *args, **kwargs):
      '''getQualifiedName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getRoot (self, *args, **kwargs):
      '''getRoot(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getSelf (self, *args, **kwargs):
      '''getSelf(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getSourceUri (self, *args, **kwargs):
      '''getSourceUri(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getUpstreamEdge (self, *args, **kwargs):
      '''getUpstreamEdge(self: MaterialX.PyMaterialXCore.Element, index: int = 0) -> MaterialX_v1_38_8::Edge
'''
    ...
    def getUpstreamEdgeCount (self, *args, **kwargs):
      '''getUpstreamEdgeCount(self: MaterialX.PyMaterialXCore.Element) -> int
'''
    ...
    def getUpstreamElement (self, *args, **kwargs):
      '''getUpstreamElement(self: MaterialX.PyMaterialXCore.Element, index: int = 0) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def hasAttribute (self, *args, **kwargs):
      '''hasAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> bool
'''
    ...
    def hasColorSpace (self, *args, **kwargs):
      '''hasColorSpace(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasExcludeGeom (self, *args, **kwargs):
      '''hasExcludeGeom(self: MaterialX.PyMaterialXCore.Collection) -> bool
'''
    ...
    def hasFilePrefix (self, *args, **kwargs):
      '''hasFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasGeomPrefix (self, *args, **kwargs):
      '''hasGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasIncludeCollectionString (self, *args, **kwargs):
      '''hasIncludeCollectionString(self: MaterialX.PyMaterialXCore.Collection) -> bool
'''
    ...
    def hasIncludeCycle (self, *args, **kwargs):
      '''hasIncludeCycle(self: MaterialX.PyMaterialXCore.Collection) -> bool
'''
    ...
    def hasIncludeGeom (self, *args, **kwargs):
      '''hasIncludeGeom(self: MaterialX.PyMaterialXCore.Collection) -> bool
'''
    ...
    def hasInheritString (self, *args, **kwargs):
      '''hasInheritString(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritanceCycle (self, *args, **kwargs):
      '''hasInheritanceCycle(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritedBase (self, *args, **kwargs):
      '''hasInheritedBase(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasNamespace (self, *args, **kwargs):
      '''hasNamespace(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasSourceUri (self, *args, **kwargs):
      '''hasSourceUri(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def isA (self, elementClass, category=''):
      '''Return True if this element is an instance of the given subclass.
       If a category string is specified, then both subclass and category
       matches are required.'''
    ...
    def matchesGeomString (self, *args, **kwargs):
      '''matchesGeomString(self: MaterialX.PyMaterialXCore.Collection, arg0: str) -> bool
'''
    ...
    def removeAttribute (self, *args, **kwargs):
      '''removeAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def removeChild (self, *args, **kwargs):
      '''removeChild(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def removeChildOfType (self, elementClass, name):
      '''Remove the typed child element, if any, with the given name.'''
    ...
    def setAttribute (self, *args, **kwargs):
      '''setAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str, arg1: str) -> None
'''
    ...
    def setCategory (self, *args, **kwargs):
      '''setCategory(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setChildIndex (self, *args, **kwargs):
      '''setChildIndex(self: MaterialX.PyMaterialXCore.Element, arg0: str, arg1: int) -> None
'''
    ...
    def setColorSpace (self, *args, **kwargs):
      '''setColorSpace(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setDocString (self, *args, **kwargs):
      '''setDocString(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setExcludeGeom (self, *args, **kwargs):
      '''setExcludeGeom(self: MaterialX.PyMaterialXCore.Collection, arg0: str) -> None
'''
    ...
    def setFilePrefix (self, *args, **kwargs):
      '''setFilePrefix(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setGeomPrefix (self, *args, **kwargs):
      '''setGeomPrefix(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setIncludeCollection (self, *args, **kwargs):
      '''setIncludeCollection(self: MaterialX.PyMaterialXCore.Collection, arg0: MaterialX.PyMaterialXCore.Collection) -> None
'''
    ...
    def setIncludeCollectionString (self, *args, **kwargs):
      '''setIncludeCollectionString(self: MaterialX.PyMaterialXCore.Collection, arg0: str) -> None
'''
    ...
    def setIncludeCollections (self, *args, **kwargs):
      '''setIncludeCollections(self: MaterialX.PyMaterialXCore.Collection, arg0: List[MaterialX.PyMaterialXCore.Collection]) -> None
'''
    ...
    def setIncludeGeom (self, *args, **kwargs):
      '''setIncludeGeom(self: MaterialX.PyMaterialXCore.Collection, arg0: str) -> None
'''
    ...
    def setInheritString (self, *args, **kwargs):
      '''setInheritString(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setInheritsFrom (self, *args, **kwargs):
      '''setInheritsFrom(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def setName (self, *args, **kwargs):
      '''setName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setNamespace (self, *args, **kwargs):
      '''setNamespace(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setSourceUri (self, *args, **kwargs):
      '''setSourceUri(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def traverseGraph (self, *args, **kwargs):
      '''traverseGraph(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::GraphIterator
'''
    ...
    def traverseInheritance (self, *args, **kwargs):
      '''traverseInheritance(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::InheritanceIterator
'''
    ...
    def traverseTree (self, *args, **kwargs):
      '''traverseTree(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::TreeIterator
'''
    ...
    def validate (self, *args, **kwargs):
      '''validate(self: MaterialX.PyMaterialXCore.Element) -> Tuple[bool, str]
'''
    ...

def Color3 (*args):
      '''

'''      
    ...

class Color3:
    def asTuple (self, *args, **kwargs):
      '''asTuple(self: MaterialX.PyMaterialXCore.Color3) -> Tuple[float, float, float]
'''
    ...
    def copy (self, *args, **kwargs):
      '''copy(self: MaterialX.PyMaterialXCore.Color3) -> MaterialX.PyMaterialXCore.Color3
'''
    ...
    def dot (self, *args, **kwargs):
      '''dot(self: MaterialX.PyMaterialXCore.Color3, arg0: MaterialX.PyMaterialXCore.Color3) -> float
'''
    ...
    def getMagnitude (self, *args, **kwargs):
      '''getMagnitude(self: MaterialX.PyMaterialXCore.Color3) -> float
'''
    ...
    def getNormalized (self, *args, **kwargs):
      '''getNormalized(self: MaterialX.PyMaterialXCore.Color3) -> MaterialX.PyMaterialXCore.Color3
'''
    ...
    def linearToSrgb (self, *args, **kwargs):
      '''linearToSrgb(self: MaterialX.PyMaterialXCore.Color3) -> MaterialX.PyMaterialXCore.Color3
'''
    ...
    def srgbToLinear (self, *args, **kwargs):
      '''srgbToLinear(self: MaterialX.PyMaterialXCore.Color3) -> MaterialX.PyMaterialXCore.Color3
'''
    ...

def Color4 (*args):
      '''

'''      
    ...

class Color4:
    def asTuple (self, *args, **kwargs):
      '''asTuple(self: MaterialX.PyMaterialXCore.Color4) -> Tuple[float, float, float, float]
'''
    ...
    def copy (self, *args, **kwargs):
      '''copy(self: MaterialX.PyMaterialXCore.Color4) -> MaterialX.PyMaterialXCore.Color4
'''
    ...
    def dot (self, *args, **kwargs):
      '''dot(self: MaterialX.PyMaterialXCore.Color4, arg0: MaterialX.PyMaterialXCore.Color4) -> float
'''
    ...
    def getMagnitude (self, *args, **kwargs):
      '''getMagnitude(self: MaterialX.PyMaterialXCore.Color4) -> float
'''
    ...
    def getNormalized (self, *args, **kwargs):
      '''getNormalized(self: MaterialX.PyMaterialXCore.Color4) -> MaterialX.PyMaterialXCore.Color4
'''
    ...

def CommentElement (*args):
      '''

'''      
    ...

class CommentElement:
    def CATEGORY (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def _addChildCollection (self, *args, **kwargs):
      '''_addChildCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Collection
'''
    ...
    def _addChildDocument (self, *args, **kwargs):
      '''_addChildDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Document
'''
    ...
    def _addChildGeomInfo (self, *args, **kwargs):
      '''_addChildGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomInfo
'''
    ...
    def _addChildGeomProp (self, *args, **kwargs):
      '''_addChildGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def _addChildImplementation (self, *args, **kwargs):
      '''_addChildImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Implementation
'''
    ...
    def _addChildLook (self, *args, **kwargs):
      '''_addChildLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Look
'''
    ...
    def _addChildMaterialAssign (self, *args, **kwargs):
      '''_addChildMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::MaterialAssign
'''
    ...
    def _addChildNode (self, *args, **kwargs):
      '''_addChildNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Node
'''
    ...
    def _addChildNodeDef (self, *args, **kwargs):
      '''_addChildNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeDef
'''
    ...
    def _addChildNodeGraph (self, *args, **kwargs):
      '''_addChildNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeGraph
'''
    ...
    def _addChildProperty (self, *args, **kwargs):
      '''_addChildProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Property
'''
    ...
    def _addChildPropertySet (self, *args, **kwargs):
      '''_addChildPropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySet
'''
    ...
    def _addChildPropertySetAssign (self, *args, **kwargs):
      '''_addChildPropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySetAssign
'''
    ...
    def _addChildToken (self, *args, **kwargs):
      '''_addChildToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Token
'''
    ...
    def _addChildTypeDef (self, *args, **kwargs):
      '''_addChildTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def _addChildVisibility (self, *args, **kwargs):
      '''_addChildVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Visibility
'''
    ...
    def _getChild (self, *args, **kwargs):
      '''_getChild(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def _getChildOfTypeCollection (self, *args, **kwargs):
      '''_getChildOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Collection
'''
    ...
    def _getChildOfTypeDocument (self, *args, **kwargs):
      '''_getChildOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Document
'''
    ...
    def _getChildOfTypeGeomInfo (self, *args, **kwargs):
      '''_getChildOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomInfo
'''
    ...
    def _getChildOfTypeGeomProp (self, *args, **kwargs):
      '''_getChildOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def _getChildOfTypeImplementation (self, *args, **kwargs):
      '''_getChildOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Implementation
'''
    ...
    def _getChildOfTypeLook (self, *args, **kwargs):
      '''_getChildOfTypeLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Look
'''
    ...
    def _getChildOfTypeMaterialAssign (self, *args, **kwargs):
      '''_getChildOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::MaterialAssign
'''
    ...
    def _getChildOfTypeNode (self, *args, **kwargs):
      '''_getChildOfTypeNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Node
'''
    ...
    def _getChildOfTypeNodeDef (self, *args, **kwargs):
      '''_getChildOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeDef
'''
    ...
    def _getChildOfTypeNodeGraph (self, *args, **kwargs):
      '''_getChildOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeGraph
'''
    ...
    def _getChildOfTypeProperty (self, *args, **kwargs):
      '''_getChildOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Property
'''
    ...
    def _getChildOfTypePropertySet (self, *args, **kwargs):
      '''_getChildOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySet
'''
    ...
    def _getChildOfTypePropertySetAssign (self, *args, **kwargs):
      '''_getChildOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySetAssign
'''
    ...
    def _getChildOfTypeToken (self, *args, **kwargs):
      '''_getChildOfTypeToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Token
'''
    ...
    def _getChildOfTypeTypeDef (self, *args, **kwargs):
      '''_getChildOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def _getChildOfTypeVisibility (self, *args, **kwargs):
      '''_getChildOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Visibility
'''
    ...
    def _getChildrenOfTypeCollection (self, *args, **kwargs):
      '''_getChildrenOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Collection]
'''
    ...
    def _getChildrenOfTypeDocument (self, *args, **kwargs):
      '''_getChildrenOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Document]
'''
    ...
    def _getChildrenOfTypeGeomInfo (self, *args, **kwargs):
      '''_getChildrenOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::GeomInfo]
'''
    ...
    def _getChildrenOfTypeGeomProp (self, *args, **kwargs):
      '''_getChildrenOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::GeomProp]
'''
    ...
    def _getChildrenOfTypeImplementation (self, *args, **kwargs):
      '''_getChildrenOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Implementation]
'''
    ...
    def _getChildrenOfTypeLook (self, *args, **kwargs):
      '''_getChildrenOfTypeLook(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Look]
'''
    ...
    def _getChildrenOfTypeMaterialAssign (self, *args, **kwargs):
      '''_getChildrenOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::MaterialAssign]
'''
    ...
    def _getChildrenOfTypeNode (self, *args, **kwargs):
      '''_getChildrenOfTypeNode(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Node]
'''
    ...
    def _getChildrenOfTypeNodeDef (self, *args, **kwargs):
      '''_getChildrenOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::NodeDef]
'''
    ...
    def _getChildrenOfTypeNodeGraph (self, *args, **kwargs):
      '''_getChildrenOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::NodeGraph]
'''
    ...
    def _getChildrenOfTypeProperty (self, *args, **kwargs):
      '''_getChildrenOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Property]
'''
    ...
    def _getChildrenOfTypePropertySet (self, *args, **kwargs):
      '''_getChildrenOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::PropertySet]
'''
    ...
    def _getChildrenOfTypePropertySetAssign (self, *args, **kwargs):
      '''_getChildrenOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::PropertySetAssign]
'''
    ...
    def _getChildrenOfTypeToken (self, *args, **kwargs):
      '''_getChildrenOfTypeToken(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Token]
'''
    ...
    def _getChildrenOfTypeTypeDef (self, *args, **kwargs):
      '''_getChildrenOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::TypeDef]
'''
    ...
    def _getChildrenOfTypeVisibility (self, *args, **kwargs):
      '''_getChildrenOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Visibility]
'''
    ...
    def _removeChildOfTypeCollection (self, *args, **kwargs):
      '''_removeChildOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeDocument (self, *args, **kwargs):
      '''_removeChildOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeGeomInfo (self, *args, **kwargs):
      '''_removeChildOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeGeomProp (self, *args, **kwargs):
      '''_removeChildOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeImplementation (self, *args, **kwargs):
      '''_removeChildOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeLook (self, *args, **kwargs):
      '''_removeChildOfTypeLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeMaterialAssign (self, *args, **kwargs):
      '''_removeChildOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNode (self, *args, **kwargs):
      '''_removeChildOfTypeNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNodeDef (self, *args, **kwargs):
      '''_removeChildOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNodeGraph (self, *args, **kwargs):
      '''_removeChildOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeProperty (self, *args, **kwargs):
      '''_removeChildOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypePropertySet (self, *args, **kwargs):
      '''_removeChildOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypePropertySetAssign (self, *args, **kwargs):
      '''_removeChildOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeToken (self, *args, **kwargs):
      '''_removeChildOfTypeToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeTypeDef (self, *args, **kwargs):
      '''_removeChildOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeVisibility (self, *args, **kwargs):
      '''_removeChildOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def addChild (self, elementClass, name, typeString=''):
      '''Add a child element of the given subclass, name, and optional type string.'''
    ...
    def addChildOfCategory (self, *args, **kwargs):
      '''addChildOfCategory(self: MaterialX.PyMaterialXCore.Element, category: str, name: str = '') -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def asString (self, *args, **kwargs):
      '''asString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def changeChildCategory (self, *args, **kwargs):
      '''changeChildCategory(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element, arg1: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def clearContent (self, *args, **kwargs):
      '''clearContent(self: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def copyContentFrom (self, *args, **kwargs):
      '''copyContentFrom(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def createStringResolver (self, *args, **kwargs):
      '''createStringResolver(self: MaterialX.PyMaterialXCore.Element, geom: str = '') -> MaterialX_v1_38_8::StringResolver
'''
    ...
    def createValidChildName (self, *args, **kwargs):
      '''createValidChildName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getActiveColorSpace (self, *args, **kwargs):
      '''getActiveColorSpace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveFilePrefix (self, *args, **kwargs):
      '''getActiveFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveGeomPrefix (self, *args, **kwargs):
      '''getActiveGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveSourceUri (self, *args, **kwargs):
      '''getActiveSourceUri(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getAttribute (self, *args, **kwargs):
      '''getAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getAttributeNames (self, *args, **kwargs):
      '''getAttributeNames(self: MaterialX.PyMaterialXCore.Element) -> List[str]
'''
    ...
    def getCategory (self, *args, **kwargs):
      '''getCategory(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getChild (self, name):
      '''Return the child element, if any, with the given name.'''
    ...
    def getChildIndex (self, *args, **kwargs):
      '''getChildIndex(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> int
'''
    ...
    def getChildOfType (self, elementClass, name):
      '''Return the child element, if any, with the given name and subclass.'''
    ...
    def getChildren (self, *args, **kwargs):
      '''getChildren(self: MaterialX.PyMaterialXCore.Element) -> List[MaterialX.PyMaterialXCore.Element]
'''
    ...
    def getChildrenOfType (self, elementClass):
      '''Return a list of all child elements that are instances of the given type.
       The returned list maintains the order in which children were added.'''
    ...
    def getColorSpace (self, *args, **kwargs):
      '''getColorSpace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getDescendant (self, *args, **kwargs):
      '''getDescendant(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getDocString (self, *args, **kwargs):
      '''getDocString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getDocument (self, *args, **kwargs):
      '''getDocument(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::Document
'''
    ...
    def getFilePrefix (self, *args, **kwargs):
      '''getFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getGeomPrefix (self, *args, **kwargs):
      '''getGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getInheritString (self, *args, **kwargs):
      '''getInheritString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getInheritsFrom (self, *args, **kwargs):
      '''getInheritsFrom(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getName (self, *args, **kwargs):
      '''getName(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getNamePath (self, *args, **kwargs):
      '''getNamePath(self: MaterialX.PyMaterialXCore.Element, relativeTo: MaterialX.PyMaterialXCore.Element = None) -> str
'''
    ...
    def getNamespace (self, *args, **kwargs):
      '''getNamespace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getParent (self, *args, **kwargs):
      '''getParent(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getQualifiedName (self, *args, **kwargs):
      '''getQualifiedName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getRoot (self, *args, **kwargs):
      '''getRoot(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getSelf (self, *args, **kwargs):
      '''getSelf(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getSourceUri (self, *args, **kwargs):
      '''getSourceUri(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getUpstreamEdge (self, *args, **kwargs):
      '''getUpstreamEdge(self: MaterialX.PyMaterialXCore.Element, index: int = 0) -> MaterialX_v1_38_8::Edge
'''
    ...
    def getUpstreamEdgeCount (self, *args, **kwargs):
      '''getUpstreamEdgeCount(self: MaterialX.PyMaterialXCore.Element) -> int
'''
    ...
    def getUpstreamElement (self, *args, **kwargs):
      '''getUpstreamElement(self: MaterialX.PyMaterialXCore.Element, index: int = 0) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def hasAttribute (self, *args, **kwargs):
      '''hasAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> bool
'''
    ...
    def hasColorSpace (self, *args, **kwargs):
      '''hasColorSpace(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasFilePrefix (self, *args, **kwargs):
      '''hasFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasGeomPrefix (self, *args, **kwargs):
      '''hasGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritString (self, *args, **kwargs):
      '''hasInheritString(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritanceCycle (self, *args, **kwargs):
      '''hasInheritanceCycle(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritedBase (self, *args, **kwargs):
      '''hasInheritedBase(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasNamespace (self, *args, **kwargs):
      '''hasNamespace(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasSourceUri (self, *args, **kwargs):
      '''hasSourceUri(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def isA (self, elementClass, category=''):
      '''Return True if this element is an instance of the given subclass.
       If a category string is specified, then both subclass and category
       matches are required.'''
    ...
    def removeAttribute (self, *args, **kwargs):
      '''removeAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def removeChild (self, *args, **kwargs):
      '''removeChild(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def removeChildOfType (self, elementClass, name):
      '''Remove the typed child element, if any, with the given name.'''
    ...
    def setAttribute (self, *args, **kwargs):
      '''setAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str, arg1: str) -> None
'''
    ...
    def setCategory (self, *args, **kwargs):
      '''setCategory(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setChildIndex (self, *args, **kwargs):
      '''setChildIndex(self: MaterialX.PyMaterialXCore.Element, arg0: str, arg1: int) -> None
'''
    ...
    def setColorSpace (self, *args, **kwargs):
      '''setColorSpace(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setDocString (self, *args, **kwargs):
      '''setDocString(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setFilePrefix (self, *args, **kwargs):
      '''setFilePrefix(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setGeomPrefix (self, *args, **kwargs):
      '''setGeomPrefix(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setInheritString (self, *args, **kwargs):
      '''setInheritString(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setInheritsFrom (self, *args, **kwargs):
      '''setInheritsFrom(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def setName (self, *args, **kwargs):
      '''setName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setNamespace (self, *args, **kwargs):
      '''setNamespace(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setSourceUri (self, *args, **kwargs):
      '''setSourceUri(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def traverseGraph (self, *args, **kwargs):
      '''traverseGraph(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::GraphIterator
'''
    ...
    def traverseInheritance (self, *args, **kwargs):
      '''traverseInheritance(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::InheritanceIterator
'''
    ...
    def traverseTree (self, *args, **kwargs):
      '''traverseTree(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::TreeIterator
'''
    ...
    def validate (self, *args, **kwargs):
      '''validate(self: MaterialX.PyMaterialXCore.Element) -> Tuple[bool, str]
'''
    ...

def DEFAULT_TYPE_STRING (*args):
      '''

'''      
    ...

def DISPLACEMENT_SHADER_TYPE_STRING (*args):
      '''

'''      
    ...

def Document (*args):
      '''

'''      
    ...

class Document:
    def NODE_DEF_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def TYPE_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def _addChildCollection (self, *args, **kwargs):
      '''_addChildCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Collection
'''
    ...
    def _addChildDocument (self, *args, **kwargs):
      '''_addChildDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Document
'''
    ...
    def _addChildGeomInfo (self, *args, **kwargs):
      '''_addChildGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomInfo
'''
    ...
    def _addChildGeomProp (self, *args, **kwargs):
      '''_addChildGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def _addChildImplementation (self, *args, **kwargs):
      '''_addChildImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Implementation
'''
    ...
    def _addChildLook (self, *args, **kwargs):
      '''_addChildLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Look
'''
    ...
    def _addChildMaterialAssign (self, *args, **kwargs):
      '''_addChildMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::MaterialAssign
'''
    ...
    def _addChildNode (self, *args, **kwargs):
      '''_addChildNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Node
'''
    ...
    def _addChildNodeDef (self, *args, **kwargs):
      '''_addChildNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeDef
'''
    ...
    def _addChildNodeGraph (self, *args, **kwargs):
      '''_addChildNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeGraph
'''
    ...
    def _addChildProperty (self, *args, **kwargs):
      '''_addChildProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Property
'''
    ...
    def _addChildPropertySet (self, *args, **kwargs):
      '''_addChildPropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySet
'''
    ...
    def _addChildPropertySetAssign (self, *args, **kwargs):
      '''_addChildPropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySetAssign
'''
    ...
    def _addChildToken (self, *args, **kwargs):
      '''_addChildToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Token
'''
    ...
    def _addChildTypeDef (self, *args, **kwargs):
      '''_addChildTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def _addChildVisibility (self, *args, **kwargs):
      '''_addChildVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Visibility
'''
    ...
    def _getChild (self, *args, **kwargs):
      '''_getChild(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def _getChildOfTypeCollection (self, *args, **kwargs):
      '''_getChildOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Collection
'''
    ...
    def _getChildOfTypeDocument (self, *args, **kwargs):
      '''_getChildOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Document
'''
    ...
    def _getChildOfTypeGeomInfo (self, *args, **kwargs):
      '''_getChildOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomInfo
'''
    ...
    def _getChildOfTypeGeomProp (self, *args, **kwargs):
      '''_getChildOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def _getChildOfTypeImplementation (self, *args, **kwargs):
      '''_getChildOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Implementation
'''
    ...
    def _getChildOfTypeLook (self, *args, **kwargs):
      '''_getChildOfTypeLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Look
'''
    ...
    def _getChildOfTypeMaterialAssign (self, *args, **kwargs):
      '''_getChildOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::MaterialAssign
'''
    ...
    def _getChildOfTypeNode (self, *args, **kwargs):
      '''_getChildOfTypeNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Node
'''
    ...
    def _getChildOfTypeNodeDef (self, *args, **kwargs):
      '''_getChildOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeDef
'''
    ...
    def _getChildOfTypeNodeGraph (self, *args, **kwargs):
      '''_getChildOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeGraph
'''
    ...
    def _getChildOfTypeProperty (self, *args, **kwargs):
      '''_getChildOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Property
'''
    ...
    def _getChildOfTypePropertySet (self, *args, **kwargs):
      '''_getChildOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySet
'''
    ...
    def _getChildOfTypePropertySetAssign (self, *args, **kwargs):
      '''_getChildOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySetAssign
'''
    ...
    def _getChildOfTypeToken (self, *args, **kwargs):
      '''_getChildOfTypeToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Token
'''
    ...
    def _getChildOfTypeTypeDef (self, *args, **kwargs):
      '''_getChildOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def _getChildOfTypeVisibility (self, *args, **kwargs):
      '''_getChildOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Visibility
'''
    ...
    def _getChildrenOfTypeCollection (self, *args, **kwargs):
      '''_getChildrenOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Collection]
'''
    ...
    def _getChildrenOfTypeDocument (self, *args, **kwargs):
      '''_getChildrenOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Document]
'''
    ...
    def _getChildrenOfTypeGeomInfo (self, *args, **kwargs):
      '''_getChildrenOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::GeomInfo]
'''
    ...
    def _getChildrenOfTypeGeomProp (self, *args, **kwargs):
      '''_getChildrenOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::GeomProp]
'''
    ...
    def _getChildrenOfTypeImplementation (self, *args, **kwargs):
      '''_getChildrenOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Implementation]
'''
    ...
    def _getChildrenOfTypeLook (self, *args, **kwargs):
      '''_getChildrenOfTypeLook(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Look]
'''
    ...
    def _getChildrenOfTypeMaterialAssign (self, *args, **kwargs):
      '''_getChildrenOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::MaterialAssign]
'''
    ...
    def _getChildrenOfTypeNode (self, *args, **kwargs):
      '''_getChildrenOfTypeNode(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Node]
'''
    ...
    def _getChildrenOfTypeNodeDef (self, *args, **kwargs):
      '''_getChildrenOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::NodeDef]
'''
    ...
    def _getChildrenOfTypeNodeGraph (self, *args, **kwargs):
      '''_getChildrenOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::NodeGraph]
'''
    ...
    def _getChildrenOfTypeProperty (self, *args, **kwargs):
      '''_getChildrenOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Property]
'''
    ...
    def _getChildrenOfTypePropertySet (self, *args, **kwargs):
      '''_getChildrenOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::PropertySet]
'''
    ...
    def _getChildrenOfTypePropertySetAssign (self, *args, **kwargs):
      '''_getChildrenOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::PropertySetAssign]
'''
    ...
    def _getChildrenOfTypeToken (self, *args, **kwargs):
      '''_getChildrenOfTypeToken(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Token]
'''
    ...
    def _getChildrenOfTypeTypeDef (self, *args, **kwargs):
      '''_getChildrenOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::TypeDef]
'''
    ...
    def _getChildrenOfTypeVisibility (self, *args, **kwargs):
      '''_getChildrenOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Visibility]
'''
    ...
    def _getInputValue (self, *args, **kwargs):
      '''_getInputValue(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str, arg1: str) -> MaterialX_v1_38_8::Value
'''
    ...
    def _removeChildOfTypeCollection (self, *args, **kwargs):
      '''_removeChildOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeDocument (self, *args, **kwargs):
      '''_removeChildOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeGeomInfo (self, *args, **kwargs):
      '''_removeChildOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeGeomProp (self, *args, **kwargs):
      '''_removeChildOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeImplementation (self, *args, **kwargs):
      '''_removeChildOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeLook (self, *args, **kwargs):
      '''_removeChildOfTypeLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeMaterialAssign (self, *args, **kwargs):
      '''_removeChildOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNode (self, *args, **kwargs):
      '''_removeChildOfTypeNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNodeDef (self, *args, **kwargs):
      '''_removeChildOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNodeGraph (self, *args, **kwargs):
      '''_removeChildOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeProperty (self, *args, **kwargs):
      '''_removeChildOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypePropertySet (self, *args, **kwargs):
      '''_removeChildOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypePropertySetAssign (self, *args, **kwargs):
      '''_removeChildOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeToken (self, *args, **kwargs):
      '''_removeChildOfTypeToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeTypeDef (self, *args, **kwargs):
      '''_removeChildOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeVisibility (self, *args, **kwargs):
      '''_removeChildOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _setInputValueboolean (self, *args, **kwargs):
      '''_setInputValueboolean(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: bool, type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValuebooleanarray (self, *args, **kwargs):
      '''_setInputValuebooleanarray(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: List[bool], type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValuecolor3 (self, *args, **kwargs):
      '''_setInputValuecolor3(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: MaterialX_v1_38_8::Color3, type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValuecolor4 (self, *args, **kwargs):
      '''_setInputValuecolor4(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: MaterialX_v1_38_8::Color4, type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValuefloat (self, *args, **kwargs):
      '''_setInputValuefloat(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: float, type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValuefloatarray (self, *args, **kwargs):
      '''_setInputValuefloatarray(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: List[float], type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValueinteger (self, *args, **kwargs):
      '''_setInputValueinteger(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: int, type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValueintegerarray (self, *args, **kwargs):
      '''_setInputValueintegerarray(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: List[int], type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValuematrix33 (self, *args, **kwargs):
      '''_setInputValuematrix33(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: MaterialX_v1_38_8::Matrix33, type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValuematrix44 (self, *args, **kwargs):
      '''_setInputValuematrix44(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: MaterialX_v1_38_8::Matrix44, type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValuestring (self, *args, **kwargs):
      '''_setInputValuestring(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: str, type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValuestringarray (self, *args, **kwargs):
      '''_setInputValuestringarray(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: List[str], type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValuevector2 (self, *args, **kwargs):
      '''_setInputValuevector2(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: MaterialX_v1_38_8::Vector2, type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValuevector3 (self, *args, **kwargs):
      '''_setInputValuevector3(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: MaterialX_v1_38_8::Vector3, type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValuevector4 (self, *args, **kwargs):
      '''_setInputValuevector4(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: MaterialX_v1_38_8::Vector4, type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def addAttributeDef (self, *args, **kwargs):
      '''addAttributeDef(self: MaterialX.PyMaterialXCore.Document, arg0: str) -> MaterialX.PyMaterialXCore.AttributeDef
'''
    ...
    def addBackdrop (self, *args, **kwargs):
      '''addBackdrop(self: MaterialX.PyMaterialXCore.GraphElement, name: str = '') -> MaterialX_v1_38_8::Backdrop
'''
    ...
    def addBindInput (self, name, type='color3'):
      '''(Deprecated) Add a BindInput to this shader reference.'''
    ...
    def addBindParam (self, name, type='color3'):
      '''(Deprecated) Add a BindParam to this shader reference.'''
    ...
    def addChild (self, elementClass, name, typeString=''):
      '''Add a child element of the given subclass, name, and optional type string.'''
    ...
    def addChildOfCategory (self, *args, **kwargs):
      '''addChildOfCategory(self: MaterialX.PyMaterialXCore.Element, category: str, name: str = '') -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def addCollection (self, *args, **kwargs):
      '''addCollection(self: MaterialX.PyMaterialXCore.Document, name: str = '') -> MaterialX.PyMaterialXCore.Collection
'''
    ...
    def addGeomInfo (self, *args, **kwargs):
      '''addGeomInfo(self: MaterialX.PyMaterialXCore.Document, name: str = '', geom: str = '/') -> MaterialX.PyMaterialXCore.GeomInfo
'''
    ...
    def addGeomNode (self, *args, **kwargs):
      '''addGeomNode(self: MaterialX.PyMaterialXCore.GraphElement, arg0: MaterialX.PyMaterialXCore.GeomPropDef, arg1: str) -> MaterialX.PyMaterialXCore.Node
'''
    ...
    def addGeomPropDef (self, *args, **kwargs):
      '''addGeomPropDef(self: MaterialX.PyMaterialXCore.Document, arg0: str, arg1: str) -> MaterialX.PyMaterialXCore.GeomPropDef
'''
    ...
    def addImplementation (self, *args, **kwargs):
      '''addImplementation(self: MaterialX.PyMaterialXCore.Document, name: str = '') -> MaterialX.PyMaterialXCore.Implementation
'''
    ...
    def addInput (self, *args, **kwargs):
      '''addInput(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str = '', type: str = 'color3') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def addLook (self, *args, **kwargs):
      '''addLook(self: MaterialX.PyMaterialXCore.Document, name: str = '') -> MaterialX.PyMaterialXCore.Look
'''
    ...
    def addLookGroup (self, *args, **kwargs):
      '''addLookGroup(self: MaterialX.PyMaterialXCore.Document, name: str = '') -> MaterialX.PyMaterialXCore.LookGroup
'''
    ...
    def addMaterial (self, name):
      '''(Deprecated) Add a material element to the document.'''
    ...
    def addMaterialNode (self, *args, **kwargs):
      '''addMaterialNode(self: MaterialX.PyMaterialXCore.GraphElement, name: str = '', shaderNode: MaterialX.PyMaterialXCore.Node = None) -> MaterialX.PyMaterialXCore.Node
'''
    ...
    def addNode (self, *args, **kwargs):
      '''addNode(self: MaterialX.PyMaterialXCore.GraphElement, category: str, name: str = '', type: str = 'color3') -> MaterialX.PyMaterialXCore.Node
'''
    ...
    def addNodeDef (self, *args, **kwargs):
      '''addNodeDef(self: MaterialX.PyMaterialXCore.Document, name: str = '', type: str = 'color3', node: str = '') -> MaterialX.PyMaterialXCore.NodeDef
'''
    ...
    def addNodeDefFromGraph (self, *args, **kwargs):
      '''addNodeDefFromGraph(self: MaterialX.PyMaterialXCore.Document, arg0: MaterialX.PyMaterialXCore.NodeGraph, arg1: str, arg2: str, arg3: str, arg4: bool, arg5: str, arg6: str) -> MaterialX.PyMaterialXCore.NodeDef
'''
    ...
    def addNodeGraph (self, *args, **kwargs):
      '''addNodeGraph(self: MaterialX.PyMaterialXCore.Document, name: str = '') -> MaterialX.PyMaterialXCore.NodeGraph
'''
    ...
    def addNodeInstance (self, *args, **kwargs):
      '''addNodeInstance(self: MaterialX.PyMaterialXCore.GraphElement, nodeDef: MaterialX.PyMaterialXCore.NodeDef, name: str = '') -> MaterialX.PyMaterialXCore.Node
'''
    ...
    def addOutput (self, *args, **kwargs):
      '''addOutput(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str = '', type: str = 'color3') -> MaterialX.PyMaterialXCore.Output
'''
    ...
    def addParameter (self, name):
      '''(Deprecated) Add a Parameter to this interface.'''
    ...
    def addPropertySet (self, *args, **kwargs):
      '''addPropertySet(self: MaterialX.PyMaterialXCore.Document, name: str = '') -> MaterialX.PyMaterialXCore.PropertySet
'''
    ...
    def addTargetDef (self, *args, **kwargs):
      '''addTargetDef(self: MaterialX.PyMaterialXCore.Document, arg0: str) -> MaterialX.PyMaterialXCore.TargetDef
'''
    ...
    def addToken (self, *args, **kwargs):
      '''addToken(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str = 'color3') -> MaterialX.PyMaterialXCore.Token
'''
    ...
    def addTypeDef (self, *args, **kwargs):
      '''addTypeDef(self: MaterialX.PyMaterialXCore.Document, name: str = '') -> MaterialX.PyMaterialXCore.TypeDef
'''
    ...
    def addUnitDef (self, *args, **kwargs):
      '''addUnitDef(self: MaterialX.PyMaterialXCore.Document, arg0: str) -> MaterialX.PyMaterialXCore.UnitDef
'''
    ...
    def addUnitTypeDef (self, *args, **kwargs):
      '''addUnitTypeDef(self: MaterialX.PyMaterialXCore.Document, arg0: str) -> MaterialX.PyMaterialXCore.UnitTypeDef
'''
    ...
    def addVariantSet (self, *args, **kwargs):
      '''addVariantSet(self: MaterialX.PyMaterialXCore.Document, name: str = '') -> MaterialX.PyMaterialXCore.VariantSet
'''
    ...
    def asString (self, *args, **kwargs):
      '''asString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def asStringDot (self, *args, **kwargs):
      '''asStringDot(self: MaterialX.PyMaterialXCore.GraphElement) -> str
'''
    ...
    def changeChildCategory (self, *args, **kwargs):
      '''changeChildCategory(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element, arg1: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def clearContent (self, *args, **kwargs):
      '''clearContent(self: MaterialX.PyMaterialXCore.InterfaceElement) -> None
'''
    ...
    def copy (self, *args, **kwargs):
      '''copy(self: MaterialX.PyMaterialXCore.Document) -> MaterialX.PyMaterialXCore.Document
'''
    ...
    def copyContentFrom (self, *args, **kwargs):
      '''copyContentFrom(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def createStringResolver (self, *args, **kwargs):
      '''createStringResolver(self: MaterialX.PyMaterialXCore.Element, geom: str = '') -> MaterialX_v1_38_8::StringResolver
'''
    ...
    def createValidChildName (self, *args, **kwargs):
      '''createValidChildName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def flattenSubgraphs (self, *args, **kwargs):
      '''flattenSubgraphs(self: MaterialX.PyMaterialXCore.GraphElement, target: str = '', filter: Callable[[MaterialX.PyMaterialXCore.Node], bool] = None) -> None
'''
    ...
    def getActiveColorSpace (self, *args, **kwargs):
      '''getActiveColorSpace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveFilePrefix (self, *args, **kwargs):
      '''getActiveFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveGeomPrefix (self, *args, **kwargs):
      '''getActiveGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveInput (self, *args, **kwargs):
      '''getActiveInput(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def getActiveInputs (self, *args, **kwargs):
      '''getActiveInputs(self: MaterialX.PyMaterialXCore.InterfaceElement) -> List[MaterialX.PyMaterialXCore.Input]
'''
    ...
    def getActiveOutput (self, *args, **kwargs):
      '''getActiveOutput(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> MaterialX.PyMaterialXCore.Output
'''
    ...
    def getActiveOutputs (self, *args, **kwargs):
      '''getActiveOutputs(self: MaterialX.PyMaterialXCore.InterfaceElement) -> List[MaterialX.PyMaterialXCore.Output]
'''
    ...
    def getActiveParameters (self):
      '''(Deprecated) Return a vector of all parameters belonging to this interface, taking inheritance into account.'''
    ...
    def getActiveSourceUri (self, *args, **kwargs):
      '''getActiveSourceUri(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveToken (self, *args, **kwargs):
      '''getActiveToken(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> MaterialX.PyMaterialXCore.Token
'''
    ...
    def getActiveTokens (self, *args, **kwargs):
      '''getActiveTokens(self: MaterialX.PyMaterialXCore.InterfaceElement) -> List[MaterialX.PyMaterialXCore.Token]
'''
    ...
    def getActiveValueElement (self, *args, **kwargs):
      '''getActiveValueElement(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> MaterialX.PyMaterialXCore.ValueElement
'''
    ...
    def getActiveValueElements (self, *args, **kwargs):
      '''getActiveValueElements(self: MaterialX.PyMaterialXCore.InterfaceElement) -> List[MaterialX.PyMaterialXCore.ValueElement]
'''
    ...
    def getAttribute (self, *args, **kwargs):
      '''getAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getAttributeDef (self, *args, **kwargs):
      '''getAttributeDef(self: MaterialX.PyMaterialXCore.Document, arg0: str) -> MaterialX.PyMaterialXCore.AttributeDef
'''
    ...
    def getAttributeDefs (self, *args, **kwargs):
      '''getAttributeDefs(self: MaterialX.PyMaterialXCore.Document) -> List[MaterialX.PyMaterialXCore.AttributeDef]
'''
    ...
    def getAttributeNames (self, *args, **kwargs):
      '''getAttributeNames(self: MaterialX.PyMaterialXCore.Element) -> List[str]
'''
    ...
    def getBackdrop (self, *args, **kwargs):
      '''getBackdrop(self: MaterialX.PyMaterialXCore.GraphElement, arg0: str) -> MaterialX_v1_38_8::Backdrop
'''
    ...
    def getBackdrops (self, *args, **kwargs):
      '''getBackdrops(self: MaterialX.PyMaterialXCore.GraphElement) -> List[MaterialX_v1_38_8::Backdrop]
'''
    ...
    def getBindInputs (self):
      '''(Deprecated) Return a vector of all BindInput elements in this shader reference.'''
    ...
    def getBindParams (self):
      '''(Deprecated) Return a vector of all BindParam elements in this shader reference.'''
    ...
    def getBindTokens (self):
      '''(Deprecated) Return a vector of all BindToken elements in this shader reference.'''
    ...
    def getCategory (self, *args, **kwargs):
      '''getCategory(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getChild (self, name):
      '''Return the child element, if any, with the given name.'''
    ...
    def getChildIndex (self, *args, **kwargs):
      '''getChildIndex(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> int
'''
    ...
    def getChildOfType (self, elementClass, name):
      '''Return the child element, if any, with the given name and subclass.'''
    ...
    def getChildren (self, *args, **kwargs):
      '''getChildren(self: MaterialX.PyMaterialXCore.Element) -> List[MaterialX.PyMaterialXCore.Element]
'''
    ...
    def getChildrenOfType (self, elementClass):
      '''Return a list of all child elements that are instances of the given type.
       The returned list maintains the order in which children were added.'''
    ...
    def getCollection (self, *args, **kwargs):
      '''getCollection(self: MaterialX.PyMaterialXCore.Document, arg0: str) -> MaterialX.PyMaterialXCore.Collection
'''
    ...
    def getCollections (self, *args, **kwargs):
      '''getCollections(self: MaterialX.PyMaterialXCore.Document) -> List[MaterialX.PyMaterialXCore.Collection]
'''
    ...
    def getColorManagementConfig (self, *args, **kwargs):
      '''getColorManagementConfig(self: MaterialX.PyMaterialXCore.Document) -> str
'''
    ...
    def getColorManagementSystem (self, *args, **kwargs):
      '''getColorManagementSystem(self: MaterialX.PyMaterialXCore.Document) -> str
'''
    ...
    def getColorSpace (self, *args, **kwargs):
      '''getColorSpace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getConnectedOutput (self, *args, **kwargs):
      '''getConnectedOutput(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> MaterialX.PyMaterialXCore.Output
'''
    ...
    def getDeclaration (self, *args, **kwargs):
      '''getDeclaration(self: MaterialX.PyMaterialXCore.InterfaceElement, target: str = '') -> MaterialX.PyMaterialXCore.InterfaceElement
'''
    ...
    def getDefaultVersion (self, *args, **kwargs):
      '''getDefaultVersion(self: MaterialX.PyMaterialXCore.InterfaceElement) -> bool
'''
    ...
    def getDescendant (self, *args, **kwargs):
      '''getDescendant(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getDocString (self, *args, **kwargs):
      '''getDocString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getDocument (self, *args, **kwargs):
      '''getDocument(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::Document
'''
    ...
    def getFilePrefix (self, *args, **kwargs):
      '''getFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getGeomInfo (self, *args, **kwargs):
      '''getGeomInfo(self: MaterialX.PyMaterialXCore.Document, arg0: str) -> MaterialX.PyMaterialXCore.GeomInfo
'''
    ...
    def getGeomInfos (self, *args, **kwargs):
      '''getGeomInfos(self: MaterialX.PyMaterialXCore.Document) -> List[MaterialX.PyMaterialXCore.GeomInfo]
'''
    ...
    def getGeomPrefix (self, *args, **kwargs):
      '''getGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getGeomPropDef (self, *args, **kwargs):
      '''getGeomPropDef(self: MaterialX.PyMaterialXCore.Document, arg0: str) -> MaterialX.PyMaterialXCore.GeomPropDef
'''
    ...
    def getGeomPropDefs (self, *args, **kwargs):
      '''getGeomPropDefs(self: MaterialX.PyMaterialXCore.Document) -> List[MaterialX.PyMaterialXCore.GeomPropDef]
'''
    ...
    def getGeomPropValue (self, *args, **kwargs):
      '''getGeomPropValue(self: MaterialX.PyMaterialXCore.Document, geomPropName: str, geom: str = '/') -> MaterialX.PyMaterialXCore.Value
'''
    ...
    def getImplementation (self, *args, **kwargs):
      '''getImplementation(self: MaterialX.PyMaterialXCore.Document, arg0: str) -> MaterialX.PyMaterialXCore.Implementation
'''
    ...
    def getImplementations (self, *args, **kwargs):
      '''getImplementations(self: MaterialX.PyMaterialXCore.Document) -> List[MaterialX.PyMaterialXCore.Implementation]
'''
    ...
    def getInheritString (self, *args, **kwargs):
      '''getInheritString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getInheritsFrom (self, *args, **kwargs):
      '''getInheritsFrom(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getInput (self, *args, **kwargs):
      '''getInput(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def getInputCount (self, *args, **kwargs):
      '''getInputCount(self: MaterialX.PyMaterialXCore.InterfaceElement) -> int
'''
    ...
    def getInputValue (self, name, target=''):
      '''Return the typed value of an input by its name, taking both the
       calling element and its declaration into account.  If the given
       input is not found, then None is returned.'''
    ...
    def getInputs (self, *args, **kwargs):
      '''getInputs(self: MaterialX.PyMaterialXCore.InterfaceElement) -> List[MaterialX.PyMaterialXCore.Input]
'''
    ...
    def getLook (self, *args, **kwargs):
      '''getLook(self: MaterialX.PyMaterialXCore.Document, arg0: str) -> MaterialX.PyMaterialXCore.Look
'''
    ...
    def getLookGroup (self, *args, **kwargs):
      '''getLookGroup(self: MaterialX.PyMaterialXCore.Document, arg0: str) -> MaterialX.PyMaterialXCore.LookGroup
'''
    ...
    def getLookGroups (self, *args, **kwargs):
      '''getLookGroups(self: MaterialX.PyMaterialXCore.Document) -> List[MaterialX.PyMaterialXCore.LookGroup]
'''
    ...
    def getLooks (self, *args, **kwargs):
      '''getLooks(self: MaterialX.PyMaterialXCore.Document) -> List[MaterialX.PyMaterialXCore.Look]
'''
    ...
    def getMatchingImplementations (self, *args, **kwargs):
      '''getMatchingImplementations(self: MaterialX.PyMaterialXCore.Document, arg0: str) -> List[MaterialX.PyMaterialXCore.InterfaceElement]
'''
    ...
    def getMatchingNodeDefs (self, *args, **kwargs):
      '''getMatchingNodeDefs(self: MaterialX.PyMaterialXCore.Document, arg0: str) -> List[MaterialX.PyMaterialXCore.NodeDef]
'''
    ...
    def getMatchingPorts (self, *args, **kwargs):
      '''getMatchingPorts(self: MaterialX.PyMaterialXCore.Document, arg0: str) -> List[MaterialX.PyMaterialXCore.PortElement]
'''
    ...
    def getMaterialNodes (self, *args, **kwargs):
      '''getMaterialNodes(self: MaterialX.PyMaterialXCore.GraphElement) -> List[MaterialX.PyMaterialXCore.Node]
'''
    ...
    def getMaterialOutputs (self, *args, **kwargs):
      '''getMaterialOutputs(self: MaterialX.PyMaterialXCore.Document) -> List[MaterialX.PyMaterialXCore.Output]
'''
    ...
    def getMaterials (self):
      '''(Deprecated) Return a vector of all materials in the document.'''
    ...
    def getName (self, *args, **kwargs):
      '''getName(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getNamePath (self, *args, **kwargs):
      '''getNamePath(self: MaterialX.PyMaterialXCore.Element, relativeTo: MaterialX.PyMaterialXCore.Element = None) -> str
'''
    ...
    def getNamespace (self, *args, **kwargs):
      '''getNamespace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getNode (self, *args, **kwargs):
      '''getNode(self: MaterialX.PyMaterialXCore.GraphElement, arg0: str) -> MaterialX.PyMaterialXCore.Node
'''
    ...
    def getNodeDef (self, *args, **kwargs):
      '''getNodeDef(self: MaterialX.PyMaterialXCore.Document, arg0: str) -> MaterialX.PyMaterialXCore.NodeDef
'''
    ...
    def getNodeDefString (self, *args, **kwargs):
      '''getNodeDefString(self: MaterialX.PyMaterialXCore.InterfaceElement) -> str
'''
    ...
    def getNodeDefs (self, *args, **kwargs):
      '''getNodeDefs(self: MaterialX.PyMaterialXCore.Document) -> List[MaterialX.PyMaterialXCore.NodeDef]
'''
    ...
    def getNodeGraph (self, *args, **kwargs):
      '''getNodeGraph(self: MaterialX.PyMaterialXCore.Document, arg0: str) -> MaterialX.PyMaterialXCore.NodeGraph
'''
    ...
    def getNodeGraphs (self, *args, **kwargs):
      '''getNodeGraphs(self: MaterialX.PyMaterialXCore.Document) -> List[MaterialX.PyMaterialXCore.NodeGraph]
'''
    ...
    def getNodes (self, *args, **kwargs):
      '''getNodes(self: MaterialX.PyMaterialXCore.GraphElement, category: str = '') -> List[MaterialX.PyMaterialXCore.Node]
'''
    ...
    def getOutput (self, *args, **kwargs):
      '''getOutput(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> MaterialX.PyMaterialXCore.Output
'''
    ...
    def getOutputCount (self, *args, **kwargs):
      '''getOutputCount(self: MaterialX.PyMaterialXCore.InterfaceElement) -> int
'''
    ...
    def getOutputs (self, *args, **kwargs):
      '''getOutputs(self: MaterialX.PyMaterialXCore.InterfaceElement) -> List[MaterialX.PyMaterialXCore.Output]
'''
    ...
    def getParameterValue (self, name, target=''):
      '''(Deprecated) Return the typed value of a parameter by its name.'''
    ...
    def getParameterValueString (self, name):
      '''(Deprecated) Return the value string of a parameter by its name.'''
    ...
    def getParameters (self):
      '''(Deprecated) Return a vector of all Parameter elements.'''
    ...
    def getParent (self, *args, **kwargs):
      '''getParent(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getPropertySet (self, *args, **kwargs):
      '''getPropertySet(self: MaterialX.PyMaterialXCore.Document, arg0: str) -> MaterialX.PyMaterialXCore.PropertySet
'''
    ...
    def getPropertySets (self, *args, **kwargs):
      '''getPropertySets(self: MaterialX.PyMaterialXCore.Document) -> List[MaterialX.PyMaterialXCore.PropertySet]
'''
    ...
    def getQualifiedName (self, *args, **kwargs):
      '''getQualifiedName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getReferencedSourceUris (self, *args, **kwargs):
      '''getReferencedSourceUris(self: MaterialX.PyMaterialXCore.Document) -> Set[str]
'''
    ...
    def getRoot (self, *args, **kwargs):
      '''getRoot(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getSelf (self, *args, **kwargs):
      '''getSelf(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getSourceUri (self, *args, **kwargs):
      '''getSourceUri(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getTarget (self, *args, **kwargs):
      '''getTarget(self: MaterialX.PyMaterialXCore.InterfaceElement) -> str
'''
    ...
    def getTargetDef (self, *args, **kwargs):
      '''getTargetDef(self: MaterialX.PyMaterialXCore.Document, arg0: str) -> MaterialX.PyMaterialXCore.TargetDef
'''
    ...
    def getTargetDefs (self, *args, **kwargs):
      '''getTargetDefs(self: MaterialX.PyMaterialXCore.Document) -> List[MaterialX.PyMaterialXCore.TargetDef]
'''
    ...
    def getToken (self, *args, **kwargs):
      '''getToken(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> MaterialX.PyMaterialXCore.Token
'''
    ...
    def getTokenValue (self, *args, **kwargs):
      '''getTokenValue(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> str
'''
    ...
    def getTokens (self, *args, **kwargs):
      '''getTokens(self: MaterialX.PyMaterialXCore.InterfaceElement) -> List[MaterialX.PyMaterialXCore.Token]
'''
    ...
    def getType (self, *args, **kwargs):
      '''getType(self: MaterialX.PyMaterialXCore.TypedElement) -> str
'''
    ...
    def getTypeDef (self, *args, **kwargs):
      '''getTypeDef(self: MaterialX.PyMaterialXCore.Document, arg0: str) -> MaterialX.PyMaterialXCore.TypeDef
'''
    ...
    def getTypeDefs (self, *args, **kwargs):
      '''getTypeDefs(self: MaterialX.PyMaterialXCore.Document) -> List[MaterialX.PyMaterialXCore.TypeDef]
'''
    ...
    def getUnitDef (self, *args, **kwargs):
      '''getUnitDef(self: MaterialX.PyMaterialXCore.Document, arg0: str) -> MaterialX.PyMaterialXCore.UnitDef
'''
    ...
    def getUnitDefs (self, *args, **kwargs):
      '''getUnitDefs(self: MaterialX.PyMaterialXCore.Document) -> List[MaterialX.PyMaterialXCore.UnitDef]
'''
    ...
    def getUnitTypeDef (self, *args, **kwargs):
      '''getUnitTypeDef(self: MaterialX.PyMaterialXCore.Document, arg0: str) -> MaterialX.PyMaterialXCore.UnitTypeDef
'''
    ...
    def getUnitTypeDefs (self, *args, **kwargs):
      '''getUnitTypeDefs(self: MaterialX.PyMaterialXCore.Document) -> List[MaterialX.PyMaterialXCore.UnitTypeDef]
'''
    ...
    def getUpstreamEdge (self, *args, **kwargs):
      '''getUpstreamEdge(self: MaterialX.PyMaterialXCore.Element, index: int = 0) -> MaterialX_v1_38_8::Edge
'''
    ...
    def getUpstreamEdgeCount (self, *args, **kwargs):
      '''getUpstreamEdgeCount(self: MaterialX.PyMaterialXCore.Element) -> int
'''
    ...
    def getUpstreamElement (self, *args, **kwargs):
      '''getUpstreamElement(self: MaterialX.PyMaterialXCore.Element, index: int = 0) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getVariantSet (self, *args, **kwargs):
      '''getVariantSet(self: MaterialX.PyMaterialXCore.Document, arg0: str) -> MaterialX.PyMaterialXCore.VariantSet
'''
    ...
    def getVariantSets (self, *args, **kwargs):
      '''getVariantSets(self: MaterialX.PyMaterialXCore.Document) -> List[MaterialX.PyMaterialXCore.VariantSet]
'''
    ...
    def getVersionIntegers (self, *args, **kwargs):
      '''getVersionIntegers(self: MaterialX.PyMaterialXCore.InterfaceElement) -> Tuple[int, int]
'''
    ...
    def getVersionString (self, *args, **kwargs):
      '''getVersionString(self: MaterialX.PyMaterialXCore.InterfaceElement) -> str
'''
    ...
    def hasAttribute (self, *args, **kwargs):
      '''hasAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> bool
'''
    ...
    def hasColorManagementConfig (self, *args, **kwargs):
      '''hasColorManagementConfig(self: MaterialX.PyMaterialXCore.Document) -> bool
'''
    ...
    def hasColorManagementSystem (self, *args, **kwargs):
      '''hasColorManagementSystem(self: MaterialX.PyMaterialXCore.Document) -> bool
'''
    ...
    def hasColorSpace (self, *args, **kwargs):
      '''hasColorSpace(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasExactInputMatch (self, *args, **kwargs):
      '''hasExactInputMatch(self: MaterialX.PyMaterialXCore.InterfaceElement, declaration: MaterialX.PyMaterialXCore.InterfaceElement, message: str = None) -> bool
'''
    ...
    def hasFilePrefix (self, *args, **kwargs):
      '''hasFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasGeomPrefix (self, *args, **kwargs):
      '''hasGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritString (self, *args, **kwargs):
      '''hasInheritString(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritanceCycle (self, *args, **kwargs):
      '''hasInheritanceCycle(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritedBase (self, *args, **kwargs):
      '''hasInheritedBase(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasNamespace (self, *args, **kwargs):
      '''hasNamespace(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasNodeDefString (self, *args, **kwargs):
      '''hasNodeDefString(self: MaterialX.PyMaterialXCore.InterfaceElement) -> bool
'''
    ...
    def hasSourceUri (self, *args, **kwargs):
      '''hasSourceUri(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasTarget (self, *args, **kwargs):
      '''hasTarget(self: MaterialX.PyMaterialXCore.InterfaceElement) -> bool
'''
    ...
    def hasType (self, *args, **kwargs):
      '''hasType(self: MaterialX.PyMaterialXCore.TypedElement) -> bool
'''
    ...
    def hasVersionString (self, *args, **kwargs):
      '''hasVersionString(self: MaterialX.PyMaterialXCore.InterfaceElement) -> bool
'''
    ...
    def importLibrary (self, *args, **kwargs):
      '''importLibrary(self: MaterialX.PyMaterialXCore.Document, arg0: MaterialX.PyMaterialXCore.Document) -> None
'''
    ...
    def initialize (self, *args, **kwargs):
      '''initialize(self: MaterialX.PyMaterialXCore.Document) -> None
'''
    ...
    def isA (self, elementClass, category=''):
      '''Return True if this element is an instance of the given subclass.
       If a category string is specified, then both subclass and category
       matches are required.'''
    ...
    def isMultiOutputType (self, *args, **kwargs):
      '''isMultiOutputType(self: MaterialX.PyMaterialXCore.TypedElement) -> bool
'''
    ...
    def removeAttribute (self, *args, **kwargs):
      '''removeAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def removeAttributeDef (self, *args, **kwargs):
      '''removeAttributeDef(self: MaterialX.PyMaterialXCore.Document, arg0: str) -> None
'''
    ...
    def removeBackdrop (self, *args, **kwargs):
      '''removeBackdrop(self: MaterialX.PyMaterialXCore.GraphElement, arg0: str) -> None
'''
    ...
    def removeChild (self, *args, **kwargs):
      '''removeChild(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def removeChildOfType (self, elementClass, name):
      '''Remove the typed child element, if any, with the given name.'''
    ...
    def removeCollection (self, *args, **kwargs):
      '''removeCollection(self: MaterialX.PyMaterialXCore.Document, arg0: str) -> None
'''
    ...
    def removeGeomInfo (self, *args, **kwargs):
      '''removeGeomInfo(self: MaterialX.PyMaterialXCore.Document, arg0: str) -> None
'''
    ...
    def removeGeomPropDef (self, *args, **kwargs):
      '''removeGeomPropDef(self: MaterialX.PyMaterialXCore.Document, arg0: str) -> None
'''
    ...
    def removeImplementation (self, *args, **kwargs):
      '''removeImplementation(self: MaterialX.PyMaterialXCore.Document, arg0: str) -> None
'''
    ...
    def removeInput (self, *args, **kwargs):
      '''removeInput(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> None
'''
    ...
    def removeLook (self, *args, **kwargs):
      '''removeLook(self: MaterialX.PyMaterialXCore.Document, arg0: str) -> None
'''
    ...
    def removeLookGroup (self, *args, **kwargs):
      '''removeLookGroup(self: MaterialX.PyMaterialXCore.Document, arg0: str) -> None
'''
    ...
    def removeNode (self, *args, **kwargs):
      '''removeNode(self: MaterialX.PyMaterialXCore.GraphElement, arg0: str) -> None
'''
    ...
    def removeNodeDef (self, *args, **kwargs):
      '''removeNodeDef(self: MaterialX.PyMaterialXCore.Document, arg0: str) -> None
'''
    ...
    def removeNodeGraph (self, *args, **kwargs):
      '''removeNodeGraph(self: MaterialX.PyMaterialXCore.Document, arg0: str) -> None
'''
    ...
    def removeOutput (self, *args, **kwargs):
      '''removeOutput(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> None
'''
    ...
    def removePropertySet (self, *args, **kwargs):
      '''removePropertySet(self: MaterialX.PyMaterialXCore.Document, arg0: str) -> None
'''
    ...
    def removeTargetDef (self, *args, **kwargs):
      '''removeTargetDef(self: MaterialX.PyMaterialXCore.Document, arg0: str) -> None
'''
    ...
    def removeToken (self, *args, **kwargs):
      '''removeToken(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> None
'''
    ...
    def removeTypeDef (self, *args, **kwargs):
      '''removeTypeDef(self: MaterialX.PyMaterialXCore.Document, arg0: str) -> None
'''
    ...
    def removeUnitDef (self, *args, **kwargs):
      '''removeUnitDef(self: MaterialX.PyMaterialXCore.Document, arg0: str) -> None
'''
    ...
    def removeUnitTypeDef (self, *args, **kwargs):
      '''removeUnitTypeDef(self: MaterialX.PyMaterialXCore.Document, arg0: str) -> None
'''
    ...
    def removeVariantSet (self, *args, **kwargs):
      '''removeVariantSet(self: MaterialX.PyMaterialXCore.Document, arg0: str) -> None
'''
    ...
    def setAttribute (self, *args, **kwargs):
      '''setAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str, arg1: str) -> None
'''
    ...
    def setCategory (self, *args, **kwargs):
      '''setCategory(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setChildIndex (self, *args, **kwargs):
      '''setChildIndex(self: MaterialX.PyMaterialXCore.Element, arg0: str, arg1: int) -> None
'''
    ...
    def setColorManagementConfig (self, *args, **kwargs):
      '''setColorManagementConfig(self: MaterialX.PyMaterialXCore.Document, arg0: str) -> None
'''
    ...
    def setColorManagementSystem (self, *args, **kwargs):
      '''setColorManagementSystem(self: MaterialX.PyMaterialXCore.Document, arg0: str) -> None
'''
    ...
    def setColorSpace (self, *args, **kwargs):
      '''setColorSpace(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setConnectedOutput (self, *args, **kwargs):
      '''setConnectedOutput(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str, arg1: MaterialX.PyMaterialXCore.Output) -> None
'''
    ...
    def setDefaultVersion (self, *args, **kwargs):
      '''setDefaultVersion(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: bool) -> None
'''
    ...
    def setDocString (self, *args, **kwargs):
      '''setDocString(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setFilePrefix (self, *args, **kwargs):
      '''setFilePrefix(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setGeomPrefix (self, *args, **kwargs):
      '''setGeomPrefix(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setInheritString (self, *args, **kwargs):
      '''setInheritString(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setInheritsFrom (self, *args, **kwargs):
      '''setInheritsFrom(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def setInputValue (self, name, value, typeString=''):
      '''Set the typed value of an input by its name, creating a child element
       to hold the input if needed.'''
    ...
    def setName (self, *args, **kwargs):
      '''setName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setNamespace (self, *args, **kwargs):
      '''setNamespace(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setNodeDefString (self, *args, **kwargs):
      '''setNodeDefString(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> None
'''
    ...
    def setParameterValue (self, name, value, typeString=''):
      '''(Deprecated) Set the typed value of a parameter by its name.'''
    ...
    def setSourceUri (self, *args, **kwargs):
      '''setSourceUri(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setTarget (self, *args, **kwargs):
      '''setTarget(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> None
'''
    ...
    def setTokenValue (self, *args, **kwargs):
      '''setTokenValue(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str, arg1: str) -> MaterialX.PyMaterialXCore.Token
'''
    ...
    def setType (self, *args, **kwargs):
      '''setType(self: MaterialX.PyMaterialXCore.TypedElement, arg0: str) -> None
'''
    ...
    def setVersionIntegers (self, *args, **kwargs):
      '''setVersionIntegers(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: int, arg1: int) -> None
'''
    ...
    def setVersionString (self, *args, **kwargs):
      '''setVersionString(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> None
'''
    ...
    def topologicalSort (self, *args, **kwargs):
      '''topologicalSort(self: MaterialX.PyMaterialXCore.GraphElement) -> List[MaterialX.PyMaterialXCore.Element]
'''
    ...
    def traverseGraph (self, *args, **kwargs):
      '''traverseGraph(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::GraphIterator
'''
    ...
    def traverseInheritance (self, *args, **kwargs):
      '''traverseInheritance(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::InheritanceIterator
'''
    ...
    def traverseTree (self, *args, **kwargs):
      '''traverseTree(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::TreeIterator
'''
    ...
    def upgradeVersion (self, *args, **kwargs):
      '''upgradeVersion(self: MaterialX.PyMaterialXCore.Document) -> None
'''
    ...
    def validate (self, *args, **kwargs):
      '''validate(self: MaterialX.PyMaterialXCore.Element) -> Tuple[bool, str]
'''
    ...

def EDF_TYPE_STRING (*args):
      '''

'''      
    ...

def Edge (*args):
      '''

'''      
    ...

class Edge:
    def getConnectingElement (self, *args, **kwargs):
      '''getConnectingElement(self: MaterialX.PyMaterialXCore.Edge) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getDownstreamElement (self, *args, **kwargs):
      '''getDownstreamElement(self: MaterialX.PyMaterialXCore.Edge) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getName (self, *args, **kwargs):
      '''getName(self: MaterialX.PyMaterialXCore.Edge) -> str
'''
    ...
    def getUpstreamElement (self, *args, **kwargs):
      '''getUpstreamElement(self: MaterialX.PyMaterialXCore.Edge) -> MaterialX.PyMaterialXCore.Element
'''
    ...

def Element (*args):
      '''

'''      
    ...

class Element:
    def _addChildCollection (self, *args, **kwargs):
      '''_addChildCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Collection
'''
    ...
    def _addChildDocument (self, *args, **kwargs):
      '''_addChildDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Document
'''
    ...
    def _addChildGeomInfo (self, *args, **kwargs):
      '''_addChildGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomInfo
'''
    ...
    def _addChildGeomProp (self, *args, **kwargs):
      '''_addChildGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def _addChildImplementation (self, *args, **kwargs):
      '''_addChildImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Implementation
'''
    ...
    def _addChildLook (self, *args, **kwargs):
      '''_addChildLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Look
'''
    ...
    def _addChildMaterialAssign (self, *args, **kwargs):
      '''_addChildMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::MaterialAssign
'''
    ...
    def _addChildNode (self, *args, **kwargs):
      '''_addChildNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Node
'''
    ...
    def _addChildNodeDef (self, *args, **kwargs):
      '''_addChildNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeDef
'''
    ...
    def _addChildNodeGraph (self, *args, **kwargs):
      '''_addChildNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeGraph
'''
    ...
    def _addChildProperty (self, *args, **kwargs):
      '''_addChildProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Property
'''
    ...
    def _addChildPropertySet (self, *args, **kwargs):
      '''_addChildPropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySet
'''
    ...
    def _addChildPropertySetAssign (self, *args, **kwargs):
      '''_addChildPropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySetAssign
'''
    ...
    def _addChildToken (self, *args, **kwargs):
      '''_addChildToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Token
'''
    ...
    def _addChildTypeDef (self, *args, **kwargs):
      '''_addChildTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def _addChildVisibility (self, *args, **kwargs):
      '''_addChildVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Visibility
'''
    ...
    def _getChild (self, *args, **kwargs):
      '''_getChild(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def _getChildOfTypeCollection (self, *args, **kwargs):
      '''_getChildOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Collection
'''
    ...
    def _getChildOfTypeDocument (self, *args, **kwargs):
      '''_getChildOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Document
'''
    ...
    def _getChildOfTypeGeomInfo (self, *args, **kwargs):
      '''_getChildOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomInfo
'''
    ...
    def _getChildOfTypeGeomProp (self, *args, **kwargs):
      '''_getChildOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def _getChildOfTypeImplementation (self, *args, **kwargs):
      '''_getChildOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Implementation
'''
    ...
    def _getChildOfTypeLook (self, *args, **kwargs):
      '''_getChildOfTypeLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Look
'''
    ...
    def _getChildOfTypeMaterialAssign (self, *args, **kwargs):
      '''_getChildOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::MaterialAssign
'''
    ...
    def _getChildOfTypeNode (self, *args, **kwargs):
      '''_getChildOfTypeNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Node
'''
    ...
    def _getChildOfTypeNodeDef (self, *args, **kwargs):
      '''_getChildOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeDef
'''
    ...
    def _getChildOfTypeNodeGraph (self, *args, **kwargs):
      '''_getChildOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeGraph
'''
    ...
    def _getChildOfTypeProperty (self, *args, **kwargs):
      '''_getChildOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Property
'''
    ...
    def _getChildOfTypePropertySet (self, *args, **kwargs):
      '''_getChildOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySet
'''
    ...
    def _getChildOfTypePropertySetAssign (self, *args, **kwargs):
      '''_getChildOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySetAssign
'''
    ...
    def _getChildOfTypeToken (self, *args, **kwargs):
      '''_getChildOfTypeToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Token
'''
    ...
    def _getChildOfTypeTypeDef (self, *args, **kwargs):
      '''_getChildOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def _getChildOfTypeVisibility (self, *args, **kwargs):
      '''_getChildOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Visibility
'''
    ...
    def _getChildrenOfTypeCollection (self, *args, **kwargs):
      '''_getChildrenOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Collection]
'''
    ...
    def _getChildrenOfTypeDocument (self, *args, **kwargs):
      '''_getChildrenOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Document]
'''
    ...
    def _getChildrenOfTypeGeomInfo (self, *args, **kwargs):
      '''_getChildrenOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::GeomInfo]
'''
    ...
    def _getChildrenOfTypeGeomProp (self, *args, **kwargs):
      '''_getChildrenOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::GeomProp]
'''
    ...
    def _getChildrenOfTypeImplementation (self, *args, **kwargs):
      '''_getChildrenOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Implementation]
'''
    ...
    def _getChildrenOfTypeLook (self, *args, **kwargs):
      '''_getChildrenOfTypeLook(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Look]
'''
    ...
    def _getChildrenOfTypeMaterialAssign (self, *args, **kwargs):
      '''_getChildrenOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::MaterialAssign]
'''
    ...
    def _getChildrenOfTypeNode (self, *args, **kwargs):
      '''_getChildrenOfTypeNode(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Node]
'''
    ...
    def _getChildrenOfTypeNodeDef (self, *args, **kwargs):
      '''_getChildrenOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::NodeDef]
'''
    ...
    def _getChildrenOfTypeNodeGraph (self, *args, **kwargs):
      '''_getChildrenOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::NodeGraph]
'''
    ...
    def _getChildrenOfTypeProperty (self, *args, **kwargs):
      '''_getChildrenOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Property]
'''
    ...
    def _getChildrenOfTypePropertySet (self, *args, **kwargs):
      '''_getChildrenOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::PropertySet]
'''
    ...
    def _getChildrenOfTypePropertySetAssign (self, *args, **kwargs):
      '''_getChildrenOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::PropertySetAssign]
'''
    ...
    def _getChildrenOfTypeToken (self, *args, **kwargs):
      '''_getChildrenOfTypeToken(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Token]
'''
    ...
    def _getChildrenOfTypeTypeDef (self, *args, **kwargs):
      '''_getChildrenOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::TypeDef]
'''
    ...
    def _getChildrenOfTypeVisibility (self, *args, **kwargs):
      '''_getChildrenOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Visibility]
'''
    ...
    def _removeChildOfTypeCollection (self, *args, **kwargs):
      '''_removeChildOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeDocument (self, *args, **kwargs):
      '''_removeChildOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeGeomInfo (self, *args, **kwargs):
      '''_removeChildOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeGeomProp (self, *args, **kwargs):
      '''_removeChildOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeImplementation (self, *args, **kwargs):
      '''_removeChildOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeLook (self, *args, **kwargs):
      '''_removeChildOfTypeLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeMaterialAssign (self, *args, **kwargs):
      '''_removeChildOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNode (self, *args, **kwargs):
      '''_removeChildOfTypeNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNodeDef (self, *args, **kwargs):
      '''_removeChildOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNodeGraph (self, *args, **kwargs):
      '''_removeChildOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeProperty (self, *args, **kwargs):
      '''_removeChildOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypePropertySet (self, *args, **kwargs):
      '''_removeChildOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypePropertySetAssign (self, *args, **kwargs):
      '''_removeChildOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeToken (self, *args, **kwargs):
      '''_removeChildOfTypeToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeTypeDef (self, *args, **kwargs):
      '''_removeChildOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeVisibility (self, *args, **kwargs):
      '''_removeChildOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def addChild (self, elementClass, name, typeString=''):
      '''Add a child element of the given subclass, name, and optional type string.'''
    ...
    def addChildOfCategory (self, *args, **kwargs):
      '''addChildOfCategory(self: MaterialX.PyMaterialXCore.Element, category: str, name: str = '') -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def asString (self, *args, **kwargs):
      '''asString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def changeChildCategory (self, *args, **kwargs):
      '''changeChildCategory(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element, arg1: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def clearContent (self, *args, **kwargs):
      '''clearContent(self: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def copyContentFrom (self, *args, **kwargs):
      '''copyContentFrom(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def createStringResolver (self, *args, **kwargs):
      '''createStringResolver(self: MaterialX.PyMaterialXCore.Element, geom: str = '') -> MaterialX_v1_38_8::StringResolver
'''
    ...
    def createValidChildName (self, *args, **kwargs):
      '''createValidChildName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getActiveColorSpace (self, *args, **kwargs):
      '''getActiveColorSpace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveFilePrefix (self, *args, **kwargs):
      '''getActiveFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveGeomPrefix (self, *args, **kwargs):
      '''getActiveGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveSourceUri (self, *args, **kwargs):
      '''getActiveSourceUri(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getAttribute (self, *args, **kwargs):
      '''getAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getAttributeNames (self, *args, **kwargs):
      '''getAttributeNames(self: MaterialX.PyMaterialXCore.Element) -> List[str]
'''
    ...
    def getCategory (self, *args, **kwargs):
      '''getCategory(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getChild (self, name):
      '''Return the child element, if any, with the given name.'''
    ...
    def getChildIndex (self, *args, **kwargs):
      '''getChildIndex(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> int
'''
    ...
    def getChildOfType (self, elementClass, name):
      '''Return the child element, if any, with the given name and subclass.'''
    ...
    def getChildren (self, *args, **kwargs):
      '''getChildren(self: MaterialX.PyMaterialXCore.Element) -> List[MaterialX.PyMaterialXCore.Element]
'''
    ...
    def getChildrenOfType (self, elementClass):
      '''Return a list of all child elements that are instances of the given type.
       The returned list maintains the order in which children were added.'''
    ...
    def getColorSpace (self, *args, **kwargs):
      '''getColorSpace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getDescendant (self, *args, **kwargs):
      '''getDescendant(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getDocString (self, *args, **kwargs):
      '''getDocString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getDocument (self, *args, **kwargs):
      '''getDocument(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::Document
'''
    ...
    def getFilePrefix (self, *args, **kwargs):
      '''getFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getGeomPrefix (self, *args, **kwargs):
      '''getGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getInheritString (self, *args, **kwargs):
      '''getInheritString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getInheritsFrom (self, *args, **kwargs):
      '''getInheritsFrom(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getName (self, *args, **kwargs):
      '''getName(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getNamePath (self, *args, **kwargs):
      '''getNamePath(self: MaterialX.PyMaterialXCore.Element, relativeTo: MaterialX.PyMaterialXCore.Element = None) -> str
'''
    ...
    def getNamespace (self, *args, **kwargs):
      '''getNamespace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getParent (self, *args, **kwargs):
      '''getParent(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getQualifiedName (self, *args, **kwargs):
      '''getQualifiedName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getRoot (self, *args, **kwargs):
      '''getRoot(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getSelf (self, *args, **kwargs):
      '''getSelf(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getSourceUri (self, *args, **kwargs):
      '''getSourceUri(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getUpstreamEdge (self, *args, **kwargs):
      '''getUpstreamEdge(self: MaterialX.PyMaterialXCore.Element, index: int = 0) -> MaterialX_v1_38_8::Edge
'''
    ...
    def getUpstreamEdgeCount (self, *args, **kwargs):
      '''getUpstreamEdgeCount(self: MaterialX.PyMaterialXCore.Element) -> int
'''
    ...
    def getUpstreamElement (self, *args, **kwargs):
      '''getUpstreamElement(self: MaterialX.PyMaterialXCore.Element, index: int = 0) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def hasAttribute (self, *args, **kwargs):
      '''hasAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> bool
'''
    ...
    def hasColorSpace (self, *args, **kwargs):
      '''hasColorSpace(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasFilePrefix (self, *args, **kwargs):
      '''hasFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasGeomPrefix (self, *args, **kwargs):
      '''hasGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritString (self, *args, **kwargs):
      '''hasInheritString(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritanceCycle (self, *args, **kwargs):
      '''hasInheritanceCycle(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritedBase (self, *args, **kwargs):
      '''hasInheritedBase(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasNamespace (self, *args, **kwargs):
      '''hasNamespace(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasSourceUri (self, *args, **kwargs):
      '''hasSourceUri(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def isA (self, elementClass, category=''):
      '''Return True if this element is an instance of the given subclass.
       If a category string is specified, then both subclass and category
       matches are required.'''
    ...
    def removeAttribute (self, *args, **kwargs):
      '''removeAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def removeChild (self, *args, **kwargs):
      '''removeChild(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def removeChildOfType (self, elementClass, name):
      '''Remove the typed child element, if any, with the given name.'''
    ...
    def setAttribute (self, *args, **kwargs):
      '''setAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str, arg1: str) -> None
'''
    ...
    def setCategory (self, *args, **kwargs):
      '''setCategory(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setChildIndex (self, *args, **kwargs):
      '''setChildIndex(self: MaterialX.PyMaterialXCore.Element, arg0: str, arg1: int) -> None
'''
    ...
    def setColorSpace (self, *args, **kwargs):
      '''setColorSpace(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setDocString (self, *args, **kwargs):
      '''setDocString(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setFilePrefix (self, *args, **kwargs):
      '''setFilePrefix(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setGeomPrefix (self, *args, **kwargs):
      '''setGeomPrefix(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setInheritString (self, *args, **kwargs):
      '''setInheritString(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setInheritsFrom (self, *args, **kwargs):
      '''setInheritsFrom(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def setName (self, *args, **kwargs):
      '''setName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setNamespace (self, *args, **kwargs):
      '''setNamespace(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setSourceUri (self, *args, **kwargs):
      '''setSourceUri(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def traverseGraph (self, *args, **kwargs):
      '''traverseGraph(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::GraphIterator
'''
    ...
    def traverseInheritance (self, *args, **kwargs):
      '''traverseInheritance(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::InheritanceIterator
'''
    ...
    def traverseTree (self, *args, **kwargs):
      '''traverseTree(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::TreeIterator
'''
    ...
    def validate (self, *args, **kwargs):
      '''validate(self: MaterialX.PyMaterialXCore.Element) -> Tuple[bool, str]
'''
    ...

def ElementPredicate (*args):
      '''

'''      
    ...

class ElementPredicate:

def Exception (*args):
      '''

'''      
    ...

class Exception:
    def args (self, *args, **kwargs):
      '''None'''
    ...
    def with_traceback (self, *args, **kwargs):
      '''Exception.with_traceback(tb) --
    set self.__traceback__ to tb and return self.'''
    ...

def ExceptionFileMissing (*args):
      '''

'''      
    ...

class ExceptionFileMissing:
    def args (self, *args, **kwargs):
      '''None'''
    ...
    def with_traceback (self, *args, **kwargs):
      '''Exception.with_traceback(tb) --
    set self.__traceback__ to tb and return self.'''
    ...

def ExceptionFoundCycle (*args):
      '''

'''      
    ...

class ExceptionFoundCycle:
    def args (self, *args, **kwargs):
      '''None'''
    ...
    def with_traceback (self, *args, **kwargs):
      '''Exception.with_traceback(tb) --
    set self.__traceback__ to tb and return self.'''
    ...

def ExceptionOrphanedElement (*args):
      '''

'''      
    ...

class ExceptionOrphanedElement:
    def args (self, *args, **kwargs):
      '''None'''
    ...
    def with_traceback (self, *args, **kwargs):
      '''Exception.with_traceback(tb) --
    set self.__traceback__ to tb and return self.'''
    ...

def ExceptionParseError (*args):
      '''

'''      
    ...

class ExceptionParseError:
    def args (self, *args, **kwargs):
      '''None'''
    ...
    def with_traceback (self, *args, **kwargs):
      '''Exception.with_traceback(tb) --
    set self.__traceback__ to tb and return self.'''
    ...

def FILENAME_TYPE_STRING (*args):
      '''

'''      
    ...

def FilePath (*args):
      '''

'''      
    ...

class FilePath:
    def addExtension (self, *args, **kwargs):
      '''addExtension(self: MaterialX.PyMaterialXFormat.FilePath, arg0: str) -> None
'''
    ...
    def asString (self, *args, **kwargs):
      '''asString(self: MaterialX.PyMaterialXFormat.FilePath, format: MaterialX.PyMaterialXFormat.Format = <Format.FormatPosix: 1>) -> str
'''
    ...
    def createDirectory (self, *args, **kwargs):
      '''createDirectory(self: MaterialX.PyMaterialXFormat.FilePath) -> None
'''
    ...
    def exists (self, *args, **kwargs):
      '''exists(self: MaterialX.PyMaterialXFormat.FilePath) -> bool
'''
    ...
    def getBaseName (self, *args, **kwargs):
      '''getBaseName(self: MaterialX.PyMaterialXFormat.FilePath) -> str
'''
    ...
    def getCurrentPath (self, *args, **kwargs):
      '''getCurrentPath() -> MaterialX.PyMaterialXFormat.FilePath
'''
    ...
    def getExtension (self, *args, **kwargs):
      '''getExtension(self: MaterialX.PyMaterialXFormat.FilePath) -> str
'''
    ...
    def getFilesInDirectory (self, *args, **kwargs):
      '''getFilesInDirectory(self: MaterialX.PyMaterialXFormat.FilePath, arg0: str) -> List[MaterialX.PyMaterialXFormat.FilePath]
'''
    ...
    def getModulePath (self, *args, **kwargs):
      '''getModulePath() -> MaterialX.PyMaterialXFormat.FilePath
'''
    ...
    def getNormalized (self, *args, **kwargs):
      '''getNormalized(self: MaterialX.PyMaterialXFormat.FilePath) -> MaterialX.PyMaterialXFormat.FilePath
'''
    ...
    def getParentPath (self, *args, **kwargs):
      '''getParentPath(self: MaterialX.PyMaterialXFormat.FilePath) -> MaterialX.PyMaterialXFormat.FilePath
'''
    ...
    def getSubDirectories (self, *args, **kwargs):
      '''getSubDirectories(self: MaterialX.PyMaterialXFormat.FilePath) -> List[MaterialX.PyMaterialXFormat.FilePath]
'''
    ...
    def isAbsolute (self, *args, **kwargs):
      '''isAbsolute(self: MaterialX.PyMaterialXFormat.FilePath) -> bool
'''
    ...
    def isDirectory (self, *args, **kwargs):
      '''isDirectory(self: MaterialX.PyMaterialXFormat.FilePath) -> bool
'''
    ...
    def isEmpty (self, *args, **kwargs):
      '''isEmpty(self: MaterialX.PyMaterialXFormat.FilePath) -> bool
'''
    ...
    def removeExtension (self, *args, **kwargs):
      '''removeExtension(self: MaterialX.PyMaterialXFormat.FilePath) -> None
'''
    ...
    def size (self, *args, **kwargs):
      '''size(self: MaterialX.PyMaterialXFormat.FilePath) -> int
'''
    ...

def FileSearchPath (*args):
      '''

'''      
    ...

class FileSearchPath:
    def append (self, *args, **kwargs):
      '''append(*args, **kwargs)
Overloaded function.

1. append(self: MaterialX.PyMaterialXFormat.FileSearchPath, arg0: MaterialX.PyMaterialXFormat.FilePath) -> None

2. append(self: MaterialX.PyMaterialXFormat.FileSearchPath, arg0: MaterialX.PyMaterialXFormat.FileSearchPath) -> None
'''
    ...
    def asString (self, *args, **kwargs):
      '''asString(self: MaterialX.PyMaterialXFormat.FileSearchPath, sep: str = ':') -> str
'''
    ...
    def clear (self, *args, **kwargs):
      '''clear(self: MaterialX.PyMaterialXFormat.FileSearchPath) -> None
'''
    ...
    def find (self, *args, **kwargs):
      '''find(self: MaterialX.PyMaterialXFormat.FileSearchPath, arg0: MaterialX.PyMaterialXFormat.FilePath) -> MaterialX.PyMaterialXFormat.FilePath
'''
    ...
    def isEmpty (self, *args, **kwargs):
      '''isEmpty(self: MaterialX.PyMaterialXFormat.FileSearchPath) -> bool
'''
    ...
    def prepend (self, *args, **kwargs):
      '''prepend(self: MaterialX.PyMaterialXFormat.FileSearchPath, arg0: MaterialX.PyMaterialXFormat.FilePath) -> None
'''
    ...
    def size (self, *args, **kwargs):
      '''size(self: MaterialX.PyMaterialXFormat.FileSearchPath) -> int
'''
    ...

def Format (*args):
      '''

'''      
    ...

class Format:
    def FormatNative (self, *args, **kwargs):
      '''Members:

  FormatWindows

  FormatPosix

  FormatNative'''
    ...
    def FormatPosix (self, *args, **kwargs):
      '''Members:

  FormatWindows

  FormatPosix

  FormatNative'''
    ...
    def FormatWindows (self, *args, **kwargs):
      '''Members:

  FormatWindows

  FormatPosix

  FormatNative'''
    ...
    def name (self, *args, **kwargs):
      '''name(self: handle) -> str
'''
    ...
    def value (self, *args, **kwargs):
      ''''''
    ...

def FormatNative (*args):
      '''

'''      
    ...

def FormatPosix (*args):
      '''

'''      
    ...

def FormatWindows (*args):
      '''

'''      
    ...

def GEOMNAME_TYPE_STRING (*args):
      '''

'''      
    ...

def GEOM_PATH_SEPARATOR (*args):
      '''

'''      
    ...

def GenericElement (*args):
      '''

'''      
    ...

class GenericElement:
    def CATEGORY (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def _addChildCollection (self, *args, **kwargs):
      '''_addChildCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Collection
'''
    ...
    def _addChildDocument (self, *args, **kwargs):
      '''_addChildDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Document
'''
    ...
    def _addChildGeomInfo (self, *args, **kwargs):
      '''_addChildGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomInfo
'''
    ...
    def _addChildGeomProp (self, *args, **kwargs):
      '''_addChildGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def _addChildImplementation (self, *args, **kwargs):
      '''_addChildImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Implementation
'''
    ...
    def _addChildLook (self, *args, **kwargs):
      '''_addChildLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Look
'''
    ...
    def _addChildMaterialAssign (self, *args, **kwargs):
      '''_addChildMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::MaterialAssign
'''
    ...
    def _addChildNode (self, *args, **kwargs):
      '''_addChildNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Node
'''
    ...
    def _addChildNodeDef (self, *args, **kwargs):
      '''_addChildNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeDef
'''
    ...
    def _addChildNodeGraph (self, *args, **kwargs):
      '''_addChildNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeGraph
'''
    ...
    def _addChildProperty (self, *args, **kwargs):
      '''_addChildProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Property
'''
    ...
    def _addChildPropertySet (self, *args, **kwargs):
      '''_addChildPropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySet
'''
    ...
    def _addChildPropertySetAssign (self, *args, **kwargs):
      '''_addChildPropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySetAssign
'''
    ...
    def _addChildToken (self, *args, **kwargs):
      '''_addChildToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Token
'''
    ...
    def _addChildTypeDef (self, *args, **kwargs):
      '''_addChildTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def _addChildVisibility (self, *args, **kwargs):
      '''_addChildVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Visibility
'''
    ...
    def _getChild (self, *args, **kwargs):
      '''_getChild(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def _getChildOfTypeCollection (self, *args, **kwargs):
      '''_getChildOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Collection
'''
    ...
    def _getChildOfTypeDocument (self, *args, **kwargs):
      '''_getChildOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Document
'''
    ...
    def _getChildOfTypeGeomInfo (self, *args, **kwargs):
      '''_getChildOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomInfo
'''
    ...
    def _getChildOfTypeGeomProp (self, *args, **kwargs):
      '''_getChildOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def _getChildOfTypeImplementation (self, *args, **kwargs):
      '''_getChildOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Implementation
'''
    ...
    def _getChildOfTypeLook (self, *args, **kwargs):
      '''_getChildOfTypeLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Look
'''
    ...
    def _getChildOfTypeMaterialAssign (self, *args, **kwargs):
      '''_getChildOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::MaterialAssign
'''
    ...
    def _getChildOfTypeNode (self, *args, **kwargs):
      '''_getChildOfTypeNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Node
'''
    ...
    def _getChildOfTypeNodeDef (self, *args, **kwargs):
      '''_getChildOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeDef
'''
    ...
    def _getChildOfTypeNodeGraph (self, *args, **kwargs):
      '''_getChildOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeGraph
'''
    ...
    def _getChildOfTypeProperty (self, *args, **kwargs):
      '''_getChildOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Property
'''
    ...
    def _getChildOfTypePropertySet (self, *args, **kwargs):
      '''_getChildOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySet
'''
    ...
    def _getChildOfTypePropertySetAssign (self, *args, **kwargs):
      '''_getChildOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySetAssign
'''
    ...
    def _getChildOfTypeToken (self, *args, **kwargs):
      '''_getChildOfTypeToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Token
'''
    ...
    def _getChildOfTypeTypeDef (self, *args, **kwargs):
      '''_getChildOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def _getChildOfTypeVisibility (self, *args, **kwargs):
      '''_getChildOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Visibility
'''
    ...
    def _getChildrenOfTypeCollection (self, *args, **kwargs):
      '''_getChildrenOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Collection]
'''
    ...
    def _getChildrenOfTypeDocument (self, *args, **kwargs):
      '''_getChildrenOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Document]
'''
    ...
    def _getChildrenOfTypeGeomInfo (self, *args, **kwargs):
      '''_getChildrenOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::GeomInfo]
'''
    ...
    def _getChildrenOfTypeGeomProp (self, *args, **kwargs):
      '''_getChildrenOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::GeomProp]
'''
    ...
    def _getChildrenOfTypeImplementation (self, *args, **kwargs):
      '''_getChildrenOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Implementation]
'''
    ...
    def _getChildrenOfTypeLook (self, *args, **kwargs):
      '''_getChildrenOfTypeLook(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Look]
'''
    ...
    def _getChildrenOfTypeMaterialAssign (self, *args, **kwargs):
      '''_getChildrenOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::MaterialAssign]
'''
    ...
    def _getChildrenOfTypeNode (self, *args, **kwargs):
      '''_getChildrenOfTypeNode(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Node]
'''
    ...
    def _getChildrenOfTypeNodeDef (self, *args, **kwargs):
      '''_getChildrenOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::NodeDef]
'''
    ...
    def _getChildrenOfTypeNodeGraph (self, *args, **kwargs):
      '''_getChildrenOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::NodeGraph]
'''
    ...
    def _getChildrenOfTypeProperty (self, *args, **kwargs):
      '''_getChildrenOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Property]
'''
    ...
    def _getChildrenOfTypePropertySet (self, *args, **kwargs):
      '''_getChildrenOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::PropertySet]
'''
    ...
    def _getChildrenOfTypePropertySetAssign (self, *args, **kwargs):
      '''_getChildrenOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::PropertySetAssign]
'''
    ...
    def _getChildrenOfTypeToken (self, *args, **kwargs):
      '''_getChildrenOfTypeToken(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Token]
'''
    ...
    def _getChildrenOfTypeTypeDef (self, *args, **kwargs):
      '''_getChildrenOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::TypeDef]
'''
    ...
    def _getChildrenOfTypeVisibility (self, *args, **kwargs):
      '''_getChildrenOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Visibility]
'''
    ...
    def _removeChildOfTypeCollection (self, *args, **kwargs):
      '''_removeChildOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeDocument (self, *args, **kwargs):
      '''_removeChildOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeGeomInfo (self, *args, **kwargs):
      '''_removeChildOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeGeomProp (self, *args, **kwargs):
      '''_removeChildOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeImplementation (self, *args, **kwargs):
      '''_removeChildOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeLook (self, *args, **kwargs):
      '''_removeChildOfTypeLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeMaterialAssign (self, *args, **kwargs):
      '''_removeChildOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNode (self, *args, **kwargs):
      '''_removeChildOfTypeNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNodeDef (self, *args, **kwargs):
      '''_removeChildOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNodeGraph (self, *args, **kwargs):
      '''_removeChildOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeProperty (self, *args, **kwargs):
      '''_removeChildOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypePropertySet (self, *args, **kwargs):
      '''_removeChildOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypePropertySetAssign (self, *args, **kwargs):
      '''_removeChildOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeToken (self, *args, **kwargs):
      '''_removeChildOfTypeToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeTypeDef (self, *args, **kwargs):
      '''_removeChildOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeVisibility (self, *args, **kwargs):
      '''_removeChildOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def addChild (self, elementClass, name, typeString=''):
      '''Add a child element of the given subclass, name, and optional type string.'''
    ...
    def addChildOfCategory (self, *args, **kwargs):
      '''addChildOfCategory(self: MaterialX.PyMaterialXCore.Element, category: str, name: str = '') -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def asString (self, *args, **kwargs):
      '''asString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def changeChildCategory (self, *args, **kwargs):
      '''changeChildCategory(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element, arg1: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def clearContent (self, *args, **kwargs):
      '''clearContent(self: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def copyContentFrom (self, *args, **kwargs):
      '''copyContentFrom(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def createStringResolver (self, *args, **kwargs):
      '''createStringResolver(self: MaterialX.PyMaterialXCore.Element, geom: str = '') -> MaterialX_v1_38_8::StringResolver
'''
    ...
    def createValidChildName (self, *args, **kwargs):
      '''createValidChildName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getActiveColorSpace (self, *args, **kwargs):
      '''getActiveColorSpace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveFilePrefix (self, *args, **kwargs):
      '''getActiveFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveGeomPrefix (self, *args, **kwargs):
      '''getActiveGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveSourceUri (self, *args, **kwargs):
      '''getActiveSourceUri(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getAttribute (self, *args, **kwargs):
      '''getAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getAttributeNames (self, *args, **kwargs):
      '''getAttributeNames(self: MaterialX.PyMaterialXCore.Element) -> List[str]
'''
    ...
    def getCategory (self, *args, **kwargs):
      '''getCategory(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getChild (self, name):
      '''Return the child element, if any, with the given name.'''
    ...
    def getChildIndex (self, *args, **kwargs):
      '''getChildIndex(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> int
'''
    ...
    def getChildOfType (self, elementClass, name):
      '''Return the child element, if any, with the given name and subclass.'''
    ...
    def getChildren (self, *args, **kwargs):
      '''getChildren(self: MaterialX.PyMaterialXCore.Element) -> List[MaterialX.PyMaterialXCore.Element]
'''
    ...
    def getChildrenOfType (self, elementClass):
      '''Return a list of all child elements that are instances of the given type.
       The returned list maintains the order in which children were added.'''
    ...
    def getColorSpace (self, *args, **kwargs):
      '''getColorSpace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getDescendant (self, *args, **kwargs):
      '''getDescendant(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getDocString (self, *args, **kwargs):
      '''getDocString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getDocument (self, *args, **kwargs):
      '''getDocument(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::Document
'''
    ...
    def getFilePrefix (self, *args, **kwargs):
      '''getFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getGeomPrefix (self, *args, **kwargs):
      '''getGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getInheritString (self, *args, **kwargs):
      '''getInheritString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getInheritsFrom (self, *args, **kwargs):
      '''getInheritsFrom(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getName (self, *args, **kwargs):
      '''getName(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getNamePath (self, *args, **kwargs):
      '''getNamePath(self: MaterialX.PyMaterialXCore.Element, relativeTo: MaterialX.PyMaterialXCore.Element = None) -> str
'''
    ...
    def getNamespace (self, *args, **kwargs):
      '''getNamespace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getParent (self, *args, **kwargs):
      '''getParent(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getQualifiedName (self, *args, **kwargs):
      '''getQualifiedName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getRoot (self, *args, **kwargs):
      '''getRoot(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getSelf (self, *args, **kwargs):
      '''getSelf(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getSourceUri (self, *args, **kwargs):
      '''getSourceUri(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getUpstreamEdge (self, *args, **kwargs):
      '''getUpstreamEdge(self: MaterialX.PyMaterialXCore.Element, index: int = 0) -> MaterialX_v1_38_8::Edge
'''
    ...
    def getUpstreamEdgeCount (self, *args, **kwargs):
      '''getUpstreamEdgeCount(self: MaterialX.PyMaterialXCore.Element) -> int
'''
    ...
    def getUpstreamElement (self, *args, **kwargs):
      '''getUpstreamElement(self: MaterialX.PyMaterialXCore.Element, index: int = 0) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def hasAttribute (self, *args, **kwargs):
      '''hasAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> bool
'''
    ...
    def hasColorSpace (self, *args, **kwargs):
      '''hasColorSpace(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasFilePrefix (self, *args, **kwargs):
      '''hasFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasGeomPrefix (self, *args, **kwargs):
      '''hasGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritString (self, *args, **kwargs):
      '''hasInheritString(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritanceCycle (self, *args, **kwargs):
      '''hasInheritanceCycle(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritedBase (self, *args, **kwargs):
      '''hasInheritedBase(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasNamespace (self, *args, **kwargs):
      '''hasNamespace(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasSourceUri (self, *args, **kwargs):
      '''hasSourceUri(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def isA (self, elementClass, category=''):
      '''Return True if this element is an instance of the given subclass.
       If a category string is specified, then both subclass and category
       matches are required.'''
    ...
    def removeAttribute (self, *args, **kwargs):
      '''removeAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def removeChild (self, *args, **kwargs):
      '''removeChild(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def removeChildOfType (self, elementClass, name):
      '''Remove the typed child element, if any, with the given name.'''
    ...
    def setAttribute (self, *args, **kwargs):
      '''setAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str, arg1: str) -> None
'''
    ...
    def setCategory (self, *args, **kwargs):
      '''setCategory(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setChildIndex (self, *args, **kwargs):
      '''setChildIndex(self: MaterialX.PyMaterialXCore.Element, arg0: str, arg1: int) -> None
'''
    ...
    def setColorSpace (self, *args, **kwargs):
      '''setColorSpace(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setDocString (self, *args, **kwargs):
      '''setDocString(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setFilePrefix (self, *args, **kwargs):
      '''setFilePrefix(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setGeomPrefix (self, *args, **kwargs):
      '''setGeomPrefix(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setInheritString (self, *args, **kwargs):
      '''setInheritString(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setInheritsFrom (self, *args, **kwargs):
      '''setInheritsFrom(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def setName (self, *args, **kwargs):
      '''setName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setNamespace (self, *args, **kwargs):
      '''setNamespace(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setSourceUri (self, *args, **kwargs):
      '''setSourceUri(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def traverseGraph (self, *args, **kwargs):
      '''traverseGraph(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::GraphIterator
'''
    ...
    def traverseInheritance (self, *args, **kwargs):
      '''traverseInheritance(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::InheritanceIterator
'''
    ...
    def traverseTree (self, *args, **kwargs):
      '''traverseTree(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::TreeIterator
'''
    ...
    def validate (self, *args, **kwargs):
      '''validate(self: MaterialX.PyMaterialXCore.Element) -> Tuple[bool, str]
'''
    ...

def GeomElement (*args):
      '''

'''      
    ...

class GeomElement:
    def _addChildCollection (self, *args, **kwargs):
      '''_addChildCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Collection
'''
    ...
    def _addChildDocument (self, *args, **kwargs):
      '''_addChildDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Document
'''
    ...
    def _addChildGeomInfo (self, *args, **kwargs):
      '''_addChildGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomInfo
'''
    ...
    def _addChildGeomProp (self, *args, **kwargs):
      '''_addChildGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def _addChildImplementation (self, *args, **kwargs):
      '''_addChildImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Implementation
'''
    ...
    def _addChildLook (self, *args, **kwargs):
      '''_addChildLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Look
'''
    ...
    def _addChildMaterialAssign (self, *args, **kwargs):
      '''_addChildMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::MaterialAssign
'''
    ...
    def _addChildNode (self, *args, **kwargs):
      '''_addChildNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Node
'''
    ...
    def _addChildNodeDef (self, *args, **kwargs):
      '''_addChildNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeDef
'''
    ...
    def _addChildNodeGraph (self, *args, **kwargs):
      '''_addChildNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeGraph
'''
    ...
    def _addChildProperty (self, *args, **kwargs):
      '''_addChildProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Property
'''
    ...
    def _addChildPropertySet (self, *args, **kwargs):
      '''_addChildPropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySet
'''
    ...
    def _addChildPropertySetAssign (self, *args, **kwargs):
      '''_addChildPropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySetAssign
'''
    ...
    def _addChildToken (self, *args, **kwargs):
      '''_addChildToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Token
'''
    ...
    def _addChildTypeDef (self, *args, **kwargs):
      '''_addChildTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def _addChildVisibility (self, *args, **kwargs):
      '''_addChildVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Visibility
'''
    ...
    def _getChild (self, *args, **kwargs):
      '''_getChild(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def _getChildOfTypeCollection (self, *args, **kwargs):
      '''_getChildOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Collection
'''
    ...
    def _getChildOfTypeDocument (self, *args, **kwargs):
      '''_getChildOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Document
'''
    ...
    def _getChildOfTypeGeomInfo (self, *args, **kwargs):
      '''_getChildOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomInfo
'''
    ...
    def _getChildOfTypeGeomProp (self, *args, **kwargs):
      '''_getChildOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def _getChildOfTypeImplementation (self, *args, **kwargs):
      '''_getChildOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Implementation
'''
    ...
    def _getChildOfTypeLook (self, *args, **kwargs):
      '''_getChildOfTypeLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Look
'''
    ...
    def _getChildOfTypeMaterialAssign (self, *args, **kwargs):
      '''_getChildOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::MaterialAssign
'''
    ...
    def _getChildOfTypeNode (self, *args, **kwargs):
      '''_getChildOfTypeNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Node
'''
    ...
    def _getChildOfTypeNodeDef (self, *args, **kwargs):
      '''_getChildOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeDef
'''
    ...
    def _getChildOfTypeNodeGraph (self, *args, **kwargs):
      '''_getChildOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeGraph
'''
    ...
    def _getChildOfTypeProperty (self, *args, **kwargs):
      '''_getChildOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Property
'''
    ...
    def _getChildOfTypePropertySet (self, *args, **kwargs):
      '''_getChildOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySet
'''
    ...
    def _getChildOfTypePropertySetAssign (self, *args, **kwargs):
      '''_getChildOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySetAssign
'''
    ...
    def _getChildOfTypeToken (self, *args, **kwargs):
      '''_getChildOfTypeToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Token
'''
    ...
    def _getChildOfTypeTypeDef (self, *args, **kwargs):
      '''_getChildOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def _getChildOfTypeVisibility (self, *args, **kwargs):
      '''_getChildOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Visibility
'''
    ...
    def _getChildrenOfTypeCollection (self, *args, **kwargs):
      '''_getChildrenOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Collection]
'''
    ...
    def _getChildrenOfTypeDocument (self, *args, **kwargs):
      '''_getChildrenOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Document]
'''
    ...
    def _getChildrenOfTypeGeomInfo (self, *args, **kwargs):
      '''_getChildrenOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::GeomInfo]
'''
    ...
    def _getChildrenOfTypeGeomProp (self, *args, **kwargs):
      '''_getChildrenOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::GeomProp]
'''
    ...
    def _getChildrenOfTypeImplementation (self, *args, **kwargs):
      '''_getChildrenOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Implementation]
'''
    ...
    def _getChildrenOfTypeLook (self, *args, **kwargs):
      '''_getChildrenOfTypeLook(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Look]
'''
    ...
    def _getChildrenOfTypeMaterialAssign (self, *args, **kwargs):
      '''_getChildrenOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::MaterialAssign]
'''
    ...
    def _getChildrenOfTypeNode (self, *args, **kwargs):
      '''_getChildrenOfTypeNode(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Node]
'''
    ...
    def _getChildrenOfTypeNodeDef (self, *args, **kwargs):
      '''_getChildrenOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::NodeDef]
'''
    ...
    def _getChildrenOfTypeNodeGraph (self, *args, **kwargs):
      '''_getChildrenOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::NodeGraph]
'''
    ...
    def _getChildrenOfTypeProperty (self, *args, **kwargs):
      '''_getChildrenOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Property]
'''
    ...
    def _getChildrenOfTypePropertySet (self, *args, **kwargs):
      '''_getChildrenOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::PropertySet]
'''
    ...
    def _getChildrenOfTypePropertySetAssign (self, *args, **kwargs):
      '''_getChildrenOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::PropertySetAssign]
'''
    ...
    def _getChildrenOfTypeToken (self, *args, **kwargs):
      '''_getChildrenOfTypeToken(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Token]
'''
    ...
    def _getChildrenOfTypeTypeDef (self, *args, **kwargs):
      '''_getChildrenOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::TypeDef]
'''
    ...
    def _getChildrenOfTypeVisibility (self, *args, **kwargs):
      '''_getChildrenOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Visibility]
'''
    ...
    def _removeChildOfTypeCollection (self, *args, **kwargs):
      '''_removeChildOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeDocument (self, *args, **kwargs):
      '''_removeChildOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeGeomInfo (self, *args, **kwargs):
      '''_removeChildOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeGeomProp (self, *args, **kwargs):
      '''_removeChildOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeImplementation (self, *args, **kwargs):
      '''_removeChildOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeLook (self, *args, **kwargs):
      '''_removeChildOfTypeLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeMaterialAssign (self, *args, **kwargs):
      '''_removeChildOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNode (self, *args, **kwargs):
      '''_removeChildOfTypeNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNodeDef (self, *args, **kwargs):
      '''_removeChildOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNodeGraph (self, *args, **kwargs):
      '''_removeChildOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeProperty (self, *args, **kwargs):
      '''_removeChildOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypePropertySet (self, *args, **kwargs):
      '''_removeChildOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypePropertySetAssign (self, *args, **kwargs):
      '''_removeChildOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeToken (self, *args, **kwargs):
      '''_removeChildOfTypeToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeTypeDef (self, *args, **kwargs):
      '''_removeChildOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeVisibility (self, *args, **kwargs):
      '''_removeChildOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def addChild (self, elementClass, name, typeString=''):
      '''Add a child element of the given subclass, name, and optional type string.'''
    ...
    def addChildOfCategory (self, *args, **kwargs):
      '''addChildOfCategory(self: MaterialX.PyMaterialXCore.Element, category: str, name: str = '') -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def asString (self, *args, **kwargs):
      '''asString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def changeChildCategory (self, *args, **kwargs):
      '''changeChildCategory(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element, arg1: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def clearContent (self, *args, **kwargs):
      '''clearContent(self: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def copyContentFrom (self, *args, **kwargs):
      '''copyContentFrom(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def createStringResolver (self, *args, **kwargs):
      '''createStringResolver(self: MaterialX.PyMaterialXCore.Element, geom: str = '') -> MaterialX_v1_38_8::StringResolver
'''
    ...
    def createValidChildName (self, *args, **kwargs):
      '''createValidChildName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getActiveColorSpace (self, *args, **kwargs):
      '''getActiveColorSpace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveFilePrefix (self, *args, **kwargs):
      '''getActiveFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveGeomPrefix (self, *args, **kwargs):
      '''getActiveGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveSourceUri (self, *args, **kwargs):
      '''getActiveSourceUri(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getAttribute (self, *args, **kwargs):
      '''getAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getAttributeNames (self, *args, **kwargs):
      '''getAttributeNames(self: MaterialX.PyMaterialXCore.Element) -> List[str]
'''
    ...
    def getCategory (self, *args, **kwargs):
      '''getCategory(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getChild (self, name):
      '''Return the child element, if any, with the given name.'''
    ...
    def getChildIndex (self, *args, **kwargs):
      '''getChildIndex(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> int
'''
    ...
    def getChildOfType (self, elementClass, name):
      '''Return the child element, if any, with the given name and subclass.'''
    ...
    def getChildren (self, *args, **kwargs):
      '''getChildren(self: MaterialX.PyMaterialXCore.Element) -> List[MaterialX.PyMaterialXCore.Element]
'''
    ...
    def getChildrenOfType (self, elementClass):
      '''Return a list of all child elements that are instances of the given type.
       The returned list maintains the order in which children were added.'''
    ...
    def getCollection (self, *args, **kwargs):
      '''getCollection(self: MaterialX.PyMaterialXCore.GeomElement) -> MaterialX_v1_38_8::Collection
'''
    ...
    def getCollectionString (self, *args, **kwargs):
      '''getCollectionString(self: MaterialX.PyMaterialXCore.GeomElement) -> str
'''
    ...
    def getColorSpace (self, *args, **kwargs):
      '''getColorSpace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getDescendant (self, *args, **kwargs):
      '''getDescendant(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getDocString (self, *args, **kwargs):
      '''getDocString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getDocument (self, *args, **kwargs):
      '''getDocument(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::Document
'''
    ...
    def getFilePrefix (self, *args, **kwargs):
      '''getFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getGeom (self, *args, **kwargs):
      '''getGeom(self: MaterialX.PyMaterialXCore.GeomElement) -> str
'''
    ...
    def getGeomPrefix (self, *args, **kwargs):
      '''getGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getInheritString (self, *args, **kwargs):
      '''getInheritString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getInheritsFrom (self, *args, **kwargs):
      '''getInheritsFrom(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getName (self, *args, **kwargs):
      '''getName(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getNamePath (self, *args, **kwargs):
      '''getNamePath(self: MaterialX.PyMaterialXCore.Element, relativeTo: MaterialX.PyMaterialXCore.Element = None) -> str
'''
    ...
    def getNamespace (self, *args, **kwargs):
      '''getNamespace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getParent (self, *args, **kwargs):
      '''getParent(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getQualifiedName (self, *args, **kwargs):
      '''getQualifiedName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getRoot (self, *args, **kwargs):
      '''getRoot(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getSelf (self, *args, **kwargs):
      '''getSelf(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getSourceUri (self, *args, **kwargs):
      '''getSourceUri(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getUpstreamEdge (self, *args, **kwargs):
      '''getUpstreamEdge(self: MaterialX.PyMaterialXCore.Element, index: int = 0) -> MaterialX_v1_38_8::Edge
'''
    ...
    def getUpstreamEdgeCount (self, *args, **kwargs):
      '''getUpstreamEdgeCount(self: MaterialX.PyMaterialXCore.Element) -> int
'''
    ...
    def getUpstreamElement (self, *args, **kwargs):
      '''getUpstreamElement(self: MaterialX.PyMaterialXCore.Element, index: int = 0) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def hasAttribute (self, *args, **kwargs):
      '''hasAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> bool
'''
    ...
    def hasCollectionString (self, *args, **kwargs):
      '''hasCollectionString(self: MaterialX.PyMaterialXCore.GeomElement) -> bool
'''
    ...
    def hasColorSpace (self, *args, **kwargs):
      '''hasColorSpace(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasFilePrefix (self, *args, **kwargs):
      '''hasFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasGeom (self, *args, **kwargs):
      '''hasGeom(self: MaterialX.PyMaterialXCore.GeomElement) -> bool
'''
    ...
    def hasGeomPrefix (self, *args, **kwargs):
      '''hasGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritString (self, *args, **kwargs):
      '''hasInheritString(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritanceCycle (self, *args, **kwargs):
      '''hasInheritanceCycle(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritedBase (self, *args, **kwargs):
      '''hasInheritedBase(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasNamespace (self, *args, **kwargs):
      '''hasNamespace(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasSourceUri (self, *args, **kwargs):
      '''hasSourceUri(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def isA (self, elementClass, category=''):
      '''Return True if this element is an instance of the given subclass.
       If a category string is specified, then both subclass and category
       matches are required.'''
    ...
    def removeAttribute (self, *args, **kwargs):
      '''removeAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def removeChild (self, *args, **kwargs):
      '''removeChild(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def removeChildOfType (self, elementClass, name):
      '''Remove the typed child element, if any, with the given name.'''
    ...
    def setAttribute (self, *args, **kwargs):
      '''setAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str, arg1: str) -> None
'''
    ...
    def setCategory (self, *args, **kwargs):
      '''setCategory(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setChildIndex (self, *args, **kwargs):
      '''setChildIndex(self: MaterialX.PyMaterialXCore.Element, arg0: str, arg1: int) -> None
'''
    ...
    def setCollection (self, *args, **kwargs):
      '''setCollection(self: MaterialX.PyMaterialXCore.GeomElement, arg0: MaterialX_v1_38_8::Collection) -> None
'''
    ...
    def setCollectionString (self, *args, **kwargs):
      '''setCollectionString(self: MaterialX.PyMaterialXCore.GeomElement, arg0: str) -> None
'''
    ...
    def setColorSpace (self, *args, **kwargs):
      '''setColorSpace(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setDocString (self, *args, **kwargs):
      '''setDocString(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setFilePrefix (self, *args, **kwargs):
      '''setFilePrefix(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setGeom (self, *args, **kwargs):
      '''setGeom(self: MaterialX.PyMaterialXCore.GeomElement, arg0: str) -> None
'''
    ...
    def setGeomPrefix (self, *args, **kwargs):
      '''setGeomPrefix(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setInheritString (self, *args, **kwargs):
      '''setInheritString(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setInheritsFrom (self, *args, **kwargs):
      '''setInheritsFrom(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def setName (self, *args, **kwargs):
      '''setName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setNamespace (self, *args, **kwargs):
      '''setNamespace(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setSourceUri (self, *args, **kwargs):
      '''setSourceUri(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def traverseGraph (self, *args, **kwargs):
      '''traverseGraph(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::GraphIterator
'''
    ...
    def traverseInheritance (self, *args, **kwargs):
      '''traverseInheritance(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::InheritanceIterator
'''
    ...
    def traverseTree (self, *args, **kwargs):
      '''traverseTree(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::TreeIterator
'''
    ...
    def validate (self, *args, **kwargs):
      '''validate(self: MaterialX.PyMaterialXCore.Element) -> Tuple[bool, str]
'''
    ...

def GeomInfo (*args):
      '''

'''      
    ...

class GeomInfo:
    def CATEGORY (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def _addChildCollection (self, *args, **kwargs):
      '''_addChildCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Collection
'''
    ...
    def _addChildDocument (self, *args, **kwargs):
      '''_addChildDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Document
'''
    ...
    def _addChildGeomInfo (self, *args, **kwargs):
      '''_addChildGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomInfo
'''
    ...
    def _addChildGeomProp (self, *args, **kwargs):
      '''_addChildGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def _addChildImplementation (self, *args, **kwargs):
      '''_addChildImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Implementation
'''
    ...
    def _addChildLook (self, *args, **kwargs):
      '''_addChildLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Look
'''
    ...
    def _addChildMaterialAssign (self, *args, **kwargs):
      '''_addChildMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::MaterialAssign
'''
    ...
    def _addChildNode (self, *args, **kwargs):
      '''_addChildNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Node
'''
    ...
    def _addChildNodeDef (self, *args, **kwargs):
      '''_addChildNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeDef
'''
    ...
    def _addChildNodeGraph (self, *args, **kwargs):
      '''_addChildNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeGraph
'''
    ...
    def _addChildProperty (self, *args, **kwargs):
      '''_addChildProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Property
'''
    ...
    def _addChildPropertySet (self, *args, **kwargs):
      '''_addChildPropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySet
'''
    ...
    def _addChildPropertySetAssign (self, *args, **kwargs):
      '''_addChildPropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySetAssign
'''
    ...
    def _addChildToken (self, *args, **kwargs):
      '''_addChildToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Token
'''
    ...
    def _addChildTypeDef (self, *args, **kwargs):
      '''_addChildTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def _addChildVisibility (self, *args, **kwargs):
      '''_addChildVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Visibility
'''
    ...
    def _getChild (self, *args, **kwargs):
      '''_getChild(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def _getChildOfTypeCollection (self, *args, **kwargs):
      '''_getChildOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Collection
'''
    ...
    def _getChildOfTypeDocument (self, *args, **kwargs):
      '''_getChildOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Document
'''
    ...
    def _getChildOfTypeGeomInfo (self, *args, **kwargs):
      '''_getChildOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomInfo
'''
    ...
    def _getChildOfTypeGeomProp (self, *args, **kwargs):
      '''_getChildOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def _getChildOfTypeImplementation (self, *args, **kwargs):
      '''_getChildOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Implementation
'''
    ...
    def _getChildOfTypeLook (self, *args, **kwargs):
      '''_getChildOfTypeLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Look
'''
    ...
    def _getChildOfTypeMaterialAssign (self, *args, **kwargs):
      '''_getChildOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::MaterialAssign
'''
    ...
    def _getChildOfTypeNode (self, *args, **kwargs):
      '''_getChildOfTypeNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Node
'''
    ...
    def _getChildOfTypeNodeDef (self, *args, **kwargs):
      '''_getChildOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeDef
'''
    ...
    def _getChildOfTypeNodeGraph (self, *args, **kwargs):
      '''_getChildOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeGraph
'''
    ...
    def _getChildOfTypeProperty (self, *args, **kwargs):
      '''_getChildOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Property
'''
    ...
    def _getChildOfTypePropertySet (self, *args, **kwargs):
      '''_getChildOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySet
'''
    ...
    def _getChildOfTypePropertySetAssign (self, *args, **kwargs):
      '''_getChildOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySetAssign
'''
    ...
    def _getChildOfTypeToken (self, *args, **kwargs):
      '''_getChildOfTypeToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Token
'''
    ...
    def _getChildOfTypeTypeDef (self, *args, **kwargs):
      '''_getChildOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def _getChildOfTypeVisibility (self, *args, **kwargs):
      '''_getChildOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Visibility
'''
    ...
    def _getChildrenOfTypeCollection (self, *args, **kwargs):
      '''_getChildrenOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Collection]
'''
    ...
    def _getChildrenOfTypeDocument (self, *args, **kwargs):
      '''_getChildrenOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Document]
'''
    ...
    def _getChildrenOfTypeGeomInfo (self, *args, **kwargs):
      '''_getChildrenOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::GeomInfo]
'''
    ...
    def _getChildrenOfTypeGeomProp (self, *args, **kwargs):
      '''_getChildrenOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::GeomProp]
'''
    ...
    def _getChildrenOfTypeImplementation (self, *args, **kwargs):
      '''_getChildrenOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Implementation]
'''
    ...
    def _getChildrenOfTypeLook (self, *args, **kwargs):
      '''_getChildrenOfTypeLook(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Look]
'''
    ...
    def _getChildrenOfTypeMaterialAssign (self, *args, **kwargs):
      '''_getChildrenOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::MaterialAssign]
'''
    ...
    def _getChildrenOfTypeNode (self, *args, **kwargs):
      '''_getChildrenOfTypeNode(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Node]
'''
    ...
    def _getChildrenOfTypeNodeDef (self, *args, **kwargs):
      '''_getChildrenOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::NodeDef]
'''
    ...
    def _getChildrenOfTypeNodeGraph (self, *args, **kwargs):
      '''_getChildrenOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::NodeGraph]
'''
    ...
    def _getChildrenOfTypeProperty (self, *args, **kwargs):
      '''_getChildrenOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Property]
'''
    ...
    def _getChildrenOfTypePropertySet (self, *args, **kwargs):
      '''_getChildrenOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::PropertySet]
'''
    ...
    def _getChildrenOfTypePropertySetAssign (self, *args, **kwargs):
      '''_getChildrenOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::PropertySetAssign]
'''
    ...
    def _getChildrenOfTypeToken (self, *args, **kwargs):
      '''_getChildrenOfTypeToken(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Token]
'''
    ...
    def _getChildrenOfTypeTypeDef (self, *args, **kwargs):
      '''_getChildrenOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::TypeDef]
'''
    ...
    def _getChildrenOfTypeVisibility (self, *args, **kwargs):
      '''_getChildrenOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Visibility]
'''
    ...
    def _removeChildOfTypeCollection (self, *args, **kwargs):
      '''_removeChildOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeDocument (self, *args, **kwargs):
      '''_removeChildOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeGeomInfo (self, *args, **kwargs):
      '''_removeChildOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeGeomProp (self, *args, **kwargs):
      '''_removeChildOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeImplementation (self, *args, **kwargs):
      '''_removeChildOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeLook (self, *args, **kwargs):
      '''_removeChildOfTypeLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeMaterialAssign (self, *args, **kwargs):
      '''_removeChildOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNode (self, *args, **kwargs):
      '''_removeChildOfTypeNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNodeDef (self, *args, **kwargs):
      '''_removeChildOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNodeGraph (self, *args, **kwargs):
      '''_removeChildOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeProperty (self, *args, **kwargs):
      '''_removeChildOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypePropertySet (self, *args, **kwargs):
      '''_removeChildOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypePropertySetAssign (self, *args, **kwargs):
      '''_removeChildOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeToken (self, *args, **kwargs):
      '''_removeChildOfTypeToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeTypeDef (self, *args, **kwargs):
      '''_removeChildOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeVisibility (self, *args, **kwargs):
      '''_removeChildOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _setGeomPropValueboolean (self, *args, **kwargs):
      '''_setGeomPropValueboolean(self: MaterialX.PyMaterialXCore.GeomInfo, arg0: str, arg1: bool, arg2: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def _setGeomPropValuebooleanarray (self, *args, **kwargs):
      '''_setGeomPropValuebooleanarray(self: MaterialX.PyMaterialXCore.GeomInfo, arg0: str, arg1: List[bool], arg2: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def _setGeomPropValuecolor3 (self, *args, **kwargs):
      '''_setGeomPropValuecolor3(self: MaterialX.PyMaterialXCore.GeomInfo, arg0: str, arg1: MaterialX_v1_38_8::Color3, arg2: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def _setGeomPropValuecolor4 (self, *args, **kwargs):
      '''_setGeomPropValuecolor4(self: MaterialX.PyMaterialXCore.GeomInfo, arg0: str, arg1: MaterialX_v1_38_8::Color4, arg2: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def _setGeomPropValuefloat (self, *args, **kwargs):
      '''_setGeomPropValuefloat(self: MaterialX.PyMaterialXCore.GeomInfo, arg0: str, arg1: float, arg2: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def _setGeomPropValuefloatarray (self, *args, **kwargs):
      '''_setGeomPropValuefloatarray(self: MaterialX.PyMaterialXCore.GeomInfo, arg0: str, arg1: List[float], arg2: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def _setGeomPropValueinteger (self, *args, **kwargs):
      '''_setGeomPropValueinteger(self: MaterialX.PyMaterialXCore.GeomInfo, arg0: str, arg1: int, arg2: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def _setGeomPropValueintegerarray (self, *args, **kwargs):
      '''_setGeomPropValueintegerarray(self: MaterialX.PyMaterialXCore.GeomInfo, arg0: str, arg1: List[int], arg2: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def _setGeomPropValuematrix33 (self, *args, **kwargs):
      '''_setGeomPropValuematrix33(self: MaterialX.PyMaterialXCore.GeomInfo, arg0: str, arg1: MaterialX_v1_38_8::Matrix33, arg2: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def _setGeomPropValuematrix44 (self, *args, **kwargs):
      '''_setGeomPropValuematrix44(self: MaterialX.PyMaterialXCore.GeomInfo, arg0: str, arg1: MaterialX_v1_38_8::Matrix44, arg2: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def _setGeomPropValuestring (self, *args, **kwargs):
      '''_setGeomPropValuestring(self: MaterialX.PyMaterialXCore.GeomInfo, arg0: str, arg1: str, arg2: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def _setGeomPropValuestringarray (self, *args, **kwargs):
      '''_setGeomPropValuestringarray(self: MaterialX.PyMaterialXCore.GeomInfo, arg0: str, arg1: List[str], arg2: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def _setGeomPropValuevector2 (self, *args, **kwargs):
      '''_setGeomPropValuevector2(self: MaterialX.PyMaterialXCore.GeomInfo, arg0: str, arg1: MaterialX_v1_38_8::Vector2, arg2: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def _setGeomPropValuevector3 (self, *args, **kwargs):
      '''_setGeomPropValuevector3(self: MaterialX.PyMaterialXCore.GeomInfo, arg0: str, arg1: MaterialX_v1_38_8::Vector3, arg2: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def _setGeomPropValuevector4 (self, *args, **kwargs):
      '''_setGeomPropValuevector4(self: MaterialX.PyMaterialXCore.GeomInfo, arg0: str, arg1: MaterialX_v1_38_8::Vector4, arg2: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def addChild (self, elementClass, name, typeString=''):
      '''Add a child element of the given subclass, name, and optional type string.'''
    ...
    def addChildOfCategory (self, *args, **kwargs):
      '''addChildOfCategory(self: MaterialX.PyMaterialXCore.Element, category: str, name: str = '') -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def addGeomAttr (self, name):
      '''(Deprecated) Add a geomprop to this element.'''
    ...
    def addGeomProp (self, *args, **kwargs):
      '''addGeomProp(self: MaterialX.PyMaterialXCore.GeomInfo, arg0: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def addToken (self, *args, **kwargs):
      '''addToken(self: MaterialX.PyMaterialXCore.GeomInfo, name: str = 'color3') -> MaterialX.PyMaterialXCore.Token
'''
    ...
    def asString (self, *args, **kwargs):
      '''asString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def changeChildCategory (self, *args, **kwargs):
      '''changeChildCategory(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element, arg1: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def clearContent (self, *args, **kwargs):
      '''clearContent(self: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def copyContentFrom (self, *args, **kwargs):
      '''copyContentFrom(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def createStringResolver (self, *args, **kwargs):
      '''createStringResolver(self: MaterialX.PyMaterialXCore.Element, geom: str = '') -> MaterialX_v1_38_8::StringResolver
'''
    ...
    def createValidChildName (self, *args, **kwargs):
      '''createValidChildName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getActiveColorSpace (self, *args, **kwargs):
      '''getActiveColorSpace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveFilePrefix (self, *args, **kwargs):
      '''getActiveFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveGeomPrefix (self, *args, **kwargs):
      '''getActiveGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveSourceUri (self, *args, **kwargs):
      '''getActiveSourceUri(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getAttribute (self, *args, **kwargs):
      '''getAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getAttributeNames (self, *args, **kwargs):
      '''getAttributeNames(self: MaterialX.PyMaterialXCore.Element) -> List[str]
'''
    ...
    def getCategory (self, *args, **kwargs):
      '''getCategory(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getChild (self, name):
      '''Return the child element, if any, with the given name.'''
    ...
    def getChildIndex (self, *args, **kwargs):
      '''getChildIndex(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> int
'''
    ...
    def getChildOfType (self, elementClass, name):
      '''Return the child element, if any, with the given name and subclass.'''
    ...
    def getChildren (self, *args, **kwargs):
      '''getChildren(self: MaterialX.PyMaterialXCore.Element) -> List[MaterialX.PyMaterialXCore.Element]
'''
    ...
    def getChildrenOfType (self, elementClass):
      '''Return a list of all child elements that are instances of the given type.
       The returned list maintains the order in which children were added.'''
    ...
    def getCollection (self, *args, **kwargs):
      '''getCollection(self: MaterialX.PyMaterialXCore.GeomElement) -> MaterialX_v1_38_8::Collection
'''
    ...
    def getCollectionString (self, *args, **kwargs):
      '''getCollectionString(self: MaterialX.PyMaterialXCore.GeomElement) -> str
'''
    ...
    def getColorSpace (self, *args, **kwargs):
      '''getColorSpace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getDescendant (self, *args, **kwargs):
      '''getDescendant(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getDocString (self, *args, **kwargs):
      '''getDocString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getDocument (self, *args, **kwargs):
      '''getDocument(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::Document
'''
    ...
    def getFilePrefix (self, *args, **kwargs):
      '''getFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getGeom (self, *args, **kwargs):
      '''getGeom(self: MaterialX.PyMaterialXCore.GeomElement) -> str
'''
    ...
    def getGeomPrefix (self, *args, **kwargs):
      '''getGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getGeomProp (self, *args, **kwargs):
      '''getGeomProp(self: MaterialX.PyMaterialXCore.GeomInfo, arg0: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def getGeomProps (self, *args, **kwargs):
      '''getGeomProps(self: MaterialX.PyMaterialXCore.GeomInfo) -> List[MaterialX_v1_38_8::GeomProp]
'''
    ...
    def getInheritString (self, *args, **kwargs):
      '''getInheritString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getInheritsFrom (self, *args, **kwargs):
      '''getInheritsFrom(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getName (self, *args, **kwargs):
      '''getName(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getNamePath (self, *args, **kwargs):
      '''getNamePath(self: MaterialX.PyMaterialXCore.Element, relativeTo: MaterialX.PyMaterialXCore.Element = None) -> str
'''
    ...
    def getNamespace (self, *args, **kwargs):
      '''getNamespace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getParent (self, *args, **kwargs):
      '''getParent(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getQualifiedName (self, *args, **kwargs):
      '''getQualifiedName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getRoot (self, *args, **kwargs):
      '''getRoot(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getSelf (self, *args, **kwargs):
      '''getSelf(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getSourceUri (self, *args, **kwargs):
      '''getSourceUri(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getToken (self, *args, **kwargs):
      '''getToken(self: MaterialX.PyMaterialXCore.GeomInfo, arg0: str) -> MaterialX.PyMaterialXCore.Token
'''
    ...
    def getTokens (self, *args, **kwargs):
      '''getTokens(self: MaterialX.PyMaterialXCore.GeomInfo) -> List[MaterialX.PyMaterialXCore.Token]
'''
    ...
    def getUpstreamEdge (self, *args, **kwargs):
      '''getUpstreamEdge(self: MaterialX.PyMaterialXCore.Element, index: int = 0) -> MaterialX_v1_38_8::Edge
'''
    ...
    def getUpstreamEdgeCount (self, *args, **kwargs):
      '''getUpstreamEdgeCount(self: MaterialX.PyMaterialXCore.Element) -> int
'''
    ...
    def getUpstreamElement (self, *args, **kwargs):
      '''getUpstreamElement(self: MaterialX.PyMaterialXCore.Element, index: int = 0) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def hasAttribute (self, *args, **kwargs):
      '''hasAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> bool
'''
    ...
    def hasCollectionString (self, *args, **kwargs):
      '''hasCollectionString(self: MaterialX.PyMaterialXCore.GeomElement) -> bool
'''
    ...
    def hasColorSpace (self, *args, **kwargs):
      '''hasColorSpace(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasFilePrefix (self, *args, **kwargs):
      '''hasFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasGeom (self, *args, **kwargs):
      '''hasGeom(self: MaterialX.PyMaterialXCore.GeomElement) -> bool
'''
    ...
    def hasGeomPrefix (self, *args, **kwargs):
      '''hasGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritString (self, *args, **kwargs):
      '''hasInheritString(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritanceCycle (self, *args, **kwargs):
      '''hasInheritanceCycle(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritedBase (self, *args, **kwargs):
      '''hasInheritedBase(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasNamespace (self, *args, **kwargs):
      '''hasNamespace(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasSourceUri (self, *args, **kwargs):
      '''hasSourceUri(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def isA (self, elementClass, category=''):
      '''Return True if this element is an instance of the given subclass.
       If a category string is specified, then both subclass and category
       matches are required.'''
    ...
    def removeAttribute (self, *args, **kwargs):
      '''removeAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def removeChild (self, *args, **kwargs):
      '''removeChild(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def removeChildOfType (self, elementClass, name):
      '''Remove the typed child element, if any, with the given name.'''
    ...
    def removeGeomProp (self, *args, **kwargs):
      '''removeGeomProp(self: MaterialX.PyMaterialXCore.GeomInfo, arg0: str) -> None
'''
    ...
    def removeToken (self, *args, **kwargs):
      '''removeToken(self: MaterialX.PyMaterialXCore.GeomInfo, arg0: str) -> None
'''
    ...
    def setAttribute (self, *args, **kwargs):
      '''setAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str, arg1: str) -> None
'''
    ...
    def setCategory (self, *args, **kwargs):
      '''setCategory(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setChildIndex (self, *args, **kwargs):
      '''setChildIndex(self: MaterialX.PyMaterialXCore.Element, arg0: str, arg1: int) -> None
'''
    ...
    def setCollection (self, *args, **kwargs):
      '''setCollection(self: MaterialX.PyMaterialXCore.GeomElement, arg0: MaterialX_v1_38_8::Collection) -> None
'''
    ...
    def setCollectionString (self, *args, **kwargs):
      '''setCollectionString(self: MaterialX.PyMaterialXCore.GeomElement, arg0: str) -> None
'''
    ...
    def setColorSpace (self, *args, **kwargs):
      '''setColorSpace(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setDocString (self, *args, **kwargs):
      '''setDocString(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setFilePrefix (self, *args, **kwargs):
      '''setFilePrefix(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setGeom (self, *args, **kwargs):
      '''setGeom(self: MaterialX.PyMaterialXCore.GeomElement, arg0: str) -> None
'''
    ...
    def setGeomAttrValue (self, name, value, typeString=''):
      '''(Deprecated) Set the value of a geomattr by its name.'''
    ...
    def setGeomPrefix (self, *args, **kwargs):
      '''setGeomPrefix(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setGeomPropValue (self, name, value, typeString=''):
      '''Set the value of a geomprop by its name, creating a child element
       to hold the geomprop if needed.'''
    ...
    def setInheritString (self, *args, **kwargs):
      '''setInheritString(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setInheritsFrom (self, *args, **kwargs):
      '''setInheritsFrom(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def setName (self, *args, **kwargs):
      '''setName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setNamespace (self, *args, **kwargs):
      '''setNamespace(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setSourceUri (self, *args, **kwargs):
      '''setSourceUri(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setTokenValue (self, *args, **kwargs):
      '''setTokenValue(self: MaterialX.PyMaterialXCore.GeomInfo, arg0: str, arg1: str) -> MaterialX.PyMaterialXCore.Token
'''
    ...
    def traverseGraph (self, *args, **kwargs):
      '''traverseGraph(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::GraphIterator
'''
    ...
    def traverseInheritance (self, *args, **kwargs):
      '''traverseInheritance(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::InheritanceIterator
'''
    ...
    def traverseTree (self, *args, **kwargs):
      '''traverseTree(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::TreeIterator
'''
    ...
    def validate (self, *args, **kwargs):
      '''validate(self: MaterialX.PyMaterialXCore.Element) -> Tuple[bool, str]
'''
    ...

def GeomProp (*args):
      '''

'''      
    ...

class GeomProp:
    def CATEGORY (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def ENUM_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def ENUM_VALUES_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def IMPLEMENTATION_NAME_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def IMPLEMENTATION_TYPE_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def INTERFACE_NAME_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def TYPE_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def UI_ADVANCED_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def UI_FOLDER_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def UI_MAX_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def UI_MIN_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def UI_NAME_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def UI_SOFT_MAX_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def UI_SOFT_MIN_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def UI_STEP_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def UNIT_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def VALUE_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def _addChildCollection (self, *args, **kwargs):
      '''_addChildCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Collection
'''
    ...
    def _addChildDocument (self, *args, **kwargs):
      '''_addChildDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Document
'''
    ...
    def _addChildGeomInfo (self, *args, **kwargs):
      '''_addChildGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomInfo
'''
    ...
    def _addChildGeomProp (self, *args, **kwargs):
      '''_addChildGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def _addChildImplementation (self, *args, **kwargs):
      '''_addChildImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Implementation
'''
    ...
    def _addChildLook (self, *args, **kwargs):
      '''_addChildLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Look
'''
    ...
    def _addChildMaterialAssign (self, *args, **kwargs):
      '''_addChildMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::MaterialAssign
'''
    ...
    def _addChildNode (self, *args, **kwargs):
      '''_addChildNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Node
'''
    ...
    def _addChildNodeDef (self, *args, **kwargs):
      '''_addChildNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeDef
'''
    ...
    def _addChildNodeGraph (self, *args, **kwargs):
      '''_addChildNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeGraph
'''
    ...
    def _addChildProperty (self, *args, **kwargs):
      '''_addChildProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Property
'''
    ...
    def _addChildPropertySet (self, *args, **kwargs):
      '''_addChildPropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySet
'''
    ...
    def _addChildPropertySetAssign (self, *args, **kwargs):
      '''_addChildPropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySetAssign
'''
    ...
    def _addChildToken (self, *args, **kwargs):
      '''_addChildToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Token
'''
    ...
    def _addChildTypeDef (self, *args, **kwargs):
      '''_addChildTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def _addChildVisibility (self, *args, **kwargs):
      '''_addChildVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Visibility
'''
    ...
    def _getChild (self, *args, **kwargs):
      '''_getChild(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def _getChildOfTypeCollection (self, *args, **kwargs):
      '''_getChildOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Collection
'''
    ...
    def _getChildOfTypeDocument (self, *args, **kwargs):
      '''_getChildOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Document
'''
    ...
    def _getChildOfTypeGeomInfo (self, *args, **kwargs):
      '''_getChildOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomInfo
'''
    ...
    def _getChildOfTypeGeomProp (self, *args, **kwargs):
      '''_getChildOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def _getChildOfTypeImplementation (self, *args, **kwargs):
      '''_getChildOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Implementation
'''
    ...
    def _getChildOfTypeLook (self, *args, **kwargs):
      '''_getChildOfTypeLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Look
'''
    ...
    def _getChildOfTypeMaterialAssign (self, *args, **kwargs):
      '''_getChildOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::MaterialAssign
'''
    ...
    def _getChildOfTypeNode (self, *args, **kwargs):
      '''_getChildOfTypeNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Node
'''
    ...
    def _getChildOfTypeNodeDef (self, *args, **kwargs):
      '''_getChildOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeDef
'''
    ...
    def _getChildOfTypeNodeGraph (self, *args, **kwargs):
      '''_getChildOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeGraph
'''
    ...
    def _getChildOfTypeProperty (self, *args, **kwargs):
      '''_getChildOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Property
'''
    ...
    def _getChildOfTypePropertySet (self, *args, **kwargs):
      '''_getChildOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySet
'''
    ...
    def _getChildOfTypePropertySetAssign (self, *args, **kwargs):
      '''_getChildOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySetAssign
'''
    ...
    def _getChildOfTypeToken (self, *args, **kwargs):
      '''_getChildOfTypeToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Token
'''
    ...
    def _getChildOfTypeTypeDef (self, *args, **kwargs):
      '''_getChildOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def _getChildOfTypeVisibility (self, *args, **kwargs):
      '''_getChildOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Visibility
'''
    ...
    def _getChildrenOfTypeCollection (self, *args, **kwargs):
      '''_getChildrenOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Collection]
'''
    ...
    def _getChildrenOfTypeDocument (self, *args, **kwargs):
      '''_getChildrenOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Document]
'''
    ...
    def _getChildrenOfTypeGeomInfo (self, *args, **kwargs):
      '''_getChildrenOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::GeomInfo]
'''
    ...
    def _getChildrenOfTypeGeomProp (self, *args, **kwargs):
      '''_getChildrenOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::GeomProp]
'''
    ...
    def _getChildrenOfTypeImplementation (self, *args, **kwargs):
      '''_getChildrenOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Implementation]
'''
    ...
    def _getChildrenOfTypeLook (self, *args, **kwargs):
      '''_getChildrenOfTypeLook(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Look]
'''
    ...
    def _getChildrenOfTypeMaterialAssign (self, *args, **kwargs):
      '''_getChildrenOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::MaterialAssign]
'''
    ...
    def _getChildrenOfTypeNode (self, *args, **kwargs):
      '''_getChildrenOfTypeNode(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Node]
'''
    ...
    def _getChildrenOfTypeNodeDef (self, *args, **kwargs):
      '''_getChildrenOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::NodeDef]
'''
    ...
    def _getChildrenOfTypeNodeGraph (self, *args, **kwargs):
      '''_getChildrenOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::NodeGraph]
'''
    ...
    def _getChildrenOfTypeProperty (self, *args, **kwargs):
      '''_getChildrenOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Property]
'''
    ...
    def _getChildrenOfTypePropertySet (self, *args, **kwargs):
      '''_getChildrenOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::PropertySet]
'''
    ...
    def _getChildrenOfTypePropertySetAssign (self, *args, **kwargs):
      '''_getChildrenOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::PropertySetAssign]
'''
    ...
    def _getChildrenOfTypeToken (self, *args, **kwargs):
      '''_getChildrenOfTypeToken(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Token]
'''
    ...
    def _getChildrenOfTypeTypeDef (self, *args, **kwargs):
      '''_getChildrenOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::TypeDef]
'''
    ...
    def _getChildrenOfTypeVisibility (self, *args, **kwargs):
      '''_getChildrenOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Visibility]
'''
    ...
    def _getDefaultValue (self, *args, **kwargs):
      '''_getDefaultValue(self: MaterialX.PyMaterialXCore.ValueElement) -> MaterialX_v1_38_8::Value
'''
    ...
    def _getValue (self, *args, **kwargs):
      '''_getValue(self: MaterialX.PyMaterialXCore.ValueElement) -> MaterialX_v1_38_8::Value
'''
    ...
    def _removeChildOfTypeCollection (self, *args, **kwargs):
      '''_removeChildOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeDocument (self, *args, **kwargs):
      '''_removeChildOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeGeomInfo (self, *args, **kwargs):
      '''_removeChildOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeGeomProp (self, *args, **kwargs):
      '''_removeChildOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeImplementation (self, *args, **kwargs):
      '''_removeChildOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeLook (self, *args, **kwargs):
      '''_removeChildOfTypeLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeMaterialAssign (self, *args, **kwargs):
      '''_removeChildOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNode (self, *args, **kwargs):
      '''_removeChildOfTypeNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNodeDef (self, *args, **kwargs):
      '''_removeChildOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNodeGraph (self, *args, **kwargs):
      '''_removeChildOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeProperty (self, *args, **kwargs):
      '''_removeChildOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypePropertySet (self, *args, **kwargs):
      '''_removeChildOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypePropertySetAssign (self, *args, **kwargs):
      '''_removeChildOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeToken (self, *args, **kwargs):
      '''_removeChildOfTypeToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeTypeDef (self, *args, **kwargs):
      '''_removeChildOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeVisibility (self, *args, **kwargs):
      '''_removeChildOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _setValueboolean (self, *args, **kwargs):
      '''_setValueboolean(self: MaterialX.PyMaterialXCore.ValueElement, value: bool, type: str = '') -> None
'''
    ...
    def _setValuebooleanarray (self, *args, **kwargs):
      '''_setValuebooleanarray(self: MaterialX.PyMaterialXCore.ValueElement, value: List[bool], type: str = '') -> None
'''
    ...
    def _setValuecolor3 (self, *args, **kwargs):
      '''_setValuecolor3(self: MaterialX.PyMaterialXCore.ValueElement, value: MaterialX_v1_38_8::Color3, type: str = '') -> None
'''
    ...
    def _setValuecolor4 (self, *args, **kwargs):
      '''_setValuecolor4(self: MaterialX.PyMaterialXCore.ValueElement, value: MaterialX_v1_38_8::Color4, type: str = '') -> None
'''
    ...
    def _setValuefloat (self, *args, **kwargs):
      '''_setValuefloat(self: MaterialX.PyMaterialXCore.ValueElement, value: float, type: str = '') -> None
'''
    ...
    def _setValuefloatarray (self, *args, **kwargs):
      '''_setValuefloatarray(self: MaterialX.PyMaterialXCore.ValueElement, value: List[float], type: str = '') -> None
'''
    ...
    def _setValueinteger (self, *args, **kwargs):
      '''_setValueinteger(self: MaterialX.PyMaterialXCore.ValueElement, value: int, type: str = '') -> None
'''
    ...
    def _setValueintegerarray (self, *args, **kwargs):
      '''_setValueintegerarray(self: MaterialX.PyMaterialXCore.ValueElement, value: List[int], type: str = '') -> None
'''
    ...
    def _setValuematrix33 (self, *args, **kwargs):
      '''_setValuematrix33(self: MaterialX.PyMaterialXCore.ValueElement, value: MaterialX_v1_38_8::Matrix33, type: str = '') -> None
'''
    ...
    def _setValuematrix44 (self, *args, **kwargs):
      '''_setValuematrix44(self: MaterialX.PyMaterialXCore.ValueElement, value: MaterialX_v1_38_8::Matrix44, type: str = '') -> None
'''
    ...
    def _setValuestring (self, *args, **kwargs):
      '''_setValuestring(self: MaterialX.PyMaterialXCore.ValueElement, value: str, type: str = '') -> None
'''
    ...
    def _setValuestringarray (self, *args, **kwargs):
      '''_setValuestringarray(self: MaterialX.PyMaterialXCore.ValueElement, value: List[str], type: str = '') -> None
'''
    ...
    def _setValuevector2 (self, *args, **kwargs):
      '''_setValuevector2(self: MaterialX.PyMaterialXCore.ValueElement, value: MaterialX_v1_38_8::Vector2, type: str = '') -> None
'''
    ...
    def _setValuevector3 (self, *args, **kwargs):
      '''_setValuevector3(self: MaterialX.PyMaterialXCore.ValueElement, value: MaterialX_v1_38_8::Vector3, type: str = '') -> None
'''
    ...
    def _setValuevector4 (self, *args, **kwargs):
      '''_setValuevector4(self: MaterialX.PyMaterialXCore.ValueElement, value: MaterialX_v1_38_8::Vector4, type: str = '') -> None
'''
    ...
    def addChild (self, elementClass, name, typeString=''):
      '''Add a child element of the given subclass, name, and optional type string.'''
    ...
    def addChildOfCategory (self, *args, **kwargs):
      '''addChildOfCategory(self: MaterialX.PyMaterialXCore.Element, category: str, name: str = '') -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def asString (self, *args, **kwargs):
      '''asString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def changeChildCategory (self, *args, **kwargs):
      '''changeChildCategory(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element, arg1: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def clearContent (self, *args, **kwargs):
      '''clearContent(self: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def copyContentFrom (self, *args, **kwargs):
      '''copyContentFrom(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def createStringResolver (self, *args, **kwargs):
      '''createStringResolver(self: MaterialX.PyMaterialXCore.Element, geom: str = '') -> MaterialX_v1_38_8::StringResolver
'''
    ...
    def createValidChildName (self, *args, **kwargs):
      '''createValidChildName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getActiveColorSpace (self, *args, **kwargs):
      '''getActiveColorSpace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveFilePrefix (self, *args, **kwargs):
      '''getActiveFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveGeomPrefix (self, *args, **kwargs):
      '''getActiveGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveSourceUri (self, *args, **kwargs):
      '''getActiveSourceUri(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveUnit (self, *args, **kwargs):
      '''getActiveUnit(self: MaterialX.PyMaterialXCore.ValueElement) -> str
'''
    ...
    def getAttribute (self, *args, **kwargs):
      '''getAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getAttributeNames (self, *args, **kwargs):
      '''getAttributeNames(self: MaterialX.PyMaterialXCore.Element) -> List[str]
'''
    ...
    def getCategory (self, *args, **kwargs):
      '''getCategory(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getChild (self, name):
      '''Return the child element, if any, with the given name.'''
    ...
    def getChildIndex (self, *args, **kwargs):
      '''getChildIndex(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> int
'''
    ...
    def getChildOfType (self, elementClass, name):
      '''Return the child element, if any, with the given name and subclass.'''
    ...
    def getChildren (self, *args, **kwargs):
      '''getChildren(self: MaterialX.PyMaterialXCore.Element) -> List[MaterialX.PyMaterialXCore.Element]
'''
    ...
    def getChildrenOfType (self, elementClass):
      '''Return a list of all child elements that are instances of the given type.
       The returned list maintains the order in which children were added.'''
    ...
    def getColorSpace (self, *args, **kwargs):
      '''getColorSpace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getDefaultValue (self):
      '''Return the default value for this element.'''
    ...
    def getDescendant (self, *args, **kwargs):
      '''getDescendant(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getDocString (self, *args, **kwargs):
      '''getDocString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getDocument (self, *args, **kwargs):
      '''getDocument(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::Document
'''
    ...
    def getFilePrefix (self, *args, **kwargs):
      '''getFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getGeomPrefix (self, *args, **kwargs):
      '''getGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getImplementationName (self, *args, **kwargs):
      '''getImplementationName(self: MaterialX.PyMaterialXCore.ValueElement) -> str
'''
    ...
    def getInheritString (self, *args, **kwargs):
      '''getInheritString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getInheritsFrom (self, *args, **kwargs):
      '''getInheritsFrom(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getInterfaceName (self, *args, **kwargs):
      '''getInterfaceName(self: MaterialX.PyMaterialXCore.ValueElement) -> str
'''
    ...
    def getIsUniform (self, *args, **kwargs):
      '''getIsUniform(self: MaterialX.PyMaterialXCore.ValueElement) -> bool
'''
    ...
    def getName (self, *args, **kwargs):
      '''getName(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getNamePath (self, *args, **kwargs):
      '''getNamePath(self: MaterialX.PyMaterialXCore.Element, relativeTo: MaterialX.PyMaterialXCore.Element = None) -> str
'''
    ...
    def getNamespace (self, *args, **kwargs):
      '''getNamespace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getParent (self, *args, **kwargs):
      '''getParent(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getQualifiedName (self, *args, **kwargs):
      '''getQualifiedName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getResolvedValueString (self, *args, **kwargs):
      '''getResolvedValueString(self: MaterialX.PyMaterialXCore.ValueElement, resolver: MaterialX_v1_38_8::StringResolver = None) -> str
'''
    ...
    def getRoot (self, *args, **kwargs):
      '''getRoot(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getSelf (self, *args, **kwargs):
      '''getSelf(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getSourceUri (self, *args, **kwargs):
      '''getSourceUri(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getType (self, *args, **kwargs):
      '''getType(self: MaterialX.PyMaterialXCore.TypedElement) -> str
'''
    ...
    def getTypeDef (self, *args, **kwargs):
      '''getTypeDef(self: MaterialX.PyMaterialXCore.TypedElement) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def getUnit (self, *args, **kwargs):
      '''getUnit(self: MaterialX.PyMaterialXCore.ValueElement) -> str
'''
    ...
    def getUnitType (self, *args, **kwargs):
      '''getUnitType(self: MaterialX.PyMaterialXCore.ValueElement) -> str
'''
    ...
    def getUpstreamEdge (self, *args, **kwargs):
      '''getUpstreamEdge(self: MaterialX.PyMaterialXCore.Element, index: int = 0) -> MaterialX_v1_38_8::Edge
'''
    ...
    def getUpstreamEdgeCount (self, *args, **kwargs):
      '''getUpstreamEdgeCount(self: MaterialX.PyMaterialXCore.Element) -> int
'''
    ...
    def getUpstreamElement (self, *args, **kwargs):
      '''getUpstreamElement(self: MaterialX.PyMaterialXCore.Element, index: int = 0) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getValue (self):
      '''Return the typed value of an element.'''
    ...
    def getValueString (self, *args, **kwargs):
      '''getValueString(self: MaterialX.PyMaterialXCore.ValueElement) -> str
'''
    ...
    def hasAttribute (self, *args, **kwargs):
      '''hasAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> bool
'''
    ...
    def hasColorSpace (self, *args, **kwargs):
      '''hasColorSpace(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasFilePrefix (self, *args, **kwargs):
      '''hasFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasGeomPrefix (self, *args, **kwargs):
      '''hasGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasImplementationName (self, *args, **kwargs):
      '''hasImplementationName(self: MaterialX.PyMaterialXCore.ValueElement) -> bool
'''
    ...
    def hasInheritString (self, *args, **kwargs):
      '''hasInheritString(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritanceCycle (self, *args, **kwargs):
      '''hasInheritanceCycle(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritedBase (self, *args, **kwargs):
      '''hasInheritedBase(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInterfaceName (self, *args, **kwargs):
      '''hasInterfaceName(self: MaterialX.PyMaterialXCore.ValueElement) -> bool
'''
    ...
    def hasNamespace (self, *args, **kwargs):
      '''hasNamespace(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasSourceUri (self, *args, **kwargs):
      '''hasSourceUri(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasType (self, *args, **kwargs):
      '''hasType(self: MaterialX.PyMaterialXCore.TypedElement) -> bool
'''
    ...
    def hasUnit (self, *args, **kwargs):
      '''hasUnit(self: MaterialX.PyMaterialXCore.ValueElement) -> bool
'''
    ...
    def hasUnitType (self, *args, **kwargs):
      '''hasUnitType(self: MaterialX.PyMaterialXCore.ValueElement) -> bool
'''
    ...
    def hasValueString (self, *args, **kwargs):
      '''hasValueString(self: MaterialX.PyMaterialXCore.ValueElement) -> bool
'''
    ...
    def isA (self, elementClass, category=''):
      '''Return True if this element is an instance of the given subclass.
       If a category string is specified, then both subclass and category
       matches are required.'''
    ...
    def isMultiOutputType (self, *args, **kwargs):
      '''isMultiOutputType(self: MaterialX.PyMaterialXCore.TypedElement) -> bool
'''
    ...
    def removeAttribute (self, *args, **kwargs):
      '''removeAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def removeChild (self, *args, **kwargs):
      '''removeChild(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def removeChildOfType (self, elementClass, name):
      '''Remove the typed child element, if any, with the given name.'''
    ...
    def setAttribute (self, *args, **kwargs):
      '''setAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str, arg1: str) -> None
'''
    ...
    def setCategory (self, *args, **kwargs):
      '''setCategory(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setChildIndex (self, *args, **kwargs):
      '''setChildIndex(self: MaterialX.PyMaterialXCore.Element, arg0: str, arg1: int) -> None
'''
    ...
    def setColorSpace (self, *args, **kwargs):
      '''setColorSpace(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setDocString (self, *args, **kwargs):
      '''setDocString(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setFilePrefix (self, *args, **kwargs):
      '''setFilePrefix(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setGeomPrefix (self, *args, **kwargs):
      '''setGeomPrefix(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setImplementationName (self, *args, **kwargs):
      '''setImplementationName(self: MaterialX.PyMaterialXCore.ValueElement, arg0: str) -> None
'''
    ...
    def setInheritString (self, *args, **kwargs):
      '''setInheritString(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setInheritsFrom (self, *args, **kwargs):
      '''setInheritsFrom(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def setInterfaceName (self, *args, **kwargs):
      '''setInterfaceName(self: MaterialX.PyMaterialXCore.ValueElement, arg0: str) -> None
'''
    ...
    def setIsUniform (self, *args, **kwargs):
      '''setIsUniform(self: MaterialX.PyMaterialXCore.ValueElement, arg0: bool) -> None
'''
    ...
    def setName (self, *args, **kwargs):
      '''setName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setNamespace (self, *args, **kwargs):
      '''setNamespace(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setSourceUri (self, *args, **kwargs):
      '''setSourceUri(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setType (self, *args, **kwargs):
      '''setType(self: MaterialX.PyMaterialXCore.TypedElement, arg0: str) -> None
'''
    ...
    def setUnit (self, *args, **kwargs):
      '''setUnit(self: MaterialX.PyMaterialXCore.ValueElement, arg0: str) -> None
'''
    ...
    def setUnitType (self, *args, **kwargs):
      '''setUnitType(self: MaterialX.PyMaterialXCore.ValueElement, arg0: str) -> None
'''
    ...
    def setValue (self, value, typeString=''):
      '''Set the typed value of an element.'''
    ...
    def setValueString (self, *args, **kwargs):
      '''setValueString(self: MaterialX.PyMaterialXCore.ValueElement, arg0: str) -> None
'''
    ...
    def traverseGraph (self, *args, **kwargs):
      '''traverseGraph(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::GraphIterator
'''
    ...
    def traverseInheritance (self, *args, **kwargs):
      '''traverseInheritance(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::InheritanceIterator
'''
    ...
    def traverseTree (self, *args, **kwargs):
      '''traverseTree(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::TreeIterator
'''
    ...
    def validate (self, *args, **kwargs):
      '''validate(self: MaterialX.PyMaterialXCore.Element) -> Tuple[bool, str]
'''
    ...

def GeomPropDef (*args):
      '''

'''      
    ...

class GeomPropDef:
    def CATEGORY (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def TYPE_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def _addChildCollection (self, *args, **kwargs):
      '''_addChildCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Collection
'''
    ...
    def _addChildDocument (self, *args, **kwargs):
      '''_addChildDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Document
'''
    ...
    def _addChildGeomInfo (self, *args, **kwargs):
      '''_addChildGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomInfo
'''
    ...
    def _addChildGeomProp (self, *args, **kwargs):
      '''_addChildGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def _addChildImplementation (self, *args, **kwargs):
      '''_addChildImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Implementation
'''
    ...
    def _addChildLook (self, *args, **kwargs):
      '''_addChildLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Look
'''
    ...
    def _addChildMaterialAssign (self, *args, **kwargs):
      '''_addChildMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::MaterialAssign
'''
    ...
    def _addChildNode (self, *args, **kwargs):
      '''_addChildNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Node
'''
    ...
    def _addChildNodeDef (self, *args, **kwargs):
      '''_addChildNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeDef
'''
    ...
    def _addChildNodeGraph (self, *args, **kwargs):
      '''_addChildNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeGraph
'''
    ...
    def _addChildProperty (self, *args, **kwargs):
      '''_addChildProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Property
'''
    ...
    def _addChildPropertySet (self, *args, **kwargs):
      '''_addChildPropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySet
'''
    ...
    def _addChildPropertySetAssign (self, *args, **kwargs):
      '''_addChildPropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySetAssign
'''
    ...
    def _addChildToken (self, *args, **kwargs):
      '''_addChildToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Token
'''
    ...
    def _addChildTypeDef (self, *args, **kwargs):
      '''_addChildTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def _addChildVisibility (self, *args, **kwargs):
      '''_addChildVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Visibility
'''
    ...
    def _getChild (self, *args, **kwargs):
      '''_getChild(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def _getChildOfTypeCollection (self, *args, **kwargs):
      '''_getChildOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Collection
'''
    ...
    def _getChildOfTypeDocument (self, *args, **kwargs):
      '''_getChildOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Document
'''
    ...
    def _getChildOfTypeGeomInfo (self, *args, **kwargs):
      '''_getChildOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomInfo
'''
    ...
    def _getChildOfTypeGeomProp (self, *args, **kwargs):
      '''_getChildOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def _getChildOfTypeImplementation (self, *args, **kwargs):
      '''_getChildOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Implementation
'''
    ...
    def _getChildOfTypeLook (self, *args, **kwargs):
      '''_getChildOfTypeLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Look
'''
    ...
    def _getChildOfTypeMaterialAssign (self, *args, **kwargs):
      '''_getChildOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::MaterialAssign
'''
    ...
    def _getChildOfTypeNode (self, *args, **kwargs):
      '''_getChildOfTypeNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Node
'''
    ...
    def _getChildOfTypeNodeDef (self, *args, **kwargs):
      '''_getChildOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeDef
'''
    ...
    def _getChildOfTypeNodeGraph (self, *args, **kwargs):
      '''_getChildOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeGraph
'''
    ...
    def _getChildOfTypeProperty (self, *args, **kwargs):
      '''_getChildOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Property
'''
    ...
    def _getChildOfTypePropertySet (self, *args, **kwargs):
      '''_getChildOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySet
'''
    ...
    def _getChildOfTypePropertySetAssign (self, *args, **kwargs):
      '''_getChildOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySetAssign
'''
    ...
    def _getChildOfTypeToken (self, *args, **kwargs):
      '''_getChildOfTypeToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Token
'''
    ...
    def _getChildOfTypeTypeDef (self, *args, **kwargs):
      '''_getChildOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def _getChildOfTypeVisibility (self, *args, **kwargs):
      '''_getChildOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Visibility
'''
    ...
    def _getChildrenOfTypeCollection (self, *args, **kwargs):
      '''_getChildrenOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Collection]
'''
    ...
    def _getChildrenOfTypeDocument (self, *args, **kwargs):
      '''_getChildrenOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Document]
'''
    ...
    def _getChildrenOfTypeGeomInfo (self, *args, **kwargs):
      '''_getChildrenOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::GeomInfo]
'''
    ...
    def _getChildrenOfTypeGeomProp (self, *args, **kwargs):
      '''_getChildrenOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::GeomProp]
'''
    ...
    def _getChildrenOfTypeImplementation (self, *args, **kwargs):
      '''_getChildrenOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Implementation]
'''
    ...
    def _getChildrenOfTypeLook (self, *args, **kwargs):
      '''_getChildrenOfTypeLook(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Look]
'''
    ...
    def _getChildrenOfTypeMaterialAssign (self, *args, **kwargs):
      '''_getChildrenOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::MaterialAssign]
'''
    ...
    def _getChildrenOfTypeNode (self, *args, **kwargs):
      '''_getChildrenOfTypeNode(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Node]
'''
    ...
    def _getChildrenOfTypeNodeDef (self, *args, **kwargs):
      '''_getChildrenOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::NodeDef]
'''
    ...
    def _getChildrenOfTypeNodeGraph (self, *args, **kwargs):
      '''_getChildrenOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::NodeGraph]
'''
    ...
    def _getChildrenOfTypeProperty (self, *args, **kwargs):
      '''_getChildrenOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Property]
'''
    ...
    def _getChildrenOfTypePropertySet (self, *args, **kwargs):
      '''_getChildrenOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::PropertySet]
'''
    ...
    def _getChildrenOfTypePropertySetAssign (self, *args, **kwargs):
      '''_getChildrenOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::PropertySetAssign]
'''
    ...
    def _getChildrenOfTypeToken (self, *args, **kwargs):
      '''_getChildrenOfTypeToken(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Token]
'''
    ...
    def _getChildrenOfTypeTypeDef (self, *args, **kwargs):
      '''_getChildrenOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::TypeDef]
'''
    ...
    def _getChildrenOfTypeVisibility (self, *args, **kwargs):
      '''_getChildrenOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Visibility]
'''
    ...
    def _removeChildOfTypeCollection (self, *args, **kwargs):
      '''_removeChildOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeDocument (self, *args, **kwargs):
      '''_removeChildOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeGeomInfo (self, *args, **kwargs):
      '''_removeChildOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeGeomProp (self, *args, **kwargs):
      '''_removeChildOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeImplementation (self, *args, **kwargs):
      '''_removeChildOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeLook (self, *args, **kwargs):
      '''_removeChildOfTypeLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeMaterialAssign (self, *args, **kwargs):
      '''_removeChildOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNode (self, *args, **kwargs):
      '''_removeChildOfTypeNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNodeDef (self, *args, **kwargs):
      '''_removeChildOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNodeGraph (self, *args, **kwargs):
      '''_removeChildOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeProperty (self, *args, **kwargs):
      '''_removeChildOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypePropertySet (self, *args, **kwargs):
      '''_removeChildOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypePropertySetAssign (self, *args, **kwargs):
      '''_removeChildOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeToken (self, *args, **kwargs):
      '''_removeChildOfTypeToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeTypeDef (self, *args, **kwargs):
      '''_removeChildOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeVisibility (self, *args, **kwargs):
      '''_removeChildOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def addChild (self, elementClass, name, typeString=''):
      '''Add a child element of the given subclass, name, and optional type string.'''
    ...
    def addChildOfCategory (self, *args, **kwargs):
      '''addChildOfCategory(self: MaterialX.PyMaterialXCore.Element, category: str, name: str = '') -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def asString (self, *args, **kwargs):
      '''asString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def changeChildCategory (self, *args, **kwargs):
      '''changeChildCategory(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element, arg1: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def clearContent (self, *args, **kwargs):
      '''clearContent(self: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def copyContentFrom (self, *args, **kwargs):
      '''copyContentFrom(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def createStringResolver (self, *args, **kwargs):
      '''createStringResolver(self: MaterialX.PyMaterialXCore.Element, geom: str = '') -> MaterialX_v1_38_8::StringResolver
'''
    ...
    def createValidChildName (self, *args, **kwargs):
      '''createValidChildName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getActiveColorSpace (self, *args, **kwargs):
      '''getActiveColorSpace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveFilePrefix (self, *args, **kwargs):
      '''getActiveFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveGeomPrefix (self, *args, **kwargs):
      '''getActiveGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveSourceUri (self, *args, **kwargs):
      '''getActiveSourceUri(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getAttribute (self, *args, **kwargs):
      '''getAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getAttributeNames (self, *args, **kwargs):
      '''getAttributeNames(self: MaterialX.PyMaterialXCore.Element) -> List[str]
'''
    ...
    def getCategory (self, *args, **kwargs):
      '''getCategory(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getChild (self, name):
      '''Return the child element, if any, with the given name.'''
    ...
    def getChildIndex (self, *args, **kwargs):
      '''getChildIndex(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> int
'''
    ...
    def getChildOfType (self, elementClass, name):
      '''Return the child element, if any, with the given name and subclass.'''
    ...
    def getChildren (self, *args, **kwargs):
      '''getChildren(self: MaterialX.PyMaterialXCore.Element) -> List[MaterialX.PyMaterialXCore.Element]
'''
    ...
    def getChildrenOfType (self, elementClass):
      '''Return a list of all child elements that are instances of the given type.
       The returned list maintains the order in which children were added.'''
    ...
    def getColorSpace (self, *args, **kwargs):
      '''getColorSpace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getDescendant (self, *args, **kwargs):
      '''getDescendant(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getDocString (self, *args, **kwargs):
      '''getDocString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getDocument (self, *args, **kwargs):
      '''getDocument(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::Document
'''
    ...
    def getFilePrefix (self, *args, **kwargs):
      '''getFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getGeomPrefix (self, *args, **kwargs):
      '''getGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getGeomProp (self, *args, **kwargs):
      '''getGeomProp(*args, **kwargs)
Overloaded function.

1. getGeomProp(self: MaterialX.PyMaterialXCore.GeomPropDef) -> str

2. getGeomProp(self: MaterialX.PyMaterialXCore.GeomPropDef) -> str
'''
    ...
    def getIndex (self, *args, **kwargs):
      '''getIndex(self: MaterialX.PyMaterialXCore.GeomPropDef) -> str
'''
    ...
    def getInheritString (self, *args, **kwargs):
      '''getInheritString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getInheritsFrom (self, *args, **kwargs):
      '''getInheritsFrom(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getName (self, *args, **kwargs):
      '''getName(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getNamePath (self, *args, **kwargs):
      '''getNamePath(self: MaterialX.PyMaterialXCore.Element, relativeTo: MaterialX.PyMaterialXCore.Element = None) -> str
'''
    ...
    def getNamespace (self, *args, **kwargs):
      '''getNamespace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getParent (self, *args, **kwargs):
      '''getParent(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getQualifiedName (self, *args, **kwargs):
      '''getQualifiedName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getRoot (self, *args, **kwargs):
      '''getRoot(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getSelf (self, *args, **kwargs):
      '''getSelf(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getSourceUri (self, *args, **kwargs):
      '''getSourceUri(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getSpace (self, *args, **kwargs):
      '''getSpace(self: MaterialX.PyMaterialXCore.GeomPropDef) -> str
'''
    ...
    def getType (self, *args, **kwargs):
      '''getType(self: MaterialX.PyMaterialXCore.TypedElement) -> str
'''
    ...
    def getTypeDef (self, *args, **kwargs):
      '''getTypeDef(self: MaterialX.PyMaterialXCore.TypedElement) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def getUpstreamEdge (self, *args, **kwargs):
      '''getUpstreamEdge(self: MaterialX.PyMaterialXCore.Element, index: int = 0) -> MaterialX_v1_38_8::Edge
'''
    ...
    def getUpstreamEdgeCount (self, *args, **kwargs):
      '''getUpstreamEdgeCount(self: MaterialX.PyMaterialXCore.Element) -> int
'''
    ...
    def getUpstreamElement (self, *args, **kwargs):
      '''getUpstreamElement(self: MaterialX.PyMaterialXCore.Element, index: int = 0) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def hasAttribute (self, *args, **kwargs):
      '''hasAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> bool
'''
    ...
    def hasColorSpace (self, *args, **kwargs):
      '''hasColorSpace(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasFilePrefix (self, *args, **kwargs):
      '''hasFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasGeomPrefix (self, *args, **kwargs):
      '''hasGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasGeomProp (self, *args, **kwargs):
      '''hasGeomProp(*args, **kwargs)
Overloaded function.

1. hasGeomProp(self: MaterialX.PyMaterialXCore.GeomPropDef) -> bool

2. hasGeomProp(self: MaterialX.PyMaterialXCore.GeomPropDef) -> bool
'''
    ...
    def hasIndex (self, *args, **kwargs):
      '''hasIndex(self: MaterialX.PyMaterialXCore.GeomPropDef) -> bool
'''
    ...
    def hasInheritString (self, *args, **kwargs):
      '''hasInheritString(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritanceCycle (self, *args, **kwargs):
      '''hasInheritanceCycle(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritedBase (self, *args, **kwargs):
      '''hasInheritedBase(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasNamespace (self, *args, **kwargs):
      '''hasNamespace(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasSourceUri (self, *args, **kwargs):
      '''hasSourceUri(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasSpace (self, *args, **kwargs):
      '''hasSpace(self: MaterialX.PyMaterialXCore.GeomPropDef) -> bool
'''
    ...
    def hasType (self, *args, **kwargs):
      '''hasType(self: MaterialX.PyMaterialXCore.TypedElement) -> bool
'''
    ...
    def isA (self, elementClass, category=''):
      '''Return True if this element is an instance of the given subclass.
       If a category string is specified, then both subclass and category
       matches are required.'''
    ...
    def isMultiOutputType (self, *args, **kwargs):
      '''isMultiOutputType(self: MaterialX.PyMaterialXCore.TypedElement) -> bool
'''
    ...
    def removeAttribute (self, *args, **kwargs):
      '''removeAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def removeChild (self, *args, **kwargs):
      '''removeChild(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def removeChildOfType (self, elementClass, name):
      '''Remove the typed child element, if any, with the given name.'''
    ...
    def setAttribute (self, *args, **kwargs):
      '''setAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str, arg1: str) -> None
'''
    ...
    def setCategory (self, *args, **kwargs):
      '''setCategory(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setChildIndex (self, *args, **kwargs):
      '''setChildIndex(self: MaterialX.PyMaterialXCore.Element, arg0: str, arg1: int) -> None
'''
    ...
    def setColorSpace (self, *args, **kwargs):
      '''setColorSpace(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setDocString (self, *args, **kwargs):
      '''setDocString(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setFilePrefix (self, *args, **kwargs):
      '''setFilePrefix(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setGeomPrefix (self, *args, **kwargs):
      '''setGeomPrefix(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setGeomProp (self, *args, **kwargs):
      '''setGeomProp(*args, **kwargs)
Overloaded function.

1. setGeomProp(self: MaterialX.PyMaterialXCore.GeomPropDef, arg0: str) -> None

2. setGeomProp(self: MaterialX.PyMaterialXCore.GeomPropDef, arg0: str) -> None
'''
    ...
    def setIndex (self, *args, **kwargs):
      '''setIndex(self: MaterialX.PyMaterialXCore.GeomPropDef, arg0: str) -> None
'''
    ...
    def setInheritString (self, *args, **kwargs):
      '''setInheritString(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setInheritsFrom (self, *args, **kwargs):
      '''setInheritsFrom(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def setName (self, *args, **kwargs):
      '''setName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setNamespace (self, *args, **kwargs):
      '''setNamespace(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setSourceUri (self, *args, **kwargs):
      '''setSourceUri(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setSpace (self, *args, **kwargs):
      '''setSpace(self: MaterialX.PyMaterialXCore.GeomPropDef, arg0: str) -> None
'''
    ...
    def setType (self, *args, **kwargs):
      '''setType(self: MaterialX.PyMaterialXCore.TypedElement, arg0: str) -> None
'''
    ...
    def traverseGraph (self, *args, **kwargs):
      '''traverseGraph(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::GraphIterator
'''
    ...
    def traverseInheritance (self, *args, **kwargs):
      '''traverseInheritance(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::InheritanceIterator
'''
    ...
    def traverseTree (self, *args, **kwargs):
      '''traverseTree(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::TreeIterator
'''
    ...
    def validate (self, *args, **kwargs):
      '''validate(self: MaterialX.PyMaterialXCore.Element) -> Tuple[bool, str]
'''
    ...

def GraphElement (*args):
      '''

'''      
    ...

class GraphElement:
    def NODE_DEF_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def TYPE_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def _addChildCollection (self, *args, **kwargs):
      '''_addChildCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Collection
'''
    ...
    def _addChildDocument (self, *args, **kwargs):
      '''_addChildDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Document
'''
    ...
    def _addChildGeomInfo (self, *args, **kwargs):
      '''_addChildGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomInfo
'''
    ...
    def _addChildGeomProp (self, *args, **kwargs):
      '''_addChildGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def _addChildImplementation (self, *args, **kwargs):
      '''_addChildImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Implementation
'''
    ...
    def _addChildLook (self, *args, **kwargs):
      '''_addChildLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Look
'''
    ...
    def _addChildMaterialAssign (self, *args, **kwargs):
      '''_addChildMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::MaterialAssign
'''
    ...
    def _addChildNode (self, *args, **kwargs):
      '''_addChildNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Node
'''
    ...
    def _addChildNodeDef (self, *args, **kwargs):
      '''_addChildNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeDef
'''
    ...
    def _addChildNodeGraph (self, *args, **kwargs):
      '''_addChildNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeGraph
'''
    ...
    def _addChildProperty (self, *args, **kwargs):
      '''_addChildProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Property
'''
    ...
    def _addChildPropertySet (self, *args, **kwargs):
      '''_addChildPropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySet
'''
    ...
    def _addChildPropertySetAssign (self, *args, **kwargs):
      '''_addChildPropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySetAssign
'''
    ...
    def _addChildToken (self, *args, **kwargs):
      '''_addChildToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Token
'''
    ...
    def _addChildTypeDef (self, *args, **kwargs):
      '''_addChildTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def _addChildVisibility (self, *args, **kwargs):
      '''_addChildVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Visibility
'''
    ...
    def _getChild (self, *args, **kwargs):
      '''_getChild(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def _getChildOfTypeCollection (self, *args, **kwargs):
      '''_getChildOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Collection
'''
    ...
    def _getChildOfTypeDocument (self, *args, **kwargs):
      '''_getChildOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Document
'''
    ...
    def _getChildOfTypeGeomInfo (self, *args, **kwargs):
      '''_getChildOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomInfo
'''
    ...
    def _getChildOfTypeGeomProp (self, *args, **kwargs):
      '''_getChildOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def _getChildOfTypeImplementation (self, *args, **kwargs):
      '''_getChildOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Implementation
'''
    ...
    def _getChildOfTypeLook (self, *args, **kwargs):
      '''_getChildOfTypeLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Look
'''
    ...
    def _getChildOfTypeMaterialAssign (self, *args, **kwargs):
      '''_getChildOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::MaterialAssign
'''
    ...
    def _getChildOfTypeNode (self, *args, **kwargs):
      '''_getChildOfTypeNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Node
'''
    ...
    def _getChildOfTypeNodeDef (self, *args, **kwargs):
      '''_getChildOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeDef
'''
    ...
    def _getChildOfTypeNodeGraph (self, *args, **kwargs):
      '''_getChildOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeGraph
'''
    ...
    def _getChildOfTypeProperty (self, *args, **kwargs):
      '''_getChildOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Property
'''
    ...
    def _getChildOfTypePropertySet (self, *args, **kwargs):
      '''_getChildOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySet
'''
    ...
    def _getChildOfTypePropertySetAssign (self, *args, **kwargs):
      '''_getChildOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySetAssign
'''
    ...
    def _getChildOfTypeToken (self, *args, **kwargs):
      '''_getChildOfTypeToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Token
'''
    ...
    def _getChildOfTypeTypeDef (self, *args, **kwargs):
      '''_getChildOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def _getChildOfTypeVisibility (self, *args, **kwargs):
      '''_getChildOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Visibility
'''
    ...
    def _getChildrenOfTypeCollection (self, *args, **kwargs):
      '''_getChildrenOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Collection]
'''
    ...
    def _getChildrenOfTypeDocument (self, *args, **kwargs):
      '''_getChildrenOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Document]
'''
    ...
    def _getChildrenOfTypeGeomInfo (self, *args, **kwargs):
      '''_getChildrenOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::GeomInfo]
'''
    ...
    def _getChildrenOfTypeGeomProp (self, *args, **kwargs):
      '''_getChildrenOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::GeomProp]
'''
    ...
    def _getChildrenOfTypeImplementation (self, *args, **kwargs):
      '''_getChildrenOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Implementation]
'''
    ...
    def _getChildrenOfTypeLook (self, *args, **kwargs):
      '''_getChildrenOfTypeLook(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Look]
'''
    ...
    def _getChildrenOfTypeMaterialAssign (self, *args, **kwargs):
      '''_getChildrenOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::MaterialAssign]
'''
    ...
    def _getChildrenOfTypeNode (self, *args, **kwargs):
      '''_getChildrenOfTypeNode(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Node]
'''
    ...
    def _getChildrenOfTypeNodeDef (self, *args, **kwargs):
      '''_getChildrenOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::NodeDef]
'''
    ...
    def _getChildrenOfTypeNodeGraph (self, *args, **kwargs):
      '''_getChildrenOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::NodeGraph]
'''
    ...
    def _getChildrenOfTypeProperty (self, *args, **kwargs):
      '''_getChildrenOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Property]
'''
    ...
    def _getChildrenOfTypePropertySet (self, *args, **kwargs):
      '''_getChildrenOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::PropertySet]
'''
    ...
    def _getChildrenOfTypePropertySetAssign (self, *args, **kwargs):
      '''_getChildrenOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::PropertySetAssign]
'''
    ...
    def _getChildrenOfTypeToken (self, *args, **kwargs):
      '''_getChildrenOfTypeToken(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Token]
'''
    ...
    def _getChildrenOfTypeTypeDef (self, *args, **kwargs):
      '''_getChildrenOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::TypeDef]
'''
    ...
    def _getChildrenOfTypeVisibility (self, *args, **kwargs):
      '''_getChildrenOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Visibility]
'''
    ...
    def _getInputValue (self, *args, **kwargs):
      '''_getInputValue(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str, arg1: str) -> MaterialX_v1_38_8::Value
'''
    ...
    def _removeChildOfTypeCollection (self, *args, **kwargs):
      '''_removeChildOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeDocument (self, *args, **kwargs):
      '''_removeChildOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeGeomInfo (self, *args, **kwargs):
      '''_removeChildOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeGeomProp (self, *args, **kwargs):
      '''_removeChildOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeImplementation (self, *args, **kwargs):
      '''_removeChildOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeLook (self, *args, **kwargs):
      '''_removeChildOfTypeLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeMaterialAssign (self, *args, **kwargs):
      '''_removeChildOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNode (self, *args, **kwargs):
      '''_removeChildOfTypeNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNodeDef (self, *args, **kwargs):
      '''_removeChildOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNodeGraph (self, *args, **kwargs):
      '''_removeChildOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeProperty (self, *args, **kwargs):
      '''_removeChildOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypePropertySet (self, *args, **kwargs):
      '''_removeChildOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypePropertySetAssign (self, *args, **kwargs):
      '''_removeChildOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeToken (self, *args, **kwargs):
      '''_removeChildOfTypeToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeTypeDef (self, *args, **kwargs):
      '''_removeChildOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeVisibility (self, *args, **kwargs):
      '''_removeChildOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _setInputValueboolean (self, *args, **kwargs):
      '''_setInputValueboolean(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: bool, type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValuebooleanarray (self, *args, **kwargs):
      '''_setInputValuebooleanarray(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: List[bool], type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValuecolor3 (self, *args, **kwargs):
      '''_setInputValuecolor3(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: MaterialX_v1_38_8::Color3, type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValuecolor4 (self, *args, **kwargs):
      '''_setInputValuecolor4(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: MaterialX_v1_38_8::Color4, type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValuefloat (self, *args, **kwargs):
      '''_setInputValuefloat(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: float, type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValuefloatarray (self, *args, **kwargs):
      '''_setInputValuefloatarray(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: List[float], type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValueinteger (self, *args, **kwargs):
      '''_setInputValueinteger(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: int, type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValueintegerarray (self, *args, **kwargs):
      '''_setInputValueintegerarray(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: List[int], type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValuematrix33 (self, *args, **kwargs):
      '''_setInputValuematrix33(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: MaterialX_v1_38_8::Matrix33, type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValuematrix44 (self, *args, **kwargs):
      '''_setInputValuematrix44(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: MaterialX_v1_38_8::Matrix44, type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValuestring (self, *args, **kwargs):
      '''_setInputValuestring(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: str, type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValuestringarray (self, *args, **kwargs):
      '''_setInputValuestringarray(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: List[str], type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValuevector2 (self, *args, **kwargs):
      '''_setInputValuevector2(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: MaterialX_v1_38_8::Vector2, type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValuevector3 (self, *args, **kwargs):
      '''_setInputValuevector3(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: MaterialX_v1_38_8::Vector3, type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValuevector4 (self, *args, **kwargs):
      '''_setInputValuevector4(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: MaterialX_v1_38_8::Vector4, type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def addBackdrop (self, *args, **kwargs):
      '''addBackdrop(self: MaterialX.PyMaterialXCore.GraphElement, name: str = '') -> MaterialX_v1_38_8::Backdrop
'''
    ...
    def addBindInput (self, name, type='color3'):
      '''(Deprecated) Add a BindInput to this shader reference.'''
    ...
    def addBindParam (self, name, type='color3'):
      '''(Deprecated) Add a BindParam to this shader reference.'''
    ...
    def addChild (self, elementClass, name, typeString=''):
      '''Add a child element of the given subclass, name, and optional type string.'''
    ...
    def addChildOfCategory (self, *args, **kwargs):
      '''addChildOfCategory(self: MaterialX.PyMaterialXCore.Element, category: str, name: str = '') -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def addGeomNode (self, *args, **kwargs):
      '''addGeomNode(self: MaterialX.PyMaterialXCore.GraphElement, arg0: MaterialX.PyMaterialXCore.GeomPropDef, arg1: str) -> MaterialX.PyMaterialXCore.Node
'''
    ...
    def addInput (self, *args, **kwargs):
      '''addInput(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str = '', type: str = 'color3') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def addMaterialNode (self, *args, **kwargs):
      '''addMaterialNode(self: MaterialX.PyMaterialXCore.GraphElement, name: str = '', shaderNode: MaterialX.PyMaterialXCore.Node = None) -> MaterialX.PyMaterialXCore.Node
'''
    ...
    def addNode (self, *args, **kwargs):
      '''addNode(self: MaterialX.PyMaterialXCore.GraphElement, category: str, name: str = '', type: str = 'color3') -> MaterialX.PyMaterialXCore.Node
'''
    ...
    def addNodeInstance (self, *args, **kwargs):
      '''addNodeInstance(self: MaterialX.PyMaterialXCore.GraphElement, nodeDef: MaterialX.PyMaterialXCore.NodeDef, name: str = '') -> MaterialX.PyMaterialXCore.Node
'''
    ...
    def addOutput (self, *args, **kwargs):
      '''addOutput(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str = '', type: str = 'color3') -> MaterialX.PyMaterialXCore.Output
'''
    ...
    def addParameter (self, name):
      '''(Deprecated) Add a Parameter to this interface.'''
    ...
    def addToken (self, *args, **kwargs):
      '''addToken(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str = 'color3') -> MaterialX.PyMaterialXCore.Token
'''
    ...
    def asString (self, *args, **kwargs):
      '''asString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def asStringDot (self, *args, **kwargs):
      '''asStringDot(self: MaterialX.PyMaterialXCore.GraphElement) -> str
'''
    ...
    def changeChildCategory (self, *args, **kwargs):
      '''changeChildCategory(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element, arg1: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def clearContent (self, *args, **kwargs):
      '''clearContent(self: MaterialX.PyMaterialXCore.InterfaceElement) -> None
'''
    ...
    def copyContentFrom (self, *args, **kwargs):
      '''copyContentFrom(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def createStringResolver (self, *args, **kwargs):
      '''createStringResolver(self: MaterialX.PyMaterialXCore.Element, geom: str = '') -> MaterialX_v1_38_8::StringResolver
'''
    ...
    def createValidChildName (self, *args, **kwargs):
      '''createValidChildName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def flattenSubgraphs (self, *args, **kwargs):
      '''flattenSubgraphs(self: MaterialX.PyMaterialXCore.GraphElement, target: str = '', filter: Callable[[MaterialX.PyMaterialXCore.Node], bool] = None) -> None
'''
    ...
    def getActiveColorSpace (self, *args, **kwargs):
      '''getActiveColorSpace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveFilePrefix (self, *args, **kwargs):
      '''getActiveFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveGeomPrefix (self, *args, **kwargs):
      '''getActiveGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveInput (self, *args, **kwargs):
      '''getActiveInput(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def getActiveInputs (self, *args, **kwargs):
      '''getActiveInputs(self: MaterialX.PyMaterialXCore.InterfaceElement) -> List[MaterialX.PyMaterialXCore.Input]
'''
    ...
    def getActiveOutput (self, *args, **kwargs):
      '''getActiveOutput(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> MaterialX.PyMaterialXCore.Output
'''
    ...
    def getActiveOutputs (self, *args, **kwargs):
      '''getActiveOutputs(self: MaterialX.PyMaterialXCore.InterfaceElement) -> List[MaterialX.PyMaterialXCore.Output]
'''
    ...
    def getActiveParameters (self):
      '''(Deprecated) Return a vector of all parameters belonging to this interface, taking inheritance into account.'''
    ...
    def getActiveSourceUri (self, *args, **kwargs):
      '''getActiveSourceUri(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveToken (self, *args, **kwargs):
      '''getActiveToken(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> MaterialX.PyMaterialXCore.Token
'''
    ...
    def getActiveTokens (self, *args, **kwargs):
      '''getActiveTokens(self: MaterialX.PyMaterialXCore.InterfaceElement) -> List[MaterialX.PyMaterialXCore.Token]
'''
    ...
    def getActiveValueElement (self, *args, **kwargs):
      '''getActiveValueElement(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> MaterialX.PyMaterialXCore.ValueElement
'''
    ...
    def getActiveValueElements (self, *args, **kwargs):
      '''getActiveValueElements(self: MaterialX.PyMaterialXCore.InterfaceElement) -> List[MaterialX.PyMaterialXCore.ValueElement]
'''
    ...
    def getAttribute (self, *args, **kwargs):
      '''getAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getAttributeNames (self, *args, **kwargs):
      '''getAttributeNames(self: MaterialX.PyMaterialXCore.Element) -> List[str]
'''
    ...
    def getBackdrop (self, *args, **kwargs):
      '''getBackdrop(self: MaterialX.PyMaterialXCore.GraphElement, arg0: str) -> MaterialX_v1_38_8::Backdrop
'''
    ...
    def getBackdrops (self, *args, **kwargs):
      '''getBackdrops(self: MaterialX.PyMaterialXCore.GraphElement) -> List[MaterialX_v1_38_8::Backdrop]
'''
    ...
    def getBindInputs (self):
      '''(Deprecated) Return a vector of all BindInput elements in this shader reference.'''
    ...
    def getBindParams (self):
      '''(Deprecated) Return a vector of all BindParam elements in this shader reference.'''
    ...
    def getBindTokens (self):
      '''(Deprecated) Return a vector of all BindToken elements in this shader reference.'''
    ...
    def getCategory (self, *args, **kwargs):
      '''getCategory(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getChild (self, name):
      '''Return the child element, if any, with the given name.'''
    ...
    def getChildIndex (self, *args, **kwargs):
      '''getChildIndex(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> int
'''
    ...
    def getChildOfType (self, elementClass, name):
      '''Return the child element, if any, with the given name and subclass.'''
    ...
    def getChildren (self, *args, **kwargs):
      '''getChildren(self: MaterialX.PyMaterialXCore.Element) -> List[MaterialX.PyMaterialXCore.Element]
'''
    ...
    def getChildrenOfType (self, elementClass):
      '''Return a list of all child elements that are instances of the given type.
       The returned list maintains the order in which children were added.'''
    ...
    def getColorSpace (self, *args, **kwargs):
      '''getColorSpace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getConnectedOutput (self, *args, **kwargs):
      '''getConnectedOutput(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> MaterialX.PyMaterialXCore.Output
'''
    ...
    def getDeclaration (self, *args, **kwargs):
      '''getDeclaration(self: MaterialX.PyMaterialXCore.InterfaceElement, target: str = '') -> MaterialX.PyMaterialXCore.InterfaceElement
'''
    ...
    def getDefaultVersion (self, *args, **kwargs):
      '''getDefaultVersion(self: MaterialX.PyMaterialXCore.InterfaceElement) -> bool
'''
    ...
    def getDescendant (self, *args, **kwargs):
      '''getDescendant(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getDocString (self, *args, **kwargs):
      '''getDocString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getDocument (self, *args, **kwargs):
      '''getDocument(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::Document
'''
    ...
    def getFilePrefix (self, *args, **kwargs):
      '''getFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getGeomPrefix (self, *args, **kwargs):
      '''getGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getInheritString (self, *args, **kwargs):
      '''getInheritString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getInheritsFrom (self, *args, **kwargs):
      '''getInheritsFrom(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getInput (self, *args, **kwargs):
      '''getInput(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def getInputCount (self, *args, **kwargs):
      '''getInputCount(self: MaterialX.PyMaterialXCore.InterfaceElement) -> int
'''
    ...
    def getInputValue (self, name, target=''):
      '''Return the typed value of an input by its name, taking both the
       calling element and its declaration into account.  If the given
       input is not found, then None is returned.'''
    ...
    def getInputs (self, *args, **kwargs):
      '''getInputs(self: MaterialX.PyMaterialXCore.InterfaceElement) -> List[MaterialX.PyMaterialXCore.Input]
'''
    ...
    def getMaterialNodes (self, *args, **kwargs):
      '''getMaterialNodes(self: MaterialX.PyMaterialXCore.GraphElement) -> List[MaterialX.PyMaterialXCore.Node]
'''
    ...
    def getName (self, *args, **kwargs):
      '''getName(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getNamePath (self, *args, **kwargs):
      '''getNamePath(self: MaterialX.PyMaterialXCore.Element, relativeTo: MaterialX.PyMaterialXCore.Element = None) -> str
'''
    ...
    def getNamespace (self, *args, **kwargs):
      '''getNamespace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getNode (self, *args, **kwargs):
      '''getNode(self: MaterialX.PyMaterialXCore.GraphElement, arg0: str) -> MaterialX.PyMaterialXCore.Node
'''
    ...
    def getNodeDefString (self, *args, **kwargs):
      '''getNodeDefString(self: MaterialX.PyMaterialXCore.InterfaceElement) -> str
'''
    ...
    def getNodes (self, *args, **kwargs):
      '''getNodes(self: MaterialX.PyMaterialXCore.GraphElement, category: str = '') -> List[MaterialX.PyMaterialXCore.Node]
'''
    ...
    def getOutput (self, *args, **kwargs):
      '''getOutput(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> MaterialX.PyMaterialXCore.Output
'''
    ...
    def getOutputCount (self, *args, **kwargs):
      '''getOutputCount(self: MaterialX.PyMaterialXCore.InterfaceElement) -> int
'''
    ...
    def getOutputs (self, *args, **kwargs):
      '''getOutputs(self: MaterialX.PyMaterialXCore.InterfaceElement) -> List[MaterialX.PyMaterialXCore.Output]
'''
    ...
    def getParameterValue (self, name, target=''):
      '''(Deprecated) Return the typed value of a parameter by its name.'''
    ...
    def getParameterValueString (self, name):
      '''(Deprecated) Return the value string of a parameter by its name.'''
    ...
    def getParameters (self):
      '''(Deprecated) Return a vector of all Parameter elements.'''
    ...
    def getParent (self, *args, **kwargs):
      '''getParent(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getQualifiedName (self, *args, **kwargs):
      '''getQualifiedName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getRoot (self, *args, **kwargs):
      '''getRoot(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getSelf (self, *args, **kwargs):
      '''getSelf(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getSourceUri (self, *args, **kwargs):
      '''getSourceUri(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getTarget (self, *args, **kwargs):
      '''getTarget(self: MaterialX.PyMaterialXCore.InterfaceElement) -> str
'''
    ...
    def getToken (self, *args, **kwargs):
      '''getToken(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> MaterialX.PyMaterialXCore.Token
'''
    ...
    def getTokenValue (self, *args, **kwargs):
      '''getTokenValue(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> str
'''
    ...
    def getTokens (self, *args, **kwargs):
      '''getTokens(self: MaterialX.PyMaterialXCore.InterfaceElement) -> List[MaterialX.PyMaterialXCore.Token]
'''
    ...
    def getType (self, *args, **kwargs):
      '''getType(self: MaterialX.PyMaterialXCore.TypedElement) -> str
'''
    ...
    def getTypeDef (self, *args, **kwargs):
      '''getTypeDef(self: MaterialX.PyMaterialXCore.TypedElement) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def getUpstreamEdge (self, *args, **kwargs):
      '''getUpstreamEdge(self: MaterialX.PyMaterialXCore.Element, index: int = 0) -> MaterialX_v1_38_8::Edge
'''
    ...
    def getUpstreamEdgeCount (self, *args, **kwargs):
      '''getUpstreamEdgeCount(self: MaterialX.PyMaterialXCore.Element) -> int
'''
    ...
    def getUpstreamElement (self, *args, **kwargs):
      '''getUpstreamElement(self: MaterialX.PyMaterialXCore.Element, index: int = 0) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getVersionIntegers (self, *args, **kwargs):
      '''getVersionIntegers(self: MaterialX.PyMaterialXCore.InterfaceElement) -> Tuple[int, int]
'''
    ...
    def getVersionString (self, *args, **kwargs):
      '''getVersionString(self: MaterialX.PyMaterialXCore.InterfaceElement) -> str
'''
    ...
    def hasAttribute (self, *args, **kwargs):
      '''hasAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> bool
'''
    ...
    def hasColorSpace (self, *args, **kwargs):
      '''hasColorSpace(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasExactInputMatch (self, *args, **kwargs):
      '''hasExactInputMatch(self: MaterialX.PyMaterialXCore.InterfaceElement, declaration: MaterialX.PyMaterialXCore.InterfaceElement, message: str = None) -> bool
'''
    ...
    def hasFilePrefix (self, *args, **kwargs):
      '''hasFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasGeomPrefix (self, *args, **kwargs):
      '''hasGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritString (self, *args, **kwargs):
      '''hasInheritString(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritanceCycle (self, *args, **kwargs):
      '''hasInheritanceCycle(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritedBase (self, *args, **kwargs):
      '''hasInheritedBase(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasNamespace (self, *args, **kwargs):
      '''hasNamespace(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasNodeDefString (self, *args, **kwargs):
      '''hasNodeDefString(self: MaterialX.PyMaterialXCore.InterfaceElement) -> bool
'''
    ...
    def hasSourceUri (self, *args, **kwargs):
      '''hasSourceUri(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasTarget (self, *args, **kwargs):
      '''hasTarget(self: MaterialX.PyMaterialXCore.InterfaceElement) -> bool
'''
    ...
    def hasType (self, *args, **kwargs):
      '''hasType(self: MaterialX.PyMaterialXCore.TypedElement) -> bool
'''
    ...
    def hasVersionString (self, *args, **kwargs):
      '''hasVersionString(self: MaterialX.PyMaterialXCore.InterfaceElement) -> bool
'''
    ...
    def isA (self, elementClass, category=''):
      '''Return True if this element is an instance of the given subclass.
       If a category string is specified, then both subclass and category
       matches are required.'''
    ...
    def isMultiOutputType (self, *args, **kwargs):
      '''isMultiOutputType(self: MaterialX.PyMaterialXCore.TypedElement) -> bool
'''
    ...
    def removeAttribute (self, *args, **kwargs):
      '''removeAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def removeBackdrop (self, *args, **kwargs):
      '''removeBackdrop(self: MaterialX.PyMaterialXCore.GraphElement, arg0: str) -> None
'''
    ...
    def removeChild (self, *args, **kwargs):
      '''removeChild(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def removeChildOfType (self, elementClass, name):
      '''Remove the typed child element, if any, with the given name.'''
    ...
    def removeInput (self, *args, **kwargs):
      '''removeInput(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> None
'''
    ...
    def removeNode (self, *args, **kwargs):
      '''removeNode(self: MaterialX.PyMaterialXCore.GraphElement, arg0: str) -> None
'''
    ...
    def removeOutput (self, *args, **kwargs):
      '''removeOutput(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> None
'''
    ...
    def removeToken (self, *args, **kwargs):
      '''removeToken(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> None
'''
    ...
    def setAttribute (self, *args, **kwargs):
      '''setAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str, arg1: str) -> None
'''
    ...
    def setCategory (self, *args, **kwargs):
      '''setCategory(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setChildIndex (self, *args, **kwargs):
      '''setChildIndex(self: MaterialX.PyMaterialXCore.Element, arg0: str, arg1: int) -> None
'''
    ...
    def setColorSpace (self, *args, **kwargs):
      '''setColorSpace(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setConnectedOutput (self, *args, **kwargs):
      '''setConnectedOutput(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str, arg1: MaterialX.PyMaterialXCore.Output) -> None
'''
    ...
    def setDefaultVersion (self, *args, **kwargs):
      '''setDefaultVersion(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: bool) -> None
'''
    ...
    def setDocString (self, *args, **kwargs):
      '''setDocString(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setFilePrefix (self, *args, **kwargs):
      '''setFilePrefix(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setGeomPrefix (self, *args, **kwargs):
      '''setGeomPrefix(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setInheritString (self, *args, **kwargs):
      '''setInheritString(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setInheritsFrom (self, *args, **kwargs):
      '''setInheritsFrom(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def setInputValue (self, name, value, typeString=''):
      '''Set the typed value of an input by its name, creating a child element
       to hold the input if needed.'''
    ...
    def setName (self, *args, **kwargs):
      '''setName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setNamespace (self, *args, **kwargs):
      '''setNamespace(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setNodeDefString (self, *args, **kwargs):
      '''setNodeDefString(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> None
'''
    ...
    def setParameterValue (self, name, value, typeString=''):
      '''(Deprecated) Set the typed value of a parameter by its name.'''
    ...
    def setSourceUri (self, *args, **kwargs):
      '''setSourceUri(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setTarget (self, *args, **kwargs):
      '''setTarget(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> None
'''
    ...
    def setTokenValue (self, *args, **kwargs):
      '''setTokenValue(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str, arg1: str) -> MaterialX.PyMaterialXCore.Token
'''
    ...
    def setType (self, *args, **kwargs):
      '''setType(self: MaterialX.PyMaterialXCore.TypedElement, arg0: str) -> None
'''
    ...
    def setVersionIntegers (self, *args, **kwargs):
      '''setVersionIntegers(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: int, arg1: int) -> None
'''
    ...
    def setVersionString (self, *args, **kwargs):
      '''setVersionString(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> None
'''
    ...
    def topologicalSort (self, *args, **kwargs):
      '''topologicalSort(self: MaterialX.PyMaterialXCore.GraphElement) -> List[MaterialX.PyMaterialXCore.Element]
'''
    ...
    def traverseGraph (self, *args, **kwargs):
      '''traverseGraph(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::GraphIterator
'''
    ...
    def traverseInheritance (self, *args, **kwargs):
      '''traverseInheritance(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::InheritanceIterator
'''
    ...
    def traverseTree (self, *args, **kwargs):
      '''traverseTree(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::TreeIterator
'''
    ...
    def validate (self, *args, **kwargs):
      '''validate(self: MaterialX.PyMaterialXCore.Element) -> Tuple[bool, str]
'''
    ...

def GraphIterator (*args):
      '''

'''      
    ...

class GraphIterator:
    def getConnectingElement (self, *args, **kwargs):
      '''getConnectingElement(self: MaterialX.PyMaterialXCore.GraphIterator) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getDownstreamElement (self, *args, **kwargs):
      '''getDownstreamElement(self: MaterialX.PyMaterialXCore.GraphIterator) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getElementDepth (self, *args, **kwargs):
      '''getElementDepth(self: MaterialX.PyMaterialXCore.GraphIterator) -> int
'''
    ...
    def getNodeDepth (self, *args, **kwargs):
      '''getNodeDepth(self: MaterialX.PyMaterialXCore.GraphIterator) -> int
'''
    ...
    def getPruneSubgraph (self, *args, **kwargs):
      '''getPruneSubgraph(self: MaterialX.PyMaterialXCore.GraphIterator) -> bool
'''
    ...
    def getUpstreamElement (self, *args, **kwargs):
      '''getUpstreamElement(self: MaterialX.PyMaterialXCore.GraphIterator) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getUpstreamIndex (self, *args, **kwargs):
      '''getUpstreamIndex(self: MaterialX.PyMaterialXCore.GraphIterator) -> int
'''
    ...
    def setPruneSubgraph (self, *args, **kwargs):
      '''setPruneSubgraph(self: MaterialX.PyMaterialXCore.GraphIterator, arg0: bool) -> None
'''
    ...

def Implementation (*args):
      '''

'''      
    ...

class Implementation:
    def CATEGORY (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def FILE_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def FUNCTION_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def NODE_DEF_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def TYPE_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def _addChildCollection (self, *args, **kwargs):
      '''_addChildCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Collection
'''
    ...
    def _addChildDocument (self, *args, **kwargs):
      '''_addChildDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Document
'''
    ...
    def _addChildGeomInfo (self, *args, **kwargs):
      '''_addChildGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomInfo
'''
    ...
    def _addChildGeomProp (self, *args, **kwargs):
      '''_addChildGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def _addChildImplementation (self, *args, **kwargs):
      '''_addChildImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Implementation
'''
    ...
    def _addChildLook (self, *args, **kwargs):
      '''_addChildLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Look
'''
    ...
    def _addChildMaterialAssign (self, *args, **kwargs):
      '''_addChildMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::MaterialAssign
'''
    ...
    def _addChildNode (self, *args, **kwargs):
      '''_addChildNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Node
'''
    ...
    def _addChildNodeDef (self, *args, **kwargs):
      '''_addChildNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeDef
'''
    ...
    def _addChildNodeGraph (self, *args, **kwargs):
      '''_addChildNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeGraph
'''
    ...
    def _addChildProperty (self, *args, **kwargs):
      '''_addChildProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Property
'''
    ...
    def _addChildPropertySet (self, *args, **kwargs):
      '''_addChildPropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySet
'''
    ...
    def _addChildPropertySetAssign (self, *args, **kwargs):
      '''_addChildPropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySetAssign
'''
    ...
    def _addChildToken (self, *args, **kwargs):
      '''_addChildToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Token
'''
    ...
    def _addChildTypeDef (self, *args, **kwargs):
      '''_addChildTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def _addChildVisibility (self, *args, **kwargs):
      '''_addChildVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Visibility
'''
    ...
    def _getChild (self, *args, **kwargs):
      '''_getChild(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def _getChildOfTypeCollection (self, *args, **kwargs):
      '''_getChildOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Collection
'''
    ...
    def _getChildOfTypeDocument (self, *args, **kwargs):
      '''_getChildOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Document
'''
    ...
    def _getChildOfTypeGeomInfo (self, *args, **kwargs):
      '''_getChildOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomInfo
'''
    ...
    def _getChildOfTypeGeomProp (self, *args, **kwargs):
      '''_getChildOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def _getChildOfTypeImplementation (self, *args, **kwargs):
      '''_getChildOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Implementation
'''
    ...
    def _getChildOfTypeLook (self, *args, **kwargs):
      '''_getChildOfTypeLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Look
'''
    ...
    def _getChildOfTypeMaterialAssign (self, *args, **kwargs):
      '''_getChildOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::MaterialAssign
'''
    ...
    def _getChildOfTypeNode (self, *args, **kwargs):
      '''_getChildOfTypeNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Node
'''
    ...
    def _getChildOfTypeNodeDef (self, *args, **kwargs):
      '''_getChildOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeDef
'''
    ...
    def _getChildOfTypeNodeGraph (self, *args, **kwargs):
      '''_getChildOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeGraph
'''
    ...
    def _getChildOfTypeProperty (self, *args, **kwargs):
      '''_getChildOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Property
'''
    ...
    def _getChildOfTypePropertySet (self, *args, **kwargs):
      '''_getChildOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySet
'''
    ...
    def _getChildOfTypePropertySetAssign (self, *args, **kwargs):
      '''_getChildOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySetAssign
'''
    ...
    def _getChildOfTypeToken (self, *args, **kwargs):
      '''_getChildOfTypeToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Token
'''
    ...
    def _getChildOfTypeTypeDef (self, *args, **kwargs):
      '''_getChildOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def _getChildOfTypeVisibility (self, *args, **kwargs):
      '''_getChildOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Visibility
'''
    ...
    def _getChildrenOfTypeCollection (self, *args, **kwargs):
      '''_getChildrenOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Collection]
'''
    ...
    def _getChildrenOfTypeDocument (self, *args, **kwargs):
      '''_getChildrenOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Document]
'''
    ...
    def _getChildrenOfTypeGeomInfo (self, *args, **kwargs):
      '''_getChildrenOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::GeomInfo]
'''
    ...
    def _getChildrenOfTypeGeomProp (self, *args, **kwargs):
      '''_getChildrenOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::GeomProp]
'''
    ...
    def _getChildrenOfTypeImplementation (self, *args, **kwargs):
      '''_getChildrenOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Implementation]
'''
    ...
    def _getChildrenOfTypeLook (self, *args, **kwargs):
      '''_getChildrenOfTypeLook(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Look]
'''
    ...
    def _getChildrenOfTypeMaterialAssign (self, *args, **kwargs):
      '''_getChildrenOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::MaterialAssign]
'''
    ...
    def _getChildrenOfTypeNode (self, *args, **kwargs):
      '''_getChildrenOfTypeNode(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Node]
'''
    ...
    def _getChildrenOfTypeNodeDef (self, *args, **kwargs):
      '''_getChildrenOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::NodeDef]
'''
    ...
    def _getChildrenOfTypeNodeGraph (self, *args, **kwargs):
      '''_getChildrenOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::NodeGraph]
'''
    ...
    def _getChildrenOfTypeProperty (self, *args, **kwargs):
      '''_getChildrenOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Property]
'''
    ...
    def _getChildrenOfTypePropertySet (self, *args, **kwargs):
      '''_getChildrenOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::PropertySet]
'''
    ...
    def _getChildrenOfTypePropertySetAssign (self, *args, **kwargs):
      '''_getChildrenOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::PropertySetAssign]
'''
    ...
    def _getChildrenOfTypeToken (self, *args, **kwargs):
      '''_getChildrenOfTypeToken(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Token]
'''
    ...
    def _getChildrenOfTypeTypeDef (self, *args, **kwargs):
      '''_getChildrenOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::TypeDef]
'''
    ...
    def _getChildrenOfTypeVisibility (self, *args, **kwargs):
      '''_getChildrenOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Visibility]
'''
    ...
    def _getInputValue (self, *args, **kwargs):
      '''_getInputValue(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str, arg1: str) -> MaterialX_v1_38_8::Value
'''
    ...
    def _removeChildOfTypeCollection (self, *args, **kwargs):
      '''_removeChildOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeDocument (self, *args, **kwargs):
      '''_removeChildOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeGeomInfo (self, *args, **kwargs):
      '''_removeChildOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeGeomProp (self, *args, **kwargs):
      '''_removeChildOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeImplementation (self, *args, **kwargs):
      '''_removeChildOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeLook (self, *args, **kwargs):
      '''_removeChildOfTypeLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeMaterialAssign (self, *args, **kwargs):
      '''_removeChildOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNode (self, *args, **kwargs):
      '''_removeChildOfTypeNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNodeDef (self, *args, **kwargs):
      '''_removeChildOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNodeGraph (self, *args, **kwargs):
      '''_removeChildOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeProperty (self, *args, **kwargs):
      '''_removeChildOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypePropertySet (self, *args, **kwargs):
      '''_removeChildOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypePropertySetAssign (self, *args, **kwargs):
      '''_removeChildOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeToken (self, *args, **kwargs):
      '''_removeChildOfTypeToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeTypeDef (self, *args, **kwargs):
      '''_removeChildOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeVisibility (self, *args, **kwargs):
      '''_removeChildOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _setInputValueboolean (self, *args, **kwargs):
      '''_setInputValueboolean(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: bool, type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValuebooleanarray (self, *args, **kwargs):
      '''_setInputValuebooleanarray(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: List[bool], type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValuecolor3 (self, *args, **kwargs):
      '''_setInputValuecolor3(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: MaterialX_v1_38_8::Color3, type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValuecolor4 (self, *args, **kwargs):
      '''_setInputValuecolor4(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: MaterialX_v1_38_8::Color4, type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValuefloat (self, *args, **kwargs):
      '''_setInputValuefloat(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: float, type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValuefloatarray (self, *args, **kwargs):
      '''_setInputValuefloatarray(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: List[float], type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValueinteger (self, *args, **kwargs):
      '''_setInputValueinteger(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: int, type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValueintegerarray (self, *args, **kwargs):
      '''_setInputValueintegerarray(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: List[int], type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValuematrix33 (self, *args, **kwargs):
      '''_setInputValuematrix33(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: MaterialX_v1_38_8::Matrix33, type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValuematrix44 (self, *args, **kwargs):
      '''_setInputValuematrix44(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: MaterialX_v1_38_8::Matrix44, type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValuestring (self, *args, **kwargs):
      '''_setInputValuestring(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: str, type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValuestringarray (self, *args, **kwargs):
      '''_setInputValuestringarray(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: List[str], type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValuevector2 (self, *args, **kwargs):
      '''_setInputValuevector2(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: MaterialX_v1_38_8::Vector2, type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValuevector3 (self, *args, **kwargs):
      '''_setInputValuevector3(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: MaterialX_v1_38_8::Vector3, type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValuevector4 (self, *args, **kwargs):
      '''_setInputValuevector4(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: MaterialX_v1_38_8::Vector4, type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def addBindInput (self, name, type='color3'):
      '''(Deprecated) Add a BindInput to this shader reference.'''
    ...
    def addBindParam (self, name, type='color3'):
      '''(Deprecated) Add a BindParam to this shader reference.'''
    ...
    def addChild (self, elementClass, name, typeString=''):
      '''Add a child element of the given subclass, name, and optional type string.'''
    ...
    def addChildOfCategory (self, *args, **kwargs):
      '''addChildOfCategory(self: MaterialX.PyMaterialXCore.Element, category: str, name: str = '') -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def addInput (self, *args, **kwargs):
      '''addInput(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str = '', type: str = 'color3') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def addOutput (self, *args, **kwargs):
      '''addOutput(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str = '', type: str = 'color3') -> MaterialX.PyMaterialXCore.Output
'''
    ...
    def addParameter (self, name):
      '''(Deprecated) Add a Parameter to this interface.'''
    ...
    def addToken (self, *args, **kwargs):
      '''addToken(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str = 'color3') -> MaterialX.PyMaterialXCore.Token
'''
    ...
    def asString (self, *args, **kwargs):
      '''asString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def changeChildCategory (self, *args, **kwargs):
      '''changeChildCategory(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element, arg1: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def clearContent (self, *args, **kwargs):
      '''clearContent(self: MaterialX.PyMaterialXCore.InterfaceElement) -> None
'''
    ...
    def copyContentFrom (self, *args, **kwargs):
      '''copyContentFrom(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def createStringResolver (self, *args, **kwargs):
      '''createStringResolver(self: MaterialX.PyMaterialXCore.Element, geom: str = '') -> MaterialX_v1_38_8::StringResolver
'''
    ...
    def createValidChildName (self, *args, **kwargs):
      '''createValidChildName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getActiveColorSpace (self, *args, **kwargs):
      '''getActiveColorSpace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveFilePrefix (self, *args, **kwargs):
      '''getActiveFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveGeomPrefix (self, *args, **kwargs):
      '''getActiveGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveInput (self, *args, **kwargs):
      '''getActiveInput(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def getActiveInputs (self, *args, **kwargs):
      '''getActiveInputs(self: MaterialX.PyMaterialXCore.InterfaceElement) -> List[MaterialX.PyMaterialXCore.Input]
'''
    ...
    def getActiveOutput (self, *args, **kwargs):
      '''getActiveOutput(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> MaterialX.PyMaterialXCore.Output
'''
    ...
    def getActiveOutputs (self, *args, **kwargs):
      '''getActiveOutputs(self: MaterialX.PyMaterialXCore.InterfaceElement) -> List[MaterialX.PyMaterialXCore.Output]
'''
    ...
    def getActiveParameters (self):
      '''(Deprecated) Return a vector of all parameters belonging to this interface, taking inheritance into account.'''
    ...
    def getActiveSourceUri (self, *args, **kwargs):
      '''getActiveSourceUri(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveToken (self, *args, **kwargs):
      '''getActiveToken(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> MaterialX.PyMaterialXCore.Token
'''
    ...
    def getActiveTokens (self, *args, **kwargs):
      '''getActiveTokens(self: MaterialX.PyMaterialXCore.InterfaceElement) -> List[MaterialX.PyMaterialXCore.Token]
'''
    ...
    def getActiveValueElement (self, *args, **kwargs):
      '''getActiveValueElement(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> MaterialX.PyMaterialXCore.ValueElement
'''
    ...
    def getActiveValueElements (self, *args, **kwargs):
      '''getActiveValueElements(self: MaterialX.PyMaterialXCore.InterfaceElement) -> List[MaterialX.PyMaterialXCore.ValueElement]
'''
    ...
    def getAttribute (self, *args, **kwargs):
      '''getAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getAttributeNames (self, *args, **kwargs):
      '''getAttributeNames(self: MaterialX.PyMaterialXCore.Element) -> List[str]
'''
    ...
    def getBindInputs (self):
      '''(Deprecated) Return a vector of all BindInput elements in this shader reference.'''
    ...
    def getBindParams (self):
      '''(Deprecated) Return a vector of all BindParam elements in this shader reference.'''
    ...
    def getBindTokens (self):
      '''(Deprecated) Return a vector of all BindToken elements in this shader reference.'''
    ...
    def getCategory (self, *args, **kwargs):
      '''getCategory(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getChild (self, name):
      '''Return the child element, if any, with the given name.'''
    ...
    def getChildIndex (self, *args, **kwargs):
      '''getChildIndex(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> int
'''
    ...
    def getChildOfType (self, elementClass, name):
      '''Return the child element, if any, with the given name and subclass.'''
    ...
    def getChildren (self, *args, **kwargs):
      '''getChildren(self: MaterialX.PyMaterialXCore.Element) -> List[MaterialX.PyMaterialXCore.Element]
'''
    ...
    def getChildrenOfType (self, elementClass):
      '''Return a list of all child elements that are instances of the given type.
       The returned list maintains the order in which children were added.'''
    ...
    def getColorSpace (self, *args, **kwargs):
      '''getColorSpace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getConnectedOutput (self, *args, **kwargs):
      '''getConnectedOutput(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> MaterialX.PyMaterialXCore.Output
'''
    ...
    def getDeclaration (self, *args, **kwargs):
      '''getDeclaration(self: MaterialX.PyMaterialXCore.InterfaceElement, target: str = '') -> MaterialX.PyMaterialXCore.InterfaceElement
'''
    ...
    def getDefaultVersion (self, *args, **kwargs):
      '''getDefaultVersion(self: MaterialX.PyMaterialXCore.InterfaceElement) -> bool
'''
    ...
    def getDescendant (self, *args, **kwargs):
      '''getDescendant(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getDocString (self, *args, **kwargs):
      '''getDocString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getDocument (self, *args, **kwargs):
      '''getDocument(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::Document
'''
    ...
    def getFile (self, *args, **kwargs):
      '''getFile(self: MaterialX.PyMaterialXCore.Implementation) -> str
'''
    ...
    def getFilePrefix (self, *args, **kwargs):
      '''getFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getFunction (self, *args, **kwargs):
      '''getFunction(self: MaterialX.PyMaterialXCore.Implementation) -> str
'''
    ...
    def getGeomPrefix (self, *args, **kwargs):
      '''getGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getInheritString (self, *args, **kwargs):
      '''getInheritString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getInheritsFrom (self, *args, **kwargs):
      '''getInheritsFrom(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getInput (self, *args, **kwargs):
      '''getInput(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def getInputCount (self, *args, **kwargs):
      '''getInputCount(self: MaterialX.PyMaterialXCore.InterfaceElement) -> int
'''
    ...
    def getInputValue (self, name, target=''):
      '''Return the typed value of an input by its name, taking both the
       calling element and its declaration into account.  If the given
       input is not found, then None is returned.'''
    ...
    def getInputs (self, *args, **kwargs):
      '''getInputs(self: MaterialX.PyMaterialXCore.InterfaceElement) -> List[MaterialX.PyMaterialXCore.Input]
'''
    ...
    def getName (self, *args, **kwargs):
      '''getName(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getNamePath (self, *args, **kwargs):
      '''getNamePath(self: MaterialX.PyMaterialXCore.Element, relativeTo: MaterialX.PyMaterialXCore.Element = None) -> str
'''
    ...
    def getNamespace (self, *args, **kwargs):
      '''getNamespace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getNodeDef (self, *args, **kwargs):
      '''getNodeDef(self: MaterialX.PyMaterialXCore.Implementation) -> MaterialX.PyMaterialXCore.NodeDef
'''
    ...
    def getNodeDefString (self, *args, **kwargs):
      '''getNodeDefString(self: MaterialX.PyMaterialXCore.InterfaceElement) -> str
'''
    ...
    def getNodeGraph (self, *args, **kwargs):
      '''getNodeGraph(self: MaterialX.PyMaterialXCore.Implementation) -> str
'''
    ...
    def getOutput (self, *args, **kwargs):
      '''getOutput(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> MaterialX.PyMaterialXCore.Output
'''
    ...
    def getOutputCount (self, *args, **kwargs):
      '''getOutputCount(self: MaterialX.PyMaterialXCore.InterfaceElement) -> int
'''
    ...
    def getOutputs (self, *args, **kwargs):
      '''getOutputs(self: MaterialX.PyMaterialXCore.InterfaceElement) -> List[MaterialX.PyMaterialXCore.Output]
'''
    ...
    def getParameterValue (self, name, target=''):
      '''(Deprecated) Return the typed value of a parameter by its name.'''
    ...
    def getParameterValueString (self, name):
      '''(Deprecated) Return the value string of a parameter by its name.'''
    ...
    def getParameters (self):
      '''(Deprecated) Return a vector of all Parameter elements.'''
    ...
    def getParent (self, *args, **kwargs):
      '''getParent(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getQualifiedName (self, *args, **kwargs):
      '''getQualifiedName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getRoot (self, *args, **kwargs):
      '''getRoot(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getSelf (self, *args, **kwargs):
      '''getSelf(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getSourceUri (self, *args, **kwargs):
      '''getSourceUri(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getTarget (self, *args, **kwargs):
      '''getTarget(self: MaterialX.PyMaterialXCore.InterfaceElement) -> str
'''
    ...
    def getToken (self, *args, **kwargs):
      '''getToken(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> MaterialX.PyMaterialXCore.Token
'''
    ...
    def getTokenValue (self, *args, **kwargs):
      '''getTokenValue(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> str
'''
    ...
    def getTokens (self, *args, **kwargs):
      '''getTokens(self: MaterialX.PyMaterialXCore.InterfaceElement) -> List[MaterialX.PyMaterialXCore.Token]
'''
    ...
    def getType (self, *args, **kwargs):
      '''getType(self: MaterialX.PyMaterialXCore.TypedElement) -> str
'''
    ...
    def getTypeDef (self, *args, **kwargs):
      '''getTypeDef(self: MaterialX.PyMaterialXCore.TypedElement) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def getUpstreamEdge (self, *args, **kwargs):
      '''getUpstreamEdge(self: MaterialX.PyMaterialXCore.Element, index: int = 0) -> MaterialX_v1_38_8::Edge
'''
    ...
    def getUpstreamEdgeCount (self, *args, **kwargs):
      '''getUpstreamEdgeCount(self: MaterialX.PyMaterialXCore.Element) -> int
'''
    ...
    def getUpstreamElement (self, *args, **kwargs):
      '''getUpstreamElement(self: MaterialX.PyMaterialXCore.Element, index: int = 0) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getVersionIntegers (self, *args, **kwargs):
      '''getVersionIntegers(self: MaterialX.PyMaterialXCore.InterfaceElement) -> Tuple[int, int]
'''
    ...
    def getVersionString (self, *args, **kwargs):
      '''getVersionString(self: MaterialX.PyMaterialXCore.InterfaceElement) -> str
'''
    ...
    def hasAttribute (self, *args, **kwargs):
      '''hasAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> bool
'''
    ...
    def hasColorSpace (self, *args, **kwargs):
      '''hasColorSpace(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasExactInputMatch (self, *args, **kwargs):
      '''hasExactInputMatch(self: MaterialX.PyMaterialXCore.InterfaceElement, declaration: MaterialX.PyMaterialXCore.InterfaceElement, message: str = None) -> bool
'''
    ...
    def hasFile (self, *args, **kwargs):
      '''hasFile(self: MaterialX.PyMaterialXCore.Implementation) -> bool
'''
    ...
    def hasFilePrefix (self, *args, **kwargs):
      '''hasFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasFunction (self, *args, **kwargs):
      '''hasFunction(self: MaterialX.PyMaterialXCore.Implementation) -> bool
'''
    ...
    def hasGeomPrefix (self, *args, **kwargs):
      '''hasGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritString (self, *args, **kwargs):
      '''hasInheritString(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritanceCycle (self, *args, **kwargs):
      '''hasInheritanceCycle(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritedBase (self, *args, **kwargs):
      '''hasInheritedBase(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasNamespace (self, *args, **kwargs):
      '''hasNamespace(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasNodeDefString (self, *args, **kwargs):
      '''hasNodeDefString(self: MaterialX.PyMaterialXCore.InterfaceElement) -> bool
'''
    ...
    def hasNodeGraph (self, *args, **kwargs):
      '''hasNodeGraph(self: MaterialX.PyMaterialXCore.Implementation) -> bool
'''
    ...
    def hasSourceUri (self, *args, **kwargs):
      '''hasSourceUri(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasTarget (self, *args, **kwargs):
      '''hasTarget(self: MaterialX.PyMaterialXCore.InterfaceElement) -> bool
'''
    ...
    def hasType (self, *args, **kwargs):
      '''hasType(self: MaterialX.PyMaterialXCore.TypedElement) -> bool
'''
    ...
    def hasVersionString (self, *args, **kwargs):
      '''hasVersionString(self: MaterialX.PyMaterialXCore.InterfaceElement) -> bool
'''
    ...
    def isA (self, elementClass, category=''):
      '''Return True if this element is an instance of the given subclass.
       If a category string is specified, then both subclass and category
       matches are required.'''
    ...
    def isMultiOutputType (self, *args, **kwargs):
      '''isMultiOutputType(self: MaterialX.PyMaterialXCore.TypedElement) -> bool
'''
    ...
    def removeAttribute (self, *args, **kwargs):
      '''removeAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def removeChild (self, *args, **kwargs):
      '''removeChild(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def removeChildOfType (self, elementClass, name):
      '''Remove the typed child element, if any, with the given name.'''
    ...
    def removeInput (self, *args, **kwargs):
      '''removeInput(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> None
'''
    ...
    def removeOutput (self, *args, **kwargs):
      '''removeOutput(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> None
'''
    ...
    def removeToken (self, *args, **kwargs):
      '''removeToken(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> None
'''
    ...
    def setAttribute (self, *args, **kwargs):
      '''setAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str, arg1: str) -> None
'''
    ...
    def setCategory (self, *args, **kwargs):
      '''setCategory(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setChildIndex (self, *args, **kwargs):
      '''setChildIndex(self: MaterialX.PyMaterialXCore.Element, arg0: str, arg1: int) -> None
'''
    ...
    def setColorSpace (self, *args, **kwargs):
      '''setColorSpace(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setConnectedOutput (self, *args, **kwargs):
      '''setConnectedOutput(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str, arg1: MaterialX.PyMaterialXCore.Output) -> None
'''
    ...
    def setDefaultVersion (self, *args, **kwargs):
      '''setDefaultVersion(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: bool) -> None
'''
    ...
    def setDocString (self, *args, **kwargs):
      '''setDocString(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setFile (self, *args, **kwargs):
      '''setFile(self: MaterialX.PyMaterialXCore.Implementation, arg0: str) -> None
'''
    ...
    def setFilePrefix (self, *args, **kwargs):
      '''setFilePrefix(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setFunction (self, *args, **kwargs):
      '''setFunction(self: MaterialX.PyMaterialXCore.Implementation, arg0: str) -> None
'''
    ...
    def setGeomPrefix (self, *args, **kwargs):
      '''setGeomPrefix(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setInheritString (self, *args, **kwargs):
      '''setInheritString(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setInheritsFrom (self, *args, **kwargs):
      '''setInheritsFrom(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def setInputValue (self, name, value, typeString=''):
      '''Set the typed value of an input by its name, creating a child element
       to hold the input if needed.'''
    ...
    def setName (self, *args, **kwargs):
      '''setName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setNamespace (self, *args, **kwargs):
      '''setNamespace(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setNodeDef (self, *args, **kwargs):
      '''setNodeDef(self: MaterialX.PyMaterialXCore.Implementation, arg0: MaterialX.PyMaterialXCore.NodeDef) -> None
'''
    ...
    def setNodeDefString (self, *args, **kwargs):
      '''setNodeDefString(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> None
'''
    ...
    def setNodeGraph (self, *args, **kwargs):
      '''setNodeGraph(self: MaterialX.PyMaterialXCore.Implementation, arg0: str) -> None
'''
    ...
    def setParameterValue (self, name, value, typeString=''):
      '''(Deprecated) Set the typed value of a parameter by its name.'''
    ...
    def setSourceUri (self, *args, **kwargs):
      '''setSourceUri(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setTarget (self, *args, **kwargs):
      '''setTarget(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> None
'''
    ...
    def setTokenValue (self, *args, **kwargs):
      '''setTokenValue(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str, arg1: str) -> MaterialX.PyMaterialXCore.Token
'''
    ...
    def setType (self, *args, **kwargs):
      '''setType(self: MaterialX.PyMaterialXCore.TypedElement, arg0: str) -> None
'''
    ...
    def setVersionIntegers (self, *args, **kwargs):
      '''setVersionIntegers(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: int, arg1: int) -> None
'''
    ...
    def setVersionString (self, *args, **kwargs):
      '''setVersionString(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> None
'''
    ...
    def traverseGraph (self, *args, **kwargs):
      '''traverseGraph(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::GraphIterator
'''
    ...
    def traverseInheritance (self, *args, **kwargs):
      '''traverseInheritance(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::InheritanceIterator
'''
    ...
    def traverseTree (self, *args, **kwargs):
      '''traverseTree(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::TreeIterator
'''
    ...
    def validate (self, *args, **kwargs):
      '''validate(self: MaterialX.PyMaterialXCore.Element) -> Tuple[bool, str]
'''
    ...

def InheritanceIterator (*args):
      '''

'''      
    ...

class InheritanceIterator:

def Input (*args):
      '''

'''      
    ...

class Input:
    def CATEGORY (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def ENUM_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def ENUM_VALUES_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def IMPLEMENTATION_NAME_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def IMPLEMENTATION_TYPE_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def INTERFACE_NAME_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def TYPE_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def UI_ADVANCED_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def UI_FOLDER_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def UI_MAX_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def UI_MIN_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def UI_NAME_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def UI_SOFT_MAX_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def UI_SOFT_MIN_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def UI_STEP_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def UNIT_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def VALUE_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def _addChildCollection (self, *args, **kwargs):
      '''_addChildCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Collection
'''
    ...
    def _addChildDocument (self, *args, **kwargs):
      '''_addChildDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Document
'''
    ...
    def _addChildGeomInfo (self, *args, **kwargs):
      '''_addChildGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomInfo
'''
    ...
    def _addChildGeomProp (self, *args, **kwargs):
      '''_addChildGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def _addChildImplementation (self, *args, **kwargs):
      '''_addChildImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Implementation
'''
    ...
    def _addChildLook (self, *args, **kwargs):
      '''_addChildLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Look
'''
    ...
    def _addChildMaterialAssign (self, *args, **kwargs):
      '''_addChildMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::MaterialAssign
'''
    ...
    def _addChildNode (self, *args, **kwargs):
      '''_addChildNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Node
'''
    ...
    def _addChildNodeDef (self, *args, **kwargs):
      '''_addChildNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeDef
'''
    ...
    def _addChildNodeGraph (self, *args, **kwargs):
      '''_addChildNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeGraph
'''
    ...
    def _addChildProperty (self, *args, **kwargs):
      '''_addChildProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Property
'''
    ...
    def _addChildPropertySet (self, *args, **kwargs):
      '''_addChildPropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySet
'''
    ...
    def _addChildPropertySetAssign (self, *args, **kwargs):
      '''_addChildPropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySetAssign
'''
    ...
    def _addChildToken (self, *args, **kwargs):
      '''_addChildToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Token
'''
    ...
    def _addChildTypeDef (self, *args, **kwargs):
      '''_addChildTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def _addChildVisibility (self, *args, **kwargs):
      '''_addChildVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Visibility
'''
    ...
    def _getChild (self, *args, **kwargs):
      '''_getChild(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def _getChildOfTypeCollection (self, *args, **kwargs):
      '''_getChildOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Collection
'''
    ...
    def _getChildOfTypeDocument (self, *args, **kwargs):
      '''_getChildOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Document
'''
    ...
    def _getChildOfTypeGeomInfo (self, *args, **kwargs):
      '''_getChildOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomInfo
'''
    ...
    def _getChildOfTypeGeomProp (self, *args, **kwargs):
      '''_getChildOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def _getChildOfTypeImplementation (self, *args, **kwargs):
      '''_getChildOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Implementation
'''
    ...
    def _getChildOfTypeLook (self, *args, **kwargs):
      '''_getChildOfTypeLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Look
'''
    ...
    def _getChildOfTypeMaterialAssign (self, *args, **kwargs):
      '''_getChildOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::MaterialAssign
'''
    ...
    def _getChildOfTypeNode (self, *args, **kwargs):
      '''_getChildOfTypeNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Node
'''
    ...
    def _getChildOfTypeNodeDef (self, *args, **kwargs):
      '''_getChildOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeDef
'''
    ...
    def _getChildOfTypeNodeGraph (self, *args, **kwargs):
      '''_getChildOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeGraph
'''
    ...
    def _getChildOfTypeProperty (self, *args, **kwargs):
      '''_getChildOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Property
'''
    ...
    def _getChildOfTypePropertySet (self, *args, **kwargs):
      '''_getChildOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySet
'''
    ...
    def _getChildOfTypePropertySetAssign (self, *args, **kwargs):
      '''_getChildOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySetAssign
'''
    ...
    def _getChildOfTypeToken (self, *args, **kwargs):
      '''_getChildOfTypeToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Token
'''
    ...
    def _getChildOfTypeTypeDef (self, *args, **kwargs):
      '''_getChildOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def _getChildOfTypeVisibility (self, *args, **kwargs):
      '''_getChildOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Visibility
'''
    ...
    def _getChildrenOfTypeCollection (self, *args, **kwargs):
      '''_getChildrenOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Collection]
'''
    ...
    def _getChildrenOfTypeDocument (self, *args, **kwargs):
      '''_getChildrenOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Document]
'''
    ...
    def _getChildrenOfTypeGeomInfo (self, *args, **kwargs):
      '''_getChildrenOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::GeomInfo]
'''
    ...
    def _getChildrenOfTypeGeomProp (self, *args, **kwargs):
      '''_getChildrenOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::GeomProp]
'''
    ...
    def _getChildrenOfTypeImplementation (self, *args, **kwargs):
      '''_getChildrenOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Implementation]
'''
    ...
    def _getChildrenOfTypeLook (self, *args, **kwargs):
      '''_getChildrenOfTypeLook(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Look]
'''
    ...
    def _getChildrenOfTypeMaterialAssign (self, *args, **kwargs):
      '''_getChildrenOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::MaterialAssign]
'''
    ...
    def _getChildrenOfTypeNode (self, *args, **kwargs):
      '''_getChildrenOfTypeNode(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Node]
'''
    ...
    def _getChildrenOfTypeNodeDef (self, *args, **kwargs):
      '''_getChildrenOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::NodeDef]
'''
    ...
    def _getChildrenOfTypeNodeGraph (self, *args, **kwargs):
      '''_getChildrenOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::NodeGraph]
'''
    ...
    def _getChildrenOfTypeProperty (self, *args, **kwargs):
      '''_getChildrenOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Property]
'''
    ...
    def _getChildrenOfTypePropertySet (self, *args, **kwargs):
      '''_getChildrenOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::PropertySet]
'''
    ...
    def _getChildrenOfTypePropertySetAssign (self, *args, **kwargs):
      '''_getChildrenOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::PropertySetAssign]
'''
    ...
    def _getChildrenOfTypeToken (self, *args, **kwargs):
      '''_getChildrenOfTypeToken(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Token]
'''
    ...
    def _getChildrenOfTypeTypeDef (self, *args, **kwargs):
      '''_getChildrenOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::TypeDef]
'''
    ...
    def _getChildrenOfTypeVisibility (self, *args, **kwargs):
      '''_getChildrenOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Visibility]
'''
    ...
    def _getDefaultValue (self, *args, **kwargs):
      '''_getDefaultValue(self: MaterialX.PyMaterialXCore.ValueElement) -> MaterialX_v1_38_8::Value
'''
    ...
    def _getValue (self, *args, **kwargs):
      '''_getValue(self: MaterialX.PyMaterialXCore.ValueElement) -> MaterialX_v1_38_8::Value
'''
    ...
    def _removeChildOfTypeCollection (self, *args, **kwargs):
      '''_removeChildOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeDocument (self, *args, **kwargs):
      '''_removeChildOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeGeomInfo (self, *args, **kwargs):
      '''_removeChildOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeGeomProp (self, *args, **kwargs):
      '''_removeChildOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeImplementation (self, *args, **kwargs):
      '''_removeChildOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeLook (self, *args, **kwargs):
      '''_removeChildOfTypeLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeMaterialAssign (self, *args, **kwargs):
      '''_removeChildOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNode (self, *args, **kwargs):
      '''_removeChildOfTypeNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNodeDef (self, *args, **kwargs):
      '''_removeChildOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNodeGraph (self, *args, **kwargs):
      '''_removeChildOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeProperty (self, *args, **kwargs):
      '''_removeChildOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypePropertySet (self, *args, **kwargs):
      '''_removeChildOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypePropertySetAssign (self, *args, **kwargs):
      '''_removeChildOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeToken (self, *args, **kwargs):
      '''_removeChildOfTypeToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeTypeDef (self, *args, **kwargs):
      '''_removeChildOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeVisibility (self, *args, **kwargs):
      '''_removeChildOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _setValueboolean (self, *args, **kwargs):
      '''_setValueboolean(self: MaterialX.PyMaterialXCore.ValueElement, value: bool, type: str = '') -> None
'''
    ...
    def _setValuebooleanarray (self, *args, **kwargs):
      '''_setValuebooleanarray(self: MaterialX.PyMaterialXCore.ValueElement, value: List[bool], type: str = '') -> None
'''
    ...
    def _setValuecolor3 (self, *args, **kwargs):
      '''_setValuecolor3(self: MaterialX.PyMaterialXCore.ValueElement, value: MaterialX_v1_38_8::Color3, type: str = '') -> None
'''
    ...
    def _setValuecolor4 (self, *args, **kwargs):
      '''_setValuecolor4(self: MaterialX.PyMaterialXCore.ValueElement, value: MaterialX_v1_38_8::Color4, type: str = '') -> None
'''
    ...
    def _setValuefloat (self, *args, **kwargs):
      '''_setValuefloat(self: MaterialX.PyMaterialXCore.ValueElement, value: float, type: str = '') -> None
'''
    ...
    def _setValuefloatarray (self, *args, **kwargs):
      '''_setValuefloatarray(self: MaterialX.PyMaterialXCore.ValueElement, value: List[float], type: str = '') -> None
'''
    ...
    def _setValueinteger (self, *args, **kwargs):
      '''_setValueinteger(self: MaterialX.PyMaterialXCore.ValueElement, value: int, type: str = '') -> None
'''
    ...
    def _setValueintegerarray (self, *args, **kwargs):
      '''_setValueintegerarray(self: MaterialX.PyMaterialXCore.ValueElement, value: List[int], type: str = '') -> None
'''
    ...
    def _setValuematrix33 (self, *args, **kwargs):
      '''_setValuematrix33(self: MaterialX.PyMaterialXCore.ValueElement, value: MaterialX_v1_38_8::Matrix33, type: str = '') -> None
'''
    ...
    def _setValuematrix44 (self, *args, **kwargs):
      '''_setValuematrix44(self: MaterialX.PyMaterialXCore.ValueElement, value: MaterialX_v1_38_8::Matrix44, type: str = '') -> None
'''
    ...
    def _setValuestring (self, *args, **kwargs):
      '''_setValuestring(self: MaterialX.PyMaterialXCore.ValueElement, value: str, type: str = '') -> None
'''
    ...
    def _setValuestringarray (self, *args, **kwargs):
      '''_setValuestringarray(self: MaterialX.PyMaterialXCore.ValueElement, value: List[str], type: str = '') -> None
'''
    ...
    def _setValuevector2 (self, *args, **kwargs):
      '''_setValuevector2(self: MaterialX.PyMaterialXCore.ValueElement, value: MaterialX_v1_38_8::Vector2, type: str = '') -> None
'''
    ...
    def _setValuevector3 (self, *args, **kwargs):
      '''_setValuevector3(self: MaterialX.PyMaterialXCore.ValueElement, value: MaterialX_v1_38_8::Vector3, type: str = '') -> None
'''
    ...
    def _setValuevector4 (self, *args, **kwargs):
      '''_setValuevector4(self: MaterialX.PyMaterialXCore.ValueElement, value: MaterialX_v1_38_8::Vector4, type: str = '') -> None
'''
    ...
    def addChild (self, elementClass, name, typeString=''):
      '''Add a child element of the given subclass, name, and optional type string.'''
    ...
    def addChildOfCategory (self, *args, **kwargs):
      '''addChildOfCategory(self: MaterialX.PyMaterialXCore.Element, category: str, name: str = '') -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def asString (self, *args, **kwargs):
      '''asString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def changeChildCategory (self, *args, **kwargs):
      '''changeChildCategory(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element, arg1: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def clearContent (self, *args, **kwargs):
      '''clearContent(self: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def copyContentFrom (self, *args, **kwargs):
      '''copyContentFrom(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def createStringResolver (self, *args, **kwargs):
      '''createStringResolver(self: MaterialX.PyMaterialXCore.Element, geom: str = '') -> MaterialX_v1_38_8::StringResolver
'''
    ...
    def createValidChildName (self, *args, **kwargs):
      '''createValidChildName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getActiveColorSpace (self, *args, **kwargs):
      '''getActiveColorSpace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveFilePrefix (self, *args, **kwargs):
      '''getActiveFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveGeomPrefix (self, *args, **kwargs):
      '''getActiveGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveSourceUri (self, *args, **kwargs):
      '''getActiveSourceUri(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveUnit (self, *args, **kwargs):
      '''getActiveUnit(self: MaterialX.PyMaterialXCore.ValueElement) -> str
'''
    ...
    def getAttribute (self, *args, **kwargs):
      '''getAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getAttributeNames (self, *args, **kwargs):
      '''getAttributeNames(self: MaterialX.PyMaterialXCore.Element) -> List[str]
'''
    ...
    def getCategory (self, *args, **kwargs):
      '''getCategory(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getChannels (self, *args, **kwargs):
      '''getChannels(self: MaterialX.PyMaterialXCore.PortElement) -> str
'''
    ...
    def getChild (self, name):
      '''Return the child element, if any, with the given name.'''
    ...
    def getChildIndex (self, *args, **kwargs):
      '''getChildIndex(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> int
'''
    ...
    def getChildOfType (self, elementClass, name):
      '''Return the child element, if any, with the given name and subclass.'''
    ...
    def getChildren (self, *args, **kwargs):
      '''getChildren(self: MaterialX.PyMaterialXCore.Element) -> List[MaterialX.PyMaterialXCore.Element]
'''
    ...
    def getChildrenOfType (self, elementClass):
      '''Return a list of all child elements that are instances of the given type.
       The returned list maintains the order in which children were added.'''
    ...
    def getColorSpace (self, *args, **kwargs):
      '''getColorSpace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getConnectedNode (self, *args, **kwargs):
      '''getConnectedNode(self: MaterialX.PyMaterialXCore.Input) -> MaterialX_v1_38_8::Node
'''
    ...
    def getConnectedOutput (self, *args, **kwargs):
      '''getConnectedOutput(self: MaterialX.PyMaterialXCore.PortElement) -> MaterialX_v1_38_8::Output
'''
    ...
    def getDefaultGeomProp (self, *args, **kwargs):
      '''getDefaultGeomProp(self: MaterialX.PyMaterialXCore.Input) -> MaterialX_v1_38_8::GeomPropDef
'''
    ...
    def getDefaultGeomPropString (self, *args, **kwargs):
      '''getDefaultGeomPropString(self: MaterialX.PyMaterialXCore.Input) -> str
'''
    ...
    def getDefaultValue (self):
      '''Return the default value for this element.'''
    ...
    def getDescendant (self, *args, **kwargs):
      '''getDescendant(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getDocString (self, *args, **kwargs):
      '''getDocString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getDocument (self, *args, **kwargs):
      '''getDocument(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::Document
'''
    ...
    def getFilePrefix (self, *args, **kwargs):
      '''getFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getGeomPrefix (self, *args, **kwargs):
      '''getGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getImplementationName (self, *args, **kwargs):
      '''getImplementationName(self: MaterialX.PyMaterialXCore.ValueElement) -> str
'''
    ...
    def getInheritString (self, *args, **kwargs):
      '''getInheritString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getInheritsFrom (self, *args, **kwargs):
      '''getInheritsFrom(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getInterfaceInput (self, *args, **kwargs):
      '''getInterfaceInput(self: MaterialX.PyMaterialXCore.Input) -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def getInterfaceName (self, *args, **kwargs):
      '''getInterfaceName(self: MaterialX.PyMaterialXCore.ValueElement) -> str
'''
    ...
    def getIsUniform (self, *args, **kwargs):
      '''getIsUniform(self: MaterialX.PyMaterialXCore.ValueElement) -> bool
'''
    ...
    def getName (self, *args, **kwargs):
      '''getName(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getNamePath (self, *args, **kwargs):
      '''getNamePath(self: MaterialX.PyMaterialXCore.Element, relativeTo: MaterialX.PyMaterialXCore.Element = None) -> str
'''
    ...
    def getNamespace (self, *args, **kwargs):
      '''getNamespace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getNodeGraphString (self, *args, **kwargs):
      '''getNodeGraphString(self: MaterialX.PyMaterialXCore.PortElement) -> str
'''
    ...
    def getNodeName (self, *args, **kwargs):
      '''getNodeName(self: MaterialX.PyMaterialXCore.PortElement) -> str
'''
    ...
    def getOutputString (self, *args, **kwargs):
      '''getOutputString(self: MaterialX.PyMaterialXCore.PortElement) -> str
'''
    ...
    def getParent (self, *args, **kwargs):
      '''getParent(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getQualifiedName (self, *args, **kwargs):
      '''getQualifiedName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getResolvedValueString (self, *args, **kwargs):
      '''getResolvedValueString(self: MaterialX.PyMaterialXCore.ValueElement, resolver: MaterialX_v1_38_8::StringResolver = None) -> str
'''
    ...
    def getRoot (self, *args, **kwargs):
      '''getRoot(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getSelf (self, *args, **kwargs):
      '''getSelf(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getSourceUri (self, *args, **kwargs):
      '''getSourceUri(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getType (self, *args, **kwargs):
      '''getType(self: MaterialX.PyMaterialXCore.TypedElement) -> str
'''
    ...
    def getTypeDef (self, *args, **kwargs):
      '''getTypeDef(self: MaterialX.PyMaterialXCore.TypedElement) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def getUnit (self, *args, **kwargs):
      '''getUnit(self: MaterialX.PyMaterialXCore.ValueElement) -> str
'''
    ...
    def getUnitType (self, *args, **kwargs):
      '''getUnitType(self: MaterialX.PyMaterialXCore.ValueElement) -> str
'''
    ...
    def getUpstreamEdge (self, *args, **kwargs):
      '''getUpstreamEdge(self: MaterialX.PyMaterialXCore.Element, index: int = 0) -> MaterialX_v1_38_8::Edge
'''
    ...
    def getUpstreamEdgeCount (self, *args, **kwargs):
      '''getUpstreamEdgeCount(self: MaterialX.PyMaterialXCore.Element) -> int
'''
    ...
    def getUpstreamElement (self, *args, **kwargs):
      '''getUpstreamElement(self: MaterialX.PyMaterialXCore.Element, index: int = 0) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getValue (self):
      '''Return the typed value of an element.'''
    ...
    def getValueString (self, *args, **kwargs):
      '''getValueString(self: MaterialX.PyMaterialXCore.ValueElement) -> str
'''
    ...
    def hasAttribute (self, *args, **kwargs):
      '''hasAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> bool
'''
    ...
    def hasColorSpace (self, *args, **kwargs):
      '''hasColorSpace(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasDefaultGeomPropString (self, *args, **kwargs):
      '''hasDefaultGeomPropString(self: MaterialX.PyMaterialXCore.Input) -> bool
'''
    ...
    def hasFilePrefix (self, *args, **kwargs):
      '''hasFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasGeomPrefix (self, *args, **kwargs):
      '''hasGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasImplementationName (self, *args, **kwargs):
      '''hasImplementationName(self: MaterialX.PyMaterialXCore.ValueElement) -> bool
'''
    ...
    def hasInheritString (self, *args, **kwargs):
      '''hasInheritString(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritanceCycle (self, *args, **kwargs):
      '''hasInheritanceCycle(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritedBase (self, *args, **kwargs):
      '''hasInheritedBase(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInterfaceName (self, *args, **kwargs):
      '''hasInterfaceName(self: MaterialX.PyMaterialXCore.ValueElement) -> bool
'''
    ...
    def hasNamespace (self, *args, **kwargs):
      '''hasNamespace(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasNodeGraphString (self, *args, **kwargs):
      '''hasNodeGraphString(self: MaterialX.PyMaterialXCore.PortElement) -> bool
'''
    ...
    def hasOutputString (self, *args, **kwargs):
      '''hasOutputString(self: MaterialX.PyMaterialXCore.PortElement) -> bool
'''
    ...
    def hasSourceUri (self, *args, **kwargs):
      '''hasSourceUri(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasType (self, *args, **kwargs):
      '''hasType(self: MaterialX.PyMaterialXCore.TypedElement) -> bool
'''
    ...
    def hasUnit (self, *args, **kwargs):
      '''hasUnit(self: MaterialX.PyMaterialXCore.ValueElement) -> bool
'''
    ...
    def hasUnitType (self, *args, **kwargs):
      '''hasUnitType(self: MaterialX.PyMaterialXCore.ValueElement) -> bool
'''
    ...
    def hasValueString (self, *args, **kwargs):
      '''hasValueString(self: MaterialX.PyMaterialXCore.ValueElement) -> bool
'''
    ...
    def isA (self, elementClass, category=''):
      '''Return True if this element is an instance of the given subclass.
       If a category string is specified, then both subclass and category
       matches are required.'''
    ...
    def isMultiOutputType (self, *args, **kwargs):
      '''isMultiOutputType(self: MaterialX.PyMaterialXCore.TypedElement) -> bool
'''
    ...
    def removeAttribute (self, *args, **kwargs):
      '''removeAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def removeChild (self, *args, **kwargs):
      '''removeChild(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def removeChildOfType (self, elementClass, name):
      '''Remove the typed child element, if any, with the given name.'''
    ...
    def setAttribute (self, *args, **kwargs):
      '''setAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str, arg1: str) -> None
'''
    ...
    def setCategory (self, *args, **kwargs):
      '''setCategory(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setChannels (self, *args, **kwargs):
      '''setChannels(self: MaterialX.PyMaterialXCore.PortElement, arg0: str) -> None
'''
    ...
    def setChildIndex (self, *args, **kwargs):
      '''setChildIndex(self: MaterialX.PyMaterialXCore.Element, arg0: str, arg1: int) -> None
'''
    ...
    def setColorSpace (self, *args, **kwargs):
      '''setColorSpace(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setConnectedNode (self, *args, **kwargs):
      '''setConnectedNode(self: MaterialX.PyMaterialXCore.PortElement, arg0: MaterialX_v1_38_8::Node) -> None
'''
    ...
    def setConnectedOutput (self, *args, **kwargs):
      '''setConnectedOutput(self: MaterialX.PyMaterialXCore.PortElement, arg0: MaterialX_v1_38_8::Output) -> None
'''
    ...
    def setDefaultGeomPropString (self, *args, **kwargs):
      '''setDefaultGeomPropString(self: MaterialX.PyMaterialXCore.Input, arg0: str) -> None
'''
    ...
    def setDocString (self, *args, **kwargs):
      '''setDocString(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setFilePrefix (self, *args, **kwargs):
      '''setFilePrefix(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setGeomPrefix (self, *args, **kwargs):
      '''setGeomPrefix(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setImplementationName (self, *args, **kwargs):
      '''setImplementationName(self: MaterialX.PyMaterialXCore.ValueElement, arg0: str) -> None
'''
    ...
    def setInheritString (self, *args, **kwargs):
      '''setInheritString(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setInheritsFrom (self, *args, **kwargs):
      '''setInheritsFrom(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def setInterfaceName (self, *args, **kwargs):
      '''setInterfaceName(self: MaterialX.PyMaterialXCore.ValueElement, arg0: str) -> None
'''
    ...
    def setIsUniform (self, *args, **kwargs):
      '''setIsUniform(self: MaterialX.PyMaterialXCore.ValueElement, arg0: bool) -> None
'''
    ...
    def setName (self, *args, **kwargs):
      '''setName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setNamespace (self, *args, **kwargs):
      '''setNamespace(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setNodeGraphString (self, *args, **kwargs):
      '''setNodeGraphString(self: MaterialX.PyMaterialXCore.PortElement, arg0: str) -> None
'''
    ...
    def setNodeName (self, *args, **kwargs):
      '''setNodeName(self: MaterialX.PyMaterialXCore.PortElement, arg0: str) -> None
'''
    ...
    def setOutputString (self, *args, **kwargs):
      '''setOutputString(self: MaterialX.PyMaterialXCore.PortElement, arg0: str) -> None
'''
    ...
    def setSourceUri (self, *args, **kwargs):
      '''setSourceUri(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setType (self, *args, **kwargs):
      '''setType(self: MaterialX.PyMaterialXCore.TypedElement, arg0: str) -> None
'''
    ...
    def setUnit (self, *args, **kwargs):
      '''setUnit(self: MaterialX.PyMaterialXCore.ValueElement, arg0: str) -> None
'''
    ...
    def setUnitType (self, *args, **kwargs):
      '''setUnitType(self: MaterialX.PyMaterialXCore.ValueElement, arg0: str) -> None
'''
    ...
    def setValue (self, value, typeString=''):
      '''Set the typed value of an element.'''
    ...
    def setValueString (self, *args, **kwargs):
      '''setValueString(self: MaterialX.PyMaterialXCore.ValueElement, arg0: str) -> None
'''
    ...
    def traverseGraph (self, *args, **kwargs):
      '''traverseGraph(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::GraphIterator
'''
    ...
    def traverseInheritance (self, *args, **kwargs):
      '''traverseInheritance(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::InheritanceIterator
'''
    ...
    def traverseTree (self, *args, **kwargs):
      '''traverseTree(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::TreeIterator
'''
    ...
    def validate (self, *args, **kwargs):
      '''validate(self: MaterialX.PyMaterialXCore.Element) -> Tuple[bool, str]
'''
    ...

def InterfaceElement (*args):
      '''

'''      
    ...

class InterfaceElement:
    def NODE_DEF_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def TYPE_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def _addChildCollection (self, *args, **kwargs):
      '''_addChildCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Collection
'''
    ...
    def _addChildDocument (self, *args, **kwargs):
      '''_addChildDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Document
'''
    ...
    def _addChildGeomInfo (self, *args, **kwargs):
      '''_addChildGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomInfo
'''
    ...
    def _addChildGeomProp (self, *args, **kwargs):
      '''_addChildGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def _addChildImplementation (self, *args, **kwargs):
      '''_addChildImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Implementation
'''
    ...
    def _addChildLook (self, *args, **kwargs):
      '''_addChildLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Look
'''
    ...
    def _addChildMaterialAssign (self, *args, **kwargs):
      '''_addChildMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::MaterialAssign
'''
    ...
    def _addChildNode (self, *args, **kwargs):
      '''_addChildNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Node
'''
    ...
    def _addChildNodeDef (self, *args, **kwargs):
      '''_addChildNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeDef
'''
    ...
    def _addChildNodeGraph (self, *args, **kwargs):
      '''_addChildNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeGraph
'''
    ...
    def _addChildProperty (self, *args, **kwargs):
      '''_addChildProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Property
'''
    ...
    def _addChildPropertySet (self, *args, **kwargs):
      '''_addChildPropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySet
'''
    ...
    def _addChildPropertySetAssign (self, *args, **kwargs):
      '''_addChildPropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySetAssign
'''
    ...
    def _addChildToken (self, *args, **kwargs):
      '''_addChildToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Token
'''
    ...
    def _addChildTypeDef (self, *args, **kwargs):
      '''_addChildTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def _addChildVisibility (self, *args, **kwargs):
      '''_addChildVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Visibility
'''
    ...
    def _getChild (self, *args, **kwargs):
      '''_getChild(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def _getChildOfTypeCollection (self, *args, **kwargs):
      '''_getChildOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Collection
'''
    ...
    def _getChildOfTypeDocument (self, *args, **kwargs):
      '''_getChildOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Document
'''
    ...
    def _getChildOfTypeGeomInfo (self, *args, **kwargs):
      '''_getChildOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomInfo
'''
    ...
    def _getChildOfTypeGeomProp (self, *args, **kwargs):
      '''_getChildOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def _getChildOfTypeImplementation (self, *args, **kwargs):
      '''_getChildOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Implementation
'''
    ...
    def _getChildOfTypeLook (self, *args, **kwargs):
      '''_getChildOfTypeLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Look
'''
    ...
    def _getChildOfTypeMaterialAssign (self, *args, **kwargs):
      '''_getChildOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::MaterialAssign
'''
    ...
    def _getChildOfTypeNode (self, *args, **kwargs):
      '''_getChildOfTypeNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Node
'''
    ...
    def _getChildOfTypeNodeDef (self, *args, **kwargs):
      '''_getChildOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeDef
'''
    ...
    def _getChildOfTypeNodeGraph (self, *args, **kwargs):
      '''_getChildOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeGraph
'''
    ...
    def _getChildOfTypeProperty (self, *args, **kwargs):
      '''_getChildOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Property
'''
    ...
    def _getChildOfTypePropertySet (self, *args, **kwargs):
      '''_getChildOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySet
'''
    ...
    def _getChildOfTypePropertySetAssign (self, *args, **kwargs):
      '''_getChildOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySetAssign
'''
    ...
    def _getChildOfTypeToken (self, *args, **kwargs):
      '''_getChildOfTypeToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Token
'''
    ...
    def _getChildOfTypeTypeDef (self, *args, **kwargs):
      '''_getChildOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def _getChildOfTypeVisibility (self, *args, **kwargs):
      '''_getChildOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Visibility
'''
    ...
    def _getChildrenOfTypeCollection (self, *args, **kwargs):
      '''_getChildrenOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Collection]
'''
    ...
    def _getChildrenOfTypeDocument (self, *args, **kwargs):
      '''_getChildrenOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Document]
'''
    ...
    def _getChildrenOfTypeGeomInfo (self, *args, **kwargs):
      '''_getChildrenOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::GeomInfo]
'''
    ...
    def _getChildrenOfTypeGeomProp (self, *args, **kwargs):
      '''_getChildrenOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::GeomProp]
'''
    ...
    def _getChildrenOfTypeImplementation (self, *args, **kwargs):
      '''_getChildrenOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Implementation]
'''
    ...
    def _getChildrenOfTypeLook (self, *args, **kwargs):
      '''_getChildrenOfTypeLook(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Look]
'''
    ...
    def _getChildrenOfTypeMaterialAssign (self, *args, **kwargs):
      '''_getChildrenOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::MaterialAssign]
'''
    ...
    def _getChildrenOfTypeNode (self, *args, **kwargs):
      '''_getChildrenOfTypeNode(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Node]
'''
    ...
    def _getChildrenOfTypeNodeDef (self, *args, **kwargs):
      '''_getChildrenOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::NodeDef]
'''
    ...
    def _getChildrenOfTypeNodeGraph (self, *args, **kwargs):
      '''_getChildrenOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::NodeGraph]
'''
    ...
    def _getChildrenOfTypeProperty (self, *args, **kwargs):
      '''_getChildrenOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Property]
'''
    ...
    def _getChildrenOfTypePropertySet (self, *args, **kwargs):
      '''_getChildrenOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::PropertySet]
'''
    ...
    def _getChildrenOfTypePropertySetAssign (self, *args, **kwargs):
      '''_getChildrenOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::PropertySetAssign]
'''
    ...
    def _getChildrenOfTypeToken (self, *args, **kwargs):
      '''_getChildrenOfTypeToken(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Token]
'''
    ...
    def _getChildrenOfTypeTypeDef (self, *args, **kwargs):
      '''_getChildrenOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::TypeDef]
'''
    ...
    def _getChildrenOfTypeVisibility (self, *args, **kwargs):
      '''_getChildrenOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Visibility]
'''
    ...
    def _getInputValue (self, *args, **kwargs):
      '''_getInputValue(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str, arg1: str) -> MaterialX_v1_38_8::Value
'''
    ...
    def _removeChildOfTypeCollection (self, *args, **kwargs):
      '''_removeChildOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeDocument (self, *args, **kwargs):
      '''_removeChildOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeGeomInfo (self, *args, **kwargs):
      '''_removeChildOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeGeomProp (self, *args, **kwargs):
      '''_removeChildOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeImplementation (self, *args, **kwargs):
      '''_removeChildOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeLook (self, *args, **kwargs):
      '''_removeChildOfTypeLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeMaterialAssign (self, *args, **kwargs):
      '''_removeChildOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNode (self, *args, **kwargs):
      '''_removeChildOfTypeNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNodeDef (self, *args, **kwargs):
      '''_removeChildOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNodeGraph (self, *args, **kwargs):
      '''_removeChildOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeProperty (self, *args, **kwargs):
      '''_removeChildOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypePropertySet (self, *args, **kwargs):
      '''_removeChildOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypePropertySetAssign (self, *args, **kwargs):
      '''_removeChildOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeToken (self, *args, **kwargs):
      '''_removeChildOfTypeToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeTypeDef (self, *args, **kwargs):
      '''_removeChildOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeVisibility (self, *args, **kwargs):
      '''_removeChildOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _setInputValueboolean (self, *args, **kwargs):
      '''_setInputValueboolean(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: bool, type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValuebooleanarray (self, *args, **kwargs):
      '''_setInputValuebooleanarray(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: List[bool], type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValuecolor3 (self, *args, **kwargs):
      '''_setInputValuecolor3(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: MaterialX_v1_38_8::Color3, type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValuecolor4 (self, *args, **kwargs):
      '''_setInputValuecolor4(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: MaterialX_v1_38_8::Color4, type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValuefloat (self, *args, **kwargs):
      '''_setInputValuefloat(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: float, type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValuefloatarray (self, *args, **kwargs):
      '''_setInputValuefloatarray(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: List[float], type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValueinteger (self, *args, **kwargs):
      '''_setInputValueinteger(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: int, type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValueintegerarray (self, *args, **kwargs):
      '''_setInputValueintegerarray(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: List[int], type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValuematrix33 (self, *args, **kwargs):
      '''_setInputValuematrix33(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: MaterialX_v1_38_8::Matrix33, type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValuematrix44 (self, *args, **kwargs):
      '''_setInputValuematrix44(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: MaterialX_v1_38_8::Matrix44, type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValuestring (self, *args, **kwargs):
      '''_setInputValuestring(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: str, type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValuestringarray (self, *args, **kwargs):
      '''_setInputValuestringarray(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: List[str], type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValuevector2 (self, *args, **kwargs):
      '''_setInputValuevector2(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: MaterialX_v1_38_8::Vector2, type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValuevector3 (self, *args, **kwargs):
      '''_setInputValuevector3(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: MaterialX_v1_38_8::Vector3, type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValuevector4 (self, *args, **kwargs):
      '''_setInputValuevector4(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: MaterialX_v1_38_8::Vector4, type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def addBindInput (self, name, type='color3'):
      '''(Deprecated) Add a BindInput to this shader reference.'''
    ...
    def addBindParam (self, name, type='color3'):
      '''(Deprecated) Add a BindParam to this shader reference.'''
    ...
    def addChild (self, elementClass, name, typeString=''):
      '''Add a child element of the given subclass, name, and optional type string.'''
    ...
    def addChildOfCategory (self, *args, **kwargs):
      '''addChildOfCategory(self: MaterialX.PyMaterialXCore.Element, category: str, name: str = '') -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def addInput (self, *args, **kwargs):
      '''addInput(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str = '', type: str = 'color3') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def addOutput (self, *args, **kwargs):
      '''addOutput(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str = '', type: str = 'color3') -> MaterialX.PyMaterialXCore.Output
'''
    ...
    def addParameter (self, name):
      '''(Deprecated) Add a Parameter to this interface.'''
    ...
    def addToken (self, *args, **kwargs):
      '''addToken(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str = 'color3') -> MaterialX.PyMaterialXCore.Token
'''
    ...
    def asString (self, *args, **kwargs):
      '''asString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def changeChildCategory (self, *args, **kwargs):
      '''changeChildCategory(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element, arg1: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def clearContent (self, *args, **kwargs):
      '''clearContent(self: MaterialX.PyMaterialXCore.InterfaceElement) -> None
'''
    ...
    def copyContentFrom (self, *args, **kwargs):
      '''copyContentFrom(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def createStringResolver (self, *args, **kwargs):
      '''createStringResolver(self: MaterialX.PyMaterialXCore.Element, geom: str = '') -> MaterialX_v1_38_8::StringResolver
'''
    ...
    def createValidChildName (self, *args, **kwargs):
      '''createValidChildName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getActiveColorSpace (self, *args, **kwargs):
      '''getActiveColorSpace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveFilePrefix (self, *args, **kwargs):
      '''getActiveFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveGeomPrefix (self, *args, **kwargs):
      '''getActiveGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveInput (self, *args, **kwargs):
      '''getActiveInput(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def getActiveInputs (self, *args, **kwargs):
      '''getActiveInputs(self: MaterialX.PyMaterialXCore.InterfaceElement) -> List[MaterialX.PyMaterialXCore.Input]
'''
    ...
    def getActiveOutput (self, *args, **kwargs):
      '''getActiveOutput(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> MaterialX.PyMaterialXCore.Output
'''
    ...
    def getActiveOutputs (self, *args, **kwargs):
      '''getActiveOutputs(self: MaterialX.PyMaterialXCore.InterfaceElement) -> List[MaterialX.PyMaterialXCore.Output]
'''
    ...
    def getActiveParameters (self):
      '''(Deprecated) Return a vector of all parameters belonging to this interface, taking inheritance into account.'''
    ...
    def getActiveSourceUri (self, *args, **kwargs):
      '''getActiveSourceUri(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveToken (self, *args, **kwargs):
      '''getActiveToken(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> MaterialX.PyMaterialXCore.Token
'''
    ...
    def getActiveTokens (self, *args, **kwargs):
      '''getActiveTokens(self: MaterialX.PyMaterialXCore.InterfaceElement) -> List[MaterialX.PyMaterialXCore.Token]
'''
    ...
    def getActiveValueElement (self, *args, **kwargs):
      '''getActiveValueElement(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> MaterialX.PyMaterialXCore.ValueElement
'''
    ...
    def getActiveValueElements (self, *args, **kwargs):
      '''getActiveValueElements(self: MaterialX.PyMaterialXCore.InterfaceElement) -> List[MaterialX.PyMaterialXCore.ValueElement]
'''
    ...
    def getAttribute (self, *args, **kwargs):
      '''getAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getAttributeNames (self, *args, **kwargs):
      '''getAttributeNames(self: MaterialX.PyMaterialXCore.Element) -> List[str]
'''
    ...
    def getBindInputs (self):
      '''(Deprecated) Return a vector of all BindInput elements in this shader reference.'''
    ...
    def getBindParams (self):
      '''(Deprecated) Return a vector of all BindParam elements in this shader reference.'''
    ...
    def getBindTokens (self):
      '''(Deprecated) Return a vector of all BindToken elements in this shader reference.'''
    ...
    def getCategory (self, *args, **kwargs):
      '''getCategory(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getChild (self, name):
      '''Return the child element, if any, with the given name.'''
    ...
    def getChildIndex (self, *args, **kwargs):
      '''getChildIndex(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> int
'''
    ...
    def getChildOfType (self, elementClass, name):
      '''Return the child element, if any, with the given name and subclass.'''
    ...
    def getChildren (self, *args, **kwargs):
      '''getChildren(self: MaterialX.PyMaterialXCore.Element) -> List[MaterialX.PyMaterialXCore.Element]
'''
    ...
    def getChildrenOfType (self, elementClass):
      '''Return a list of all child elements that are instances of the given type.
       The returned list maintains the order in which children were added.'''
    ...
    def getColorSpace (self, *args, **kwargs):
      '''getColorSpace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getConnectedOutput (self, *args, **kwargs):
      '''getConnectedOutput(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> MaterialX.PyMaterialXCore.Output
'''
    ...
    def getDeclaration (self, *args, **kwargs):
      '''getDeclaration(self: MaterialX.PyMaterialXCore.InterfaceElement, target: str = '') -> MaterialX.PyMaterialXCore.InterfaceElement
'''
    ...
    def getDefaultVersion (self, *args, **kwargs):
      '''getDefaultVersion(self: MaterialX.PyMaterialXCore.InterfaceElement) -> bool
'''
    ...
    def getDescendant (self, *args, **kwargs):
      '''getDescendant(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getDocString (self, *args, **kwargs):
      '''getDocString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getDocument (self, *args, **kwargs):
      '''getDocument(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::Document
'''
    ...
    def getFilePrefix (self, *args, **kwargs):
      '''getFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getGeomPrefix (self, *args, **kwargs):
      '''getGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getInheritString (self, *args, **kwargs):
      '''getInheritString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getInheritsFrom (self, *args, **kwargs):
      '''getInheritsFrom(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getInput (self, *args, **kwargs):
      '''getInput(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def getInputCount (self, *args, **kwargs):
      '''getInputCount(self: MaterialX.PyMaterialXCore.InterfaceElement) -> int
'''
    ...
    def getInputValue (self, name, target=''):
      '''Return the typed value of an input by its name, taking both the
       calling element and its declaration into account.  If the given
       input is not found, then None is returned.'''
    ...
    def getInputs (self, *args, **kwargs):
      '''getInputs(self: MaterialX.PyMaterialXCore.InterfaceElement) -> List[MaterialX.PyMaterialXCore.Input]
'''
    ...
    def getName (self, *args, **kwargs):
      '''getName(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getNamePath (self, *args, **kwargs):
      '''getNamePath(self: MaterialX.PyMaterialXCore.Element, relativeTo: MaterialX.PyMaterialXCore.Element = None) -> str
'''
    ...
    def getNamespace (self, *args, **kwargs):
      '''getNamespace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getNodeDefString (self, *args, **kwargs):
      '''getNodeDefString(self: MaterialX.PyMaterialXCore.InterfaceElement) -> str
'''
    ...
    def getOutput (self, *args, **kwargs):
      '''getOutput(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> MaterialX.PyMaterialXCore.Output
'''
    ...
    def getOutputCount (self, *args, **kwargs):
      '''getOutputCount(self: MaterialX.PyMaterialXCore.InterfaceElement) -> int
'''
    ...
    def getOutputs (self, *args, **kwargs):
      '''getOutputs(self: MaterialX.PyMaterialXCore.InterfaceElement) -> List[MaterialX.PyMaterialXCore.Output]
'''
    ...
    def getParameterValue (self, name, target=''):
      '''(Deprecated) Return the typed value of a parameter by its name.'''
    ...
    def getParameterValueString (self, name):
      '''(Deprecated) Return the value string of a parameter by its name.'''
    ...
    def getParameters (self):
      '''(Deprecated) Return a vector of all Parameter elements.'''
    ...
    def getParent (self, *args, **kwargs):
      '''getParent(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getQualifiedName (self, *args, **kwargs):
      '''getQualifiedName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getRoot (self, *args, **kwargs):
      '''getRoot(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getSelf (self, *args, **kwargs):
      '''getSelf(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getSourceUri (self, *args, **kwargs):
      '''getSourceUri(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getTarget (self, *args, **kwargs):
      '''getTarget(self: MaterialX.PyMaterialXCore.InterfaceElement) -> str
'''
    ...
    def getToken (self, *args, **kwargs):
      '''getToken(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> MaterialX.PyMaterialXCore.Token
'''
    ...
    def getTokenValue (self, *args, **kwargs):
      '''getTokenValue(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> str
'''
    ...
    def getTokens (self, *args, **kwargs):
      '''getTokens(self: MaterialX.PyMaterialXCore.InterfaceElement) -> List[MaterialX.PyMaterialXCore.Token]
'''
    ...
    def getType (self, *args, **kwargs):
      '''getType(self: MaterialX.PyMaterialXCore.TypedElement) -> str
'''
    ...
    def getTypeDef (self, *args, **kwargs):
      '''getTypeDef(self: MaterialX.PyMaterialXCore.TypedElement) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def getUpstreamEdge (self, *args, **kwargs):
      '''getUpstreamEdge(self: MaterialX.PyMaterialXCore.Element, index: int = 0) -> MaterialX_v1_38_8::Edge
'''
    ...
    def getUpstreamEdgeCount (self, *args, **kwargs):
      '''getUpstreamEdgeCount(self: MaterialX.PyMaterialXCore.Element) -> int
'''
    ...
    def getUpstreamElement (self, *args, **kwargs):
      '''getUpstreamElement(self: MaterialX.PyMaterialXCore.Element, index: int = 0) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getVersionIntegers (self, *args, **kwargs):
      '''getVersionIntegers(self: MaterialX.PyMaterialXCore.InterfaceElement) -> Tuple[int, int]
'''
    ...
    def getVersionString (self, *args, **kwargs):
      '''getVersionString(self: MaterialX.PyMaterialXCore.InterfaceElement) -> str
'''
    ...
    def hasAttribute (self, *args, **kwargs):
      '''hasAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> bool
'''
    ...
    def hasColorSpace (self, *args, **kwargs):
      '''hasColorSpace(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasExactInputMatch (self, *args, **kwargs):
      '''hasExactInputMatch(self: MaterialX.PyMaterialXCore.InterfaceElement, declaration: MaterialX.PyMaterialXCore.InterfaceElement, message: str = None) -> bool
'''
    ...
    def hasFilePrefix (self, *args, **kwargs):
      '''hasFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasGeomPrefix (self, *args, **kwargs):
      '''hasGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritString (self, *args, **kwargs):
      '''hasInheritString(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritanceCycle (self, *args, **kwargs):
      '''hasInheritanceCycle(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritedBase (self, *args, **kwargs):
      '''hasInheritedBase(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasNamespace (self, *args, **kwargs):
      '''hasNamespace(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasNodeDefString (self, *args, **kwargs):
      '''hasNodeDefString(self: MaterialX.PyMaterialXCore.InterfaceElement) -> bool
'''
    ...
    def hasSourceUri (self, *args, **kwargs):
      '''hasSourceUri(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasTarget (self, *args, **kwargs):
      '''hasTarget(self: MaterialX.PyMaterialXCore.InterfaceElement) -> bool
'''
    ...
    def hasType (self, *args, **kwargs):
      '''hasType(self: MaterialX.PyMaterialXCore.TypedElement) -> bool
'''
    ...
    def hasVersionString (self, *args, **kwargs):
      '''hasVersionString(self: MaterialX.PyMaterialXCore.InterfaceElement) -> bool
'''
    ...
    def isA (self, elementClass, category=''):
      '''Return True if this element is an instance of the given subclass.
       If a category string is specified, then both subclass and category
       matches are required.'''
    ...
    def isMultiOutputType (self, *args, **kwargs):
      '''isMultiOutputType(self: MaterialX.PyMaterialXCore.TypedElement) -> bool
'''
    ...
    def removeAttribute (self, *args, **kwargs):
      '''removeAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def removeChild (self, *args, **kwargs):
      '''removeChild(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def removeChildOfType (self, elementClass, name):
      '''Remove the typed child element, if any, with the given name.'''
    ...
    def removeInput (self, *args, **kwargs):
      '''removeInput(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> None
'''
    ...
    def removeOutput (self, *args, **kwargs):
      '''removeOutput(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> None
'''
    ...
    def removeToken (self, *args, **kwargs):
      '''removeToken(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> None
'''
    ...
    def setAttribute (self, *args, **kwargs):
      '''setAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str, arg1: str) -> None
'''
    ...
    def setCategory (self, *args, **kwargs):
      '''setCategory(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setChildIndex (self, *args, **kwargs):
      '''setChildIndex(self: MaterialX.PyMaterialXCore.Element, arg0: str, arg1: int) -> None
'''
    ...
    def setColorSpace (self, *args, **kwargs):
      '''setColorSpace(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setConnectedOutput (self, *args, **kwargs):
      '''setConnectedOutput(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str, arg1: MaterialX.PyMaterialXCore.Output) -> None
'''
    ...
    def setDefaultVersion (self, *args, **kwargs):
      '''setDefaultVersion(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: bool) -> None
'''
    ...
    def setDocString (self, *args, **kwargs):
      '''setDocString(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setFilePrefix (self, *args, **kwargs):
      '''setFilePrefix(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setGeomPrefix (self, *args, **kwargs):
      '''setGeomPrefix(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setInheritString (self, *args, **kwargs):
      '''setInheritString(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setInheritsFrom (self, *args, **kwargs):
      '''setInheritsFrom(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def setInputValue (self, name, value, typeString=''):
      '''Set the typed value of an input by its name, creating a child element
       to hold the input if needed.'''
    ...
    def setName (self, *args, **kwargs):
      '''setName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setNamespace (self, *args, **kwargs):
      '''setNamespace(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setNodeDefString (self, *args, **kwargs):
      '''setNodeDefString(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> None
'''
    ...
    def setParameterValue (self, name, value, typeString=''):
      '''(Deprecated) Set the typed value of a parameter by its name.'''
    ...
    def setSourceUri (self, *args, **kwargs):
      '''setSourceUri(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setTarget (self, *args, **kwargs):
      '''setTarget(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> None
'''
    ...
    def setTokenValue (self, *args, **kwargs):
      '''setTokenValue(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str, arg1: str) -> MaterialX.PyMaterialXCore.Token
'''
    ...
    def setType (self, *args, **kwargs):
      '''setType(self: MaterialX.PyMaterialXCore.TypedElement, arg0: str) -> None
'''
    ...
    def setVersionIntegers (self, *args, **kwargs):
      '''setVersionIntegers(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: int, arg1: int) -> None
'''
    ...
    def setVersionString (self, *args, **kwargs):
      '''setVersionString(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> None
'''
    ...
    def traverseGraph (self, *args, **kwargs):
      '''traverseGraph(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::GraphIterator
'''
    ...
    def traverseInheritance (self, *args, **kwargs):
      '''traverseInheritance(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::InheritanceIterator
'''
    ...
    def traverseTree (self, *args, **kwargs):
      '''traverseTree(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::TreeIterator
'''
    ...
    def validate (self, *args, **kwargs):
      '''validate(self: MaterialX.PyMaterialXCore.Element) -> Tuple[bool, str]
'''
    ...

def LIGHT_SHADER_TYPE_STRING (*args):
      '''

'''      
    ...

def LinearUnitConverter (*args):
      '''

'''      
    ...

class LinearUnitConverter:
    def convert (self, *args, **kwargs):
      '''convert(*args, **kwargs)
Overloaded function.

1. convert(self: MaterialX.PyMaterialXCore.LinearUnitConverter, arg0: float, arg1: str, arg2: str) -> float

2. convert(self: MaterialX.PyMaterialXCore.LinearUnitConverter, arg0: MaterialX.PyMaterialXCore.Vector2, arg1: str, arg2: str) -> MaterialX.PyMaterialXCore.Vector2

3. convert(self: MaterialX.PyMaterialXCore.LinearUnitConverter, arg0: MaterialX.PyMaterialXCore.Vector3, arg1: str, arg2: str) -> MaterialX.PyMaterialXCore.Vector3

4. convert(self: MaterialX.PyMaterialXCore.LinearUnitConverter, arg0: MaterialX.PyMaterialXCore.Vector4, arg1: str, arg2: str) -> MaterialX.PyMaterialXCore.Vector4
'''
    ...
    def create (self, *args, **kwargs):
      '''create(arg0: MaterialX.PyMaterialXCore.UnitTypeDef) -> MaterialX.PyMaterialXCore.LinearUnitConverter
'''
    ...
    def getUnitAsInteger (self, *args, **kwargs):
      '''getUnitAsInteger(self: MaterialX.PyMaterialXCore.LinearUnitConverter, arg0: str) -> int
'''
    ...
    def getUnitFromInteger (self, *args, **kwargs):
      '''getUnitFromInteger(self: MaterialX.PyMaterialXCore.LinearUnitConverter, arg0: int) -> str
'''
    ...
    def getUnitScale (self, *args, **kwargs):
      '''getUnitScale(self: MaterialX.PyMaterialXCore.LinearUnitConverter) -> Dict[str, float]
'''
    ...

def Look (*args):
      '''

'''      
    ...

class Look:
    def CATEGORY (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def _addChildCollection (self, *args, **kwargs):
      '''_addChildCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Collection
'''
    ...
    def _addChildDocument (self, *args, **kwargs):
      '''_addChildDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Document
'''
    ...
    def _addChildGeomInfo (self, *args, **kwargs):
      '''_addChildGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomInfo
'''
    ...
    def _addChildGeomProp (self, *args, **kwargs):
      '''_addChildGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def _addChildImplementation (self, *args, **kwargs):
      '''_addChildImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Implementation
'''
    ...
    def _addChildLook (self, *args, **kwargs):
      '''_addChildLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Look
'''
    ...
    def _addChildMaterialAssign (self, *args, **kwargs):
      '''_addChildMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::MaterialAssign
'''
    ...
    def _addChildNode (self, *args, **kwargs):
      '''_addChildNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Node
'''
    ...
    def _addChildNodeDef (self, *args, **kwargs):
      '''_addChildNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeDef
'''
    ...
    def _addChildNodeGraph (self, *args, **kwargs):
      '''_addChildNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeGraph
'''
    ...
    def _addChildProperty (self, *args, **kwargs):
      '''_addChildProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Property
'''
    ...
    def _addChildPropertySet (self, *args, **kwargs):
      '''_addChildPropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySet
'''
    ...
    def _addChildPropertySetAssign (self, *args, **kwargs):
      '''_addChildPropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySetAssign
'''
    ...
    def _addChildToken (self, *args, **kwargs):
      '''_addChildToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Token
'''
    ...
    def _addChildTypeDef (self, *args, **kwargs):
      '''_addChildTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def _addChildVisibility (self, *args, **kwargs):
      '''_addChildVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Visibility
'''
    ...
    def _getChild (self, *args, **kwargs):
      '''_getChild(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def _getChildOfTypeCollection (self, *args, **kwargs):
      '''_getChildOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Collection
'''
    ...
    def _getChildOfTypeDocument (self, *args, **kwargs):
      '''_getChildOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Document
'''
    ...
    def _getChildOfTypeGeomInfo (self, *args, **kwargs):
      '''_getChildOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomInfo
'''
    ...
    def _getChildOfTypeGeomProp (self, *args, **kwargs):
      '''_getChildOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def _getChildOfTypeImplementation (self, *args, **kwargs):
      '''_getChildOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Implementation
'''
    ...
    def _getChildOfTypeLook (self, *args, **kwargs):
      '''_getChildOfTypeLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Look
'''
    ...
    def _getChildOfTypeMaterialAssign (self, *args, **kwargs):
      '''_getChildOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::MaterialAssign
'''
    ...
    def _getChildOfTypeNode (self, *args, **kwargs):
      '''_getChildOfTypeNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Node
'''
    ...
    def _getChildOfTypeNodeDef (self, *args, **kwargs):
      '''_getChildOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeDef
'''
    ...
    def _getChildOfTypeNodeGraph (self, *args, **kwargs):
      '''_getChildOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeGraph
'''
    ...
    def _getChildOfTypeProperty (self, *args, **kwargs):
      '''_getChildOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Property
'''
    ...
    def _getChildOfTypePropertySet (self, *args, **kwargs):
      '''_getChildOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySet
'''
    ...
    def _getChildOfTypePropertySetAssign (self, *args, **kwargs):
      '''_getChildOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySetAssign
'''
    ...
    def _getChildOfTypeToken (self, *args, **kwargs):
      '''_getChildOfTypeToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Token
'''
    ...
    def _getChildOfTypeTypeDef (self, *args, **kwargs):
      '''_getChildOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def _getChildOfTypeVisibility (self, *args, **kwargs):
      '''_getChildOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Visibility
'''
    ...
    def _getChildrenOfTypeCollection (self, *args, **kwargs):
      '''_getChildrenOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Collection]
'''
    ...
    def _getChildrenOfTypeDocument (self, *args, **kwargs):
      '''_getChildrenOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Document]
'''
    ...
    def _getChildrenOfTypeGeomInfo (self, *args, **kwargs):
      '''_getChildrenOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::GeomInfo]
'''
    ...
    def _getChildrenOfTypeGeomProp (self, *args, **kwargs):
      '''_getChildrenOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::GeomProp]
'''
    ...
    def _getChildrenOfTypeImplementation (self, *args, **kwargs):
      '''_getChildrenOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Implementation]
'''
    ...
    def _getChildrenOfTypeLook (self, *args, **kwargs):
      '''_getChildrenOfTypeLook(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Look]
'''
    ...
    def _getChildrenOfTypeMaterialAssign (self, *args, **kwargs):
      '''_getChildrenOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::MaterialAssign]
'''
    ...
    def _getChildrenOfTypeNode (self, *args, **kwargs):
      '''_getChildrenOfTypeNode(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Node]
'''
    ...
    def _getChildrenOfTypeNodeDef (self, *args, **kwargs):
      '''_getChildrenOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::NodeDef]
'''
    ...
    def _getChildrenOfTypeNodeGraph (self, *args, **kwargs):
      '''_getChildrenOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::NodeGraph]
'''
    ...
    def _getChildrenOfTypeProperty (self, *args, **kwargs):
      '''_getChildrenOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Property]
'''
    ...
    def _getChildrenOfTypePropertySet (self, *args, **kwargs):
      '''_getChildrenOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::PropertySet]
'''
    ...
    def _getChildrenOfTypePropertySetAssign (self, *args, **kwargs):
      '''_getChildrenOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::PropertySetAssign]
'''
    ...
    def _getChildrenOfTypeToken (self, *args, **kwargs):
      '''_getChildrenOfTypeToken(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Token]
'''
    ...
    def _getChildrenOfTypeTypeDef (self, *args, **kwargs):
      '''_getChildrenOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::TypeDef]
'''
    ...
    def _getChildrenOfTypeVisibility (self, *args, **kwargs):
      '''_getChildrenOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Visibility]
'''
    ...
    def _removeChildOfTypeCollection (self, *args, **kwargs):
      '''_removeChildOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeDocument (self, *args, **kwargs):
      '''_removeChildOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeGeomInfo (self, *args, **kwargs):
      '''_removeChildOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeGeomProp (self, *args, **kwargs):
      '''_removeChildOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeImplementation (self, *args, **kwargs):
      '''_removeChildOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeLook (self, *args, **kwargs):
      '''_removeChildOfTypeLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeMaterialAssign (self, *args, **kwargs):
      '''_removeChildOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNode (self, *args, **kwargs):
      '''_removeChildOfTypeNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNodeDef (self, *args, **kwargs):
      '''_removeChildOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNodeGraph (self, *args, **kwargs):
      '''_removeChildOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeProperty (self, *args, **kwargs):
      '''_removeChildOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypePropertySet (self, *args, **kwargs):
      '''_removeChildOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypePropertySetAssign (self, *args, **kwargs):
      '''_removeChildOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeToken (self, *args, **kwargs):
      '''_removeChildOfTypeToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeTypeDef (self, *args, **kwargs):
      '''_removeChildOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeVisibility (self, *args, **kwargs):
      '''_removeChildOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def addChild (self, elementClass, name, typeString=''):
      '''Add a child element of the given subclass, name, and optional type string.'''
    ...
    def addChildOfCategory (self, *args, **kwargs):
      '''addChildOfCategory(self: MaterialX.PyMaterialXCore.Element, category: str, name: str = '') -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def addMaterialAssign (self, *args, **kwargs):
      '''addMaterialAssign(self: MaterialX.PyMaterialXCore.Look, name: str = '', material: str = '') -> MaterialX_v1_38_8::MaterialAssign
'''
    ...
    def addPropertyAssign (self, *args, **kwargs):
      '''addPropertyAssign(self: MaterialX.PyMaterialXCore.Look, name: str = '') -> MaterialX.PyMaterialXCore.PropertyAssign
'''
    ...
    def addPropertySetAssign (self, *args, **kwargs):
      '''addPropertySetAssign(self: MaterialX.PyMaterialXCore.Look, name: str = '') -> MaterialX.PyMaterialXCore.PropertySetAssign
'''
    ...
    def addVariantAssign (self, *args, **kwargs):
      '''addVariantAssign(self: MaterialX.PyMaterialXCore.Look, name: str = '') -> MaterialX_v1_38_8::VariantAssign
'''
    ...
    def addVisibility (self, *args, **kwargs):
      '''addVisibility(self: MaterialX.PyMaterialXCore.Look, name: str = '') -> MaterialX_v1_38_8::Visibility
'''
    ...
    def asString (self, *args, **kwargs):
      '''asString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def changeChildCategory (self, *args, **kwargs):
      '''changeChildCategory(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element, arg1: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def clearContent (self, *args, **kwargs):
      '''clearContent(self: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def copyContentFrom (self, *args, **kwargs):
      '''copyContentFrom(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def createStringResolver (self, *args, **kwargs):
      '''createStringResolver(self: MaterialX.PyMaterialXCore.Element, geom: str = '') -> MaterialX_v1_38_8::StringResolver
'''
    ...
    def createValidChildName (self, *args, **kwargs):
      '''createValidChildName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getActiveColorSpace (self, *args, **kwargs):
      '''getActiveColorSpace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveFilePrefix (self, *args, **kwargs):
      '''getActiveFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveGeomPrefix (self, *args, **kwargs):
      '''getActiveGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveMaterialAssigns (self, *args, **kwargs):
      '''getActiveMaterialAssigns(self: MaterialX.PyMaterialXCore.Look) -> List[MaterialX_v1_38_8::MaterialAssign]
'''
    ...
    def getActivePropertyAssigns (self, *args, **kwargs):
      '''getActivePropertyAssigns(self: MaterialX.PyMaterialXCore.Look) -> List[MaterialX.PyMaterialXCore.PropertyAssign]
'''
    ...
    def getActivePropertySetAssigns (self, *args, **kwargs):
      '''getActivePropertySetAssigns(self: MaterialX.PyMaterialXCore.Look) -> List[MaterialX.PyMaterialXCore.PropertySetAssign]
'''
    ...
    def getActiveSourceUri (self, *args, **kwargs):
      '''getActiveSourceUri(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveVariantAssigns (self, *args, **kwargs):
      '''getActiveVariantAssigns(self: MaterialX.PyMaterialXCore.Look) -> List[MaterialX_v1_38_8::VariantAssign]
'''
    ...
    def getActiveVisibilities (self, *args, **kwargs):
      '''getActiveVisibilities(self: MaterialX.PyMaterialXCore.Look) -> List[MaterialX_v1_38_8::Visibility]
'''
    ...
    def getAttribute (self, *args, **kwargs):
      '''getAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getAttributeNames (self, *args, **kwargs):
      '''getAttributeNames(self: MaterialX.PyMaterialXCore.Element) -> List[str]
'''
    ...
    def getCategory (self, *args, **kwargs):
      '''getCategory(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getChild (self, name):
      '''Return the child element, if any, with the given name.'''
    ...
    def getChildIndex (self, *args, **kwargs):
      '''getChildIndex(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> int
'''
    ...
    def getChildOfType (self, elementClass, name):
      '''Return the child element, if any, with the given name and subclass.'''
    ...
    def getChildren (self, *args, **kwargs):
      '''getChildren(self: MaterialX.PyMaterialXCore.Element) -> List[MaterialX.PyMaterialXCore.Element]
'''
    ...
    def getChildrenOfType (self, elementClass):
      '''Return a list of all child elements that are instances of the given type.
       The returned list maintains the order in which children were added.'''
    ...
    def getColorSpace (self, *args, **kwargs):
      '''getColorSpace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getDescendant (self, *args, **kwargs):
      '''getDescendant(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getDocString (self, *args, **kwargs):
      '''getDocString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getDocument (self, *args, **kwargs):
      '''getDocument(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::Document
'''
    ...
    def getFilePrefix (self, *args, **kwargs):
      '''getFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getGeomPrefix (self, *args, **kwargs):
      '''getGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getInheritString (self, *args, **kwargs):
      '''getInheritString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getInheritsFrom (self, *args, **kwargs):
      '''getInheritsFrom(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getMaterialAssign (self, *args, **kwargs):
      '''getMaterialAssign(self: MaterialX.PyMaterialXCore.Look, arg0: str) -> MaterialX_v1_38_8::MaterialAssign
'''
    ...
    def getMaterialAssigns (self, *args, **kwargs):
      '''getMaterialAssigns(self: MaterialX.PyMaterialXCore.Look) -> List[MaterialX_v1_38_8::MaterialAssign]
'''
    ...
    def getName (self, *args, **kwargs):
      '''getName(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getNamePath (self, *args, **kwargs):
      '''getNamePath(self: MaterialX.PyMaterialXCore.Element, relativeTo: MaterialX.PyMaterialXCore.Element = None) -> str
'''
    ...
    def getNamespace (self, *args, **kwargs):
      '''getNamespace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getParent (self, *args, **kwargs):
      '''getParent(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getPropertyAssign (self, *args, **kwargs):
      '''getPropertyAssign(self: MaterialX.PyMaterialXCore.Look, arg0: str) -> MaterialX.PyMaterialXCore.PropertyAssign
'''
    ...
    def getPropertyAssigns (self, *args, **kwargs):
      '''getPropertyAssigns(self: MaterialX.PyMaterialXCore.Look) -> List[MaterialX.PyMaterialXCore.PropertyAssign]
'''
    ...
    def getPropertySetAssign (self, *args, **kwargs):
      '''getPropertySetAssign(self: MaterialX.PyMaterialXCore.Look, arg0: str) -> MaterialX.PyMaterialXCore.PropertySetAssign
'''
    ...
    def getPropertySetAssigns (self, *args, **kwargs):
      '''getPropertySetAssigns(self: MaterialX.PyMaterialXCore.Look) -> List[MaterialX.PyMaterialXCore.PropertySetAssign]
'''
    ...
    def getQualifiedName (self, *args, **kwargs):
      '''getQualifiedName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getRoot (self, *args, **kwargs):
      '''getRoot(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getSelf (self, *args, **kwargs):
      '''getSelf(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getSourceUri (self, *args, **kwargs):
      '''getSourceUri(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getUpstreamEdge (self, *args, **kwargs):
      '''getUpstreamEdge(self: MaterialX.PyMaterialXCore.Element, index: int = 0) -> MaterialX_v1_38_8::Edge
'''
    ...
    def getUpstreamEdgeCount (self, *args, **kwargs):
      '''getUpstreamEdgeCount(self: MaterialX.PyMaterialXCore.Element) -> int
'''
    ...
    def getUpstreamElement (self, *args, **kwargs):
      '''getUpstreamElement(self: MaterialX.PyMaterialXCore.Element, index: int = 0) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getVariantAssign (self, *args, **kwargs):
      '''getVariantAssign(self: MaterialX.PyMaterialXCore.Look, arg0: str) -> MaterialX_v1_38_8::VariantAssign
'''
    ...
    def getVariantAssigns (self, *args, **kwargs):
      '''getVariantAssigns(self: MaterialX.PyMaterialXCore.Look) -> List[MaterialX_v1_38_8::VariantAssign]
'''
    ...
    def getVisibilities (self, *args, **kwargs):
      '''getVisibilities(self: MaterialX.PyMaterialXCore.Look) -> List[MaterialX_v1_38_8::Visibility]
'''
    ...
    def getVisibility (self, *args, **kwargs):
      '''getVisibility(self: MaterialX.PyMaterialXCore.Look, arg0: str) -> MaterialX_v1_38_8::Visibility
'''
    ...
    def hasAttribute (self, *args, **kwargs):
      '''hasAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> bool
'''
    ...
    def hasColorSpace (self, *args, **kwargs):
      '''hasColorSpace(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasFilePrefix (self, *args, **kwargs):
      '''hasFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasGeomPrefix (self, *args, **kwargs):
      '''hasGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritString (self, *args, **kwargs):
      '''hasInheritString(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritanceCycle (self, *args, **kwargs):
      '''hasInheritanceCycle(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritedBase (self, *args, **kwargs):
      '''hasInheritedBase(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasNamespace (self, *args, **kwargs):
      '''hasNamespace(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasSourceUri (self, *args, **kwargs):
      '''hasSourceUri(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def isA (self, elementClass, category=''):
      '''Return True if this element is an instance of the given subclass.
       If a category string is specified, then both subclass and category
       matches are required.'''
    ...
    def removeAttribute (self, *args, **kwargs):
      '''removeAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def removeChild (self, *args, **kwargs):
      '''removeChild(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def removeChildOfType (self, elementClass, name):
      '''Remove the typed child element, if any, with the given name.'''
    ...
    def removeMaterialAssign (self, *args, **kwargs):
      '''removeMaterialAssign(self: MaterialX.PyMaterialXCore.Look, arg0: str) -> None
'''
    ...
    def removePropertyAssign (self, *args, **kwargs):
      '''removePropertyAssign(self: MaterialX.PyMaterialXCore.Look, arg0: str) -> None
'''
    ...
    def removePropertySetAssign (self, *args, **kwargs):
      '''removePropertySetAssign(self: MaterialX.PyMaterialXCore.Look, arg0: str) -> None
'''
    ...
    def removeVariantAssign (self, *args, **kwargs):
      '''removeVariantAssign(self: MaterialX.PyMaterialXCore.Look, arg0: str) -> None
'''
    ...
    def removeVisibility (self, *args, **kwargs):
      '''removeVisibility(self: MaterialX.PyMaterialXCore.Look, arg0: str) -> None
'''
    ...
    def setAttribute (self, *args, **kwargs):
      '''setAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str, arg1: str) -> None
'''
    ...
    def setCategory (self, *args, **kwargs):
      '''setCategory(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setChildIndex (self, *args, **kwargs):
      '''setChildIndex(self: MaterialX.PyMaterialXCore.Element, arg0: str, arg1: int) -> None
'''
    ...
    def setColorSpace (self, *args, **kwargs):
      '''setColorSpace(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setDocString (self, *args, **kwargs):
      '''setDocString(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setFilePrefix (self, *args, **kwargs):
      '''setFilePrefix(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setGeomPrefix (self, *args, **kwargs):
      '''setGeomPrefix(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setInheritString (self, *args, **kwargs):
      '''setInheritString(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setInheritsFrom (self, *args, **kwargs):
      '''setInheritsFrom(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def setName (self, *args, **kwargs):
      '''setName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setNamespace (self, *args, **kwargs):
      '''setNamespace(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setSourceUri (self, *args, **kwargs):
      '''setSourceUri(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def traverseGraph (self, *args, **kwargs):
      '''traverseGraph(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::GraphIterator
'''
    ...
    def traverseInheritance (self, *args, **kwargs):
      '''traverseInheritance(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::InheritanceIterator
'''
    ...
    def traverseTree (self, *args, **kwargs):
      '''traverseTree(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::TreeIterator
'''
    ...
    def validate (self, *args, **kwargs):
      '''validate(self: MaterialX.PyMaterialXCore.Element) -> Tuple[bool, str]
'''
    ...

def LookGroup (*args):
      '''

'''      
    ...

class LookGroup:
    def ACTIVE_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def CATEGORY (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def LOOKS_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def _addChildCollection (self, *args, **kwargs):
      '''_addChildCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Collection
'''
    ...
    def _addChildDocument (self, *args, **kwargs):
      '''_addChildDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Document
'''
    ...
    def _addChildGeomInfo (self, *args, **kwargs):
      '''_addChildGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomInfo
'''
    ...
    def _addChildGeomProp (self, *args, **kwargs):
      '''_addChildGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def _addChildImplementation (self, *args, **kwargs):
      '''_addChildImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Implementation
'''
    ...
    def _addChildLook (self, *args, **kwargs):
      '''_addChildLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Look
'''
    ...
    def _addChildMaterialAssign (self, *args, **kwargs):
      '''_addChildMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::MaterialAssign
'''
    ...
    def _addChildNode (self, *args, **kwargs):
      '''_addChildNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Node
'''
    ...
    def _addChildNodeDef (self, *args, **kwargs):
      '''_addChildNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeDef
'''
    ...
    def _addChildNodeGraph (self, *args, **kwargs):
      '''_addChildNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeGraph
'''
    ...
    def _addChildProperty (self, *args, **kwargs):
      '''_addChildProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Property
'''
    ...
    def _addChildPropertySet (self, *args, **kwargs):
      '''_addChildPropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySet
'''
    ...
    def _addChildPropertySetAssign (self, *args, **kwargs):
      '''_addChildPropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySetAssign
'''
    ...
    def _addChildToken (self, *args, **kwargs):
      '''_addChildToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Token
'''
    ...
    def _addChildTypeDef (self, *args, **kwargs):
      '''_addChildTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def _addChildVisibility (self, *args, **kwargs):
      '''_addChildVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Visibility
'''
    ...
    def _getChild (self, *args, **kwargs):
      '''_getChild(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def _getChildOfTypeCollection (self, *args, **kwargs):
      '''_getChildOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Collection
'''
    ...
    def _getChildOfTypeDocument (self, *args, **kwargs):
      '''_getChildOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Document
'''
    ...
    def _getChildOfTypeGeomInfo (self, *args, **kwargs):
      '''_getChildOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomInfo
'''
    ...
    def _getChildOfTypeGeomProp (self, *args, **kwargs):
      '''_getChildOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def _getChildOfTypeImplementation (self, *args, **kwargs):
      '''_getChildOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Implementation
'''
    ...
    def _getChildOfTypeLook (self, *args, **kwargs):
      '''_getChildOfTypeLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Look
'''
    ...
    def _getChildOfTypeMaterialAssign (self, *args, **kwargs):
      '''_getChildOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::MaterialAssign
'''
    ...
    def _getChildOfTypeNode (self, *args, **kwargs):
      '''_getChildOfTypeNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Node
'''
    ...
    def _getChildOfTypeNodeDef (self, *args, **kwargs):
      '''_getChildOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeDef
'''
    ...
    def _getChildOfTypeNodeGraph (self, *args, **kwargs):
      '''_getChildOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeGraph
'''
    ...
    def _getChildOfTypeProperty (self, *args, **kwargs):
      '''_getChildOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Property
'''
    ...
    def _getChildOfTypePropertySet (self, *args, **kwargs):
      '''_getChildOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySet
'''
    ...
    def _getChildOfTypePropertySetAssign (self, *args, **kwargs):
      '''_getChildOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySetAssign
'''
    ...
    def _getChildOfTypeToken (self, *args, **kwargs):
      '''_getChildOfTypeToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Token
'''
    ...
    def _getChildOfTypeTypeDef (self, *args, **kwargs):
      '''_getChildOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def _getChildOfTypeVisibility (self, *args, **kwargs):
      '''_getChildOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Visibility
'''
    ...
    def _getChildrenOfTypeCollection (self, *args, **kwargs):
      '''_getChildrenOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Collection]
'''
    ...
    def _getChildrenOfTypeDocument (self, *args, **kwargs):
      '''_getChildrenOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Document]
'''
    ...
    def _getChildrenOfTypeGeomInfo (self, *args, **kwargs):
      '''_getChildrenOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::GeomInfo]
'''
    ...
    def _getChildrenOfTypeGeomProp (self, *args, **kwargs):
      '''_getChildrenOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::GeomProp]
'''
    ...
    def _getChildrenOfTypeImplementation (self, *args, **kwargs):
      '''_getChildrenOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Implementation]
'''
    ...
    def _getChildrenOfTypeLook (self, *args, **kwargs):
      '''_getChildrenOfTypeLook(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Look]
'''
    ...
    def _getChildrenOfTypeMaterialAssign (self, *args, **kwargs):
      '''_getChildrenOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::MaterialAssign]
'''
    ...
    def _getChildrenOfTypeNode (self, *args, **kwargs):
      '''_getChildrenOfTypeNode(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Node]
'''
    ...
    def _getChildrenOfTypeNodeDef (self, *args, **kwargs):
      '''_getChildrenOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::NodeDef]
'''
    ...
    def _getChildrenOfTypeNodeGraph (self, *args, **kwargs):
      '''_getChildrenOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::NodeGraph]
'''
    ...
    def _getChildrenOfTypeProperty (self, *args, **kwargs):
      '''_getChildrenOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Property]
'''
    ...
    def _getChildrenOfTypePropertySet (self, *args, **kwargs):
      '''_getChildrenOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::PropertySet]
'''
    ...
    def _getChildrenOfTypePropertySetAssign (self, *args, **kwargs):
      '''_getChildrenOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::PropertySetAssign]
'''
    ...
    def _getChildrenOfTypeToken (self, *args, **kwargs):
      '''_getChildrenOfTypeToken(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Token]
'''
    ...
    def _getChildrenOfTypeTypeDef (self, *args, **kwargs):
      '''_getChildrenOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::TypeDef]
'''
    ...
    def _getChildrenOfTypeVisibility (self, *args, **kwargs):
      '''_getChildrenOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Visibility]
'''
    ...
    def _removeChildOfTypeCollection (self, *args, **kwargs):
      '''_removeChildOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeDocument (self, *args, **kwargs):
      '''_removeChildOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeGeomInfo (self, *args, **kwargs):
      '''_removeChildOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeGeomProp (self, *args, **kwargs):
      '''_removeChildOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeImplementation (self, *args, **kwargs):
      '''_removeChildOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeLook (self, *args, **kwargs):
      '''_removeChildOfTypeLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeMaterialAssign (self, *args, **kwargs):
      '''_removeChildOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNode (self, *args, **kwargs):
      '''_removeChildOfTypeNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNodeDef (self, *args, **kwargs):
      '''_removeChildOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNodeGraph (self, *args, **kwargs):
      '''_removeChildOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeProperty (self, *args, **kwargs):
      '''_removeChildOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypePropertySet (self, *args, **kwargs):
      '''_removeChildOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypePropertySetAssign (self, *args, **kwargs):
      '''_removeChildOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeToken (self, *args, **kwargs):
      '''_removeChildOfTypeToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeTypeDef (self, *args, **kwargs):
      '''_removeChildOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeVisibility (self, *args, **kwargs):
      '''_removeChildOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def addChild (self, elementClass, name, typeString=''):
      '''Add a child element of the given subclass, name, and optional type string.'''
    ...
    def addChildOfCategory (self, *args, **kwargs):
      '''addChildOfCategory(self: MaterialX.PyMaterialXCore.Element, category: str, name: str = '') -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def asString (self, *args, **kwargs):
      '''asString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def changeChildCategory (self, *args, **kwargs):
      '''changeChildCategory(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element, arg1: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def clearContent (self, *args, **kwargs):
      '''clearContent(self: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def copyContentFrom (self, *args, **kwargs):
      '''copyContentFrom(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def createStringResolver (self, *args, **kwargs):
      '''createStringResolver(self: MaterialX.PyMaterialXCore.Element, geom: str = '') -> MaterialX_v1_38_8::StringResolver
'''
    ...
    def createValidChildName (self, *args, **kwargs):
      '''createValidChildName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getActiveColorSpace (self, *args, **kwargs):
      '''getActiveColorSpace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveFilePrefix (self, *args, **kwargs):
      '''getActiveFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveGeomPrefix (self, *args, **kwargs):
      '''getActiveGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveLook (self, *args, **kwargs):
      '''getActiveLook(self: MaterialX.PyMaterialXCore.LookGroup) -> str
'''
    ...
    def getActiveSourceUri (self, *args, **kwargs):
      '''getActiveSourceUri(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getAttribute (self, *args, **kwargs):
      '''getAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getAttributeNames (self, *args, **kwargs):
      '''getAttributeNames(self: MaterialX.PyMaterialXCore.Element) -> List[str]
'''
    ...
    def getCategory (self, *args, **kwargs):
      '''getCategory(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getChild (self, name):
      '''Return the child element, if any, with the given name.'''
    ...
    def getChildIndex (self, *args, **kwargs):
      '''getChildIndex(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> int
'''
    ...
    def getChildOfType (self, elementClass, name):
      '''Return the child element, if any, with the given name and subclass.'''
    ...
    def getChildren (self, *args, **kwargs):
      '''getChildren(self: MaterialX.PyMaterialXCore.Element) -> List[MaterialX.PyMaterialXCore.Element]
'''
    ...
    def getChildrenOfType (self, elementClass):
      '''Return a list of all child elements that are instances of the given type.
       The returned list maintains the order in which children were added.'''
    ...
    def getColorSpace (self, *args, **kwargs):
      '''getColorSpace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getDescendant (self, *args, **kwargs):
      '''getDescendant(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getDocString (self, *args, **kwargs):
      '''getDocString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getDocument (self, *args, **kwargs):
      '''getDocument(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::Document
'''
    ...
    def getFilePrefix (self, *args, **kwargs):
      '''getFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getGeomPrefix (self, *args, **kwargs):
      '''getGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getInheritString (self, *args, **kwargs):
      '''getInheritString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getInheritsFrom (self, *args, **kwargs):
      '''getInheritsFrom(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getLooks (self, *args, **kwargs):
      '''getLooks(self: MaterialX.PyMaterialXCore.LookGroup) -> str
'''
    ...
    def getName (self, *args, **kwargs):
      '''getName(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getNamePath (self, *args, **kwargs):
      '''getNamePath(self: MaterialX.PyMaterialXCore.Element, relativeTo: MaterialX.PyMaterialXCore.Element = None) -> str
'''
    ...
    def getNamespace (self, *args, **kwargs):
      '''getNamespace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getParent (self, *args, **kwargs):
      '''getParent(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getQualifiedName (self, *args, **kwargs):
      '''getQualifiedName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getRoot (self, *args, **kwargs):
      '''getRoot(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getSelf (self, *args, **kwargs):
      '''getSelf(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getSourceUri (self, *args, **kwargs):
      '''getSourceUri(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getUpstreamEdge (self, *args, **kwargs):
      '''getUpstreamEdge(self: MaterialX.PyMaterialXCore.Element, index: int = 0) -> MaterialX_v1_38_8::Edge
'''
    ...
    def getUpstreamEdgeCount (self, *args, **kwargs):
      '''getUpstreamEdgeCount(self: MaterialX.PyMaterialXCore.Element) -> int
'''
    ...
    def getUpstreamElement (self, *args, **kwargs):
      '''getUpstreamElement(self: MaterialX.PyMaterialXCore.Element, index: int = 0) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def hasAttribute (self, *args, **kwargs):
      '''hasAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> bool
'''
    ...
    def hasColorSpace (self, *args, **kwargs):
      '''hasColorSpace(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasFilePrefix (self, *args, **kwargs):
      '''hasFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasGeomPrefix (self, *args, **kwargs):
      '''hasGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritString (self, *args, **kwargs):
      '''hasInheritString(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritanceCycle (self, *args, **kwargs):
      '''hasInheritanceCycle(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritedBase (self, *args, **kwargs):
      '''hasInheritedBase(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasNamespace (self, *args, **kwargs):
      '''hasNamespace(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasSourceUri (self, *args, **kwargs):
      '''hasSourceUri(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def isA (self, elementClass, category=''):
      '''Return True if this element is an instance of the given subclass.
       If a category string is specified, then both subclass and category
       matches are required.'''
    ...
    def removeAttribute (self, *args, **kwargs):
      '''removeAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def removeChild (self, *args, **kwargs):
      '''removeChild(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def removeChildOfType (self, elementClass, name):
      '''Remove the typed child element, if any, with the given name.'''
    ...
    def setActiveLook (self, *args, **kwargs):
      '''setActiveLook(self: MaterialX.PyMaterialXCore.LookGroup, arg0: str) -> None
'''
    ...
    def setAttribute (self, *args, **kwargs):
      '''setAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str, arg1: str) -> None
'''
    ...
    def setCategory (self, *args, **kwargs):
      '''setCategory(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setChildIndex (self, *args, **kwargs):
      '''setChildIndex(self: MaterialX.PyMaterialXCore.Element, arg0: str, arg1: int) -> None
'''
    ...
    def setColorSpace (self, *args, **kwargs):
      '''setColorSpace(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setDocString (self, *args, **kwargs):
      '''setDocString(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setFilePrefix (self, *args, **kwargs):
      '''setFilePrefix(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setGeomPrefix (self, *args, **kwargs):
      '''setGeomPrefix(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setInheritString (self, *args, **kwargs):
      '''setInheritString(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setInheritsFrom (self, *args, **kwargs):
      '''setInheritsFrom(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def setLooks (self, *args, **kwargs):
      '''setLooks(self: MaterialX.PyMaterialXCore.LookGroup, arg0: str) -> None
'''
    ...
    def setName (self, *args, **kwargs):
      '''setName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setNamespace (self, *args, **kwargs):
      '''setNamespace(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setSourceUri (self, *args, **kwargs):
      '''setSourceUri(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def traverseGraph (self, *args, **kwargs):
      '''traverseGraph(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::GraphIterator
'''
    ...
    def traverseInheritance (self, *args, **kwargs):
      '''traverseInheritance(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::InheritanceIterator
'''
    ...
    def traverseTree (self, *args, **kwargs):
      '''traverseTree(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::TreeIterator
'''
    ...
    def validate (self, *args, **kwargs):
      '''validate(self: MaterialX.PyMaterialXCore.Element) -> Tuple[bool, str]
'''
    ...

def MATERIALX_SEARCH_PATH_ENV_VAR (*args):
      '''

'''      
    ...

def MATERIAL_TYPE_STRING (*args):
      '''

'''      
    ...

def MULTI_OUTPUT_TYPE_STRING (*args):
      '''

'''      
    ...

def MaterialAssign (*args):
      '''

'''      
    ...

class MaterialAssign:
    def CATEGORY (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def _addChildCollection (self, *args, **kwargs):
      '''_addChildCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Collection
'''
    ...
    def _addChildDocument (self, *args, **kwargs):
      '''_addChildDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Document
'''
    ...
    def _addChildGeomInfo (self, *args, **kwargs):
      '''_addChildGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomInfo
'''
    ...
    def _addChildGeomProp (self, *args, **kwargs):
      '''_addChildGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def _addChildImplementation (self, *args, **kwargs):
      '''_addChildImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Implementation
'''
    ...
    def _addChildLook (self, *args, **kwargs):
      '''_addChildLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Look
'''
    ...
    def _addChildMaterialAssign (self, *args, **kwargs):
      '''_addChildMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::MaterialAssign
'''
    ...
    def _addChildNode (self, *args, **kwargs):
      '''_addChildNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Node
'''
    ...
    def _addChildNodeDef (self, *args, **kwargs):
      '''_addChildNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeDef
'''
    ...
    def _addChildNodeGraph (self, *args, **kwargs):
      '''_addChildNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeGraph
'''
    ...
    def _addChildProperty (self, *args, **kwargs):
      '''_addChildProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Property
'''
    ...
    def _addChildPropertySet (self, *args, **kwargs):
      '''_addChildPropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySet
'''
    ...
    def _addChildPropertySetAssign (self, *args, **kwargs):
      '''_addChildPropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySetAssign
'''
    ...
    def _addChildToken (self, *args, **kwargs):
      '''_addChildToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Token
'''
    ...
    def _addChildTypeDef (self, *args, **kwargs):
      '''_addChildTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def _addChildVisibility (self, *args, **kwargs):
      '''_addChildVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Visibility
'''
    ...
    def _getChild (self, *args, **kwargs):
      '''_getChild(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def _getChildOfTypeCollection (self, *args, **kwargs):
      '''_getChildOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Collection
'''
    ...
    def _getChildOfTypeDocument (self, *args, **kwargs):
      '''_getChildOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Document
'''
    ...
    def _getChildOfTypeGeomInfo (self, *args, **kwargs):
      '''_getChildOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomInfo
'''
    ...
    def _getChildOfTypeGeomProp (self, *args, **kwargs):
      '''_getChildOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def _getChildOfTypeImplementation (self, *args, **kwargs):
      '''_getChildOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Implementation
'''
    ...
    def _getChildOfTypeLook (self, *args, **kwargs):
      '''_getChildOfTypeLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Look
'''
    ...
    def _getChildOfTypeMaterialAssign (self, *args, **kwargs):
      '''_getChildOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::MaterialAssign
'''
    ...
    def _getChildOfTypeNode (self, *args, **kwargs):
      '''_getChildOfTypeNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Node
'''
    ...
    def _getChildOfTypeNodeDef (self, *args, **kwargs):
      '''_getChildOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeDef
'''
    ...
    def _getChildOfTypeNodeGraph (self, *args, **kwargs):
      '''_getChildOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeGraph
'''
    ...
    def _getChildOfTypeProperty (self, *args, **kwargs):
      '''_getChildOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Property
'''
    ...
    def _getChildOfTypePropertySet (self, *args, **kwargs):
      '''_getChildOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySet
'''
    ...
    def _getChildOfTypePropertySetAssign (self, *args, **kwargs):
      '''_getChildOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySetAssign
'''
    ...
    def _getChildOfTypeToken (self, *args, **kwargs):
      '''_getChildOfTypeToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Token
'''
    ...
    def _getChildOfTypeTypeDef (self, *args, **kwargs):
      '''_getChildOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def _getChildOfTypeVisibility (self, *args, **kwargs):
      '''_getChildOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Visibility
'''
    ...
    def _getChildrenOfTypeCollection (self, *args, **kwargs):
      '''_getChildrenOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Collection]
'''
    ...
    def _getChildrenOfTypeDocument (self, *args, **kwargs):
      '''_getChildrenOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Document]
'''
    ...
    def _getChildrenOfTypeGeomInfo (self, *args, **kwargs):
      '''_getChildrenOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::GeomInfo]
'''
    ...
    def _getChildrenOfTypeGeomProp (self, *args, **kwargs):
      '''_getChildrenOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::GeomProp]
'''
    ...
    def _getChildrenOfTypeImplementation (self, *args, **kwargs):
      '''_getChildrenOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Implementation]
'''
    ...
    def _getChildrenOfTypeLook (self, *args, **kwargs):
      '''_getChildrenOfTypeLook(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Look]
'''
    ...
    def _getChildrenOfTypeMaterialAssign (self, *args, **kwargs):
      '''_getChildrenOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::MaterialAssign]
'''
    ...
    def _getChildrenOfTypeNode (self, *args, **kwargs):
      '''_getChildrenOfTypeNode(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Node]
'''
    ...
    def _getChildrenOfTypeNodeDef (self, *args, **kwargs):
      '''_getChildrenOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::NodeDef]
'''
    ...
    def _getChildrenOfTypeNodeGraph (self, *args, **kwargs):
      '''_getChildrenOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::NodeGraph]
'''
    ...
    def _getChildrenOfTypeProperty (self, *args, **kwargs):
      '''_getChildrenOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Property]
'''
    ...
    def _getChildrenOfTypePropertySet (self, *args, **kwargs):
      '''_getChildrenOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::PropertySet]
'''
    ...
    def _getChildrenOfTypePropertySetAssign (self, *args, **kwargs):
      '''_getChildrenOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::PropertySetAssign]
'''
    ...
    def _getChildrenOfTypeToken (self, *args, **kwargs):
      '''_getChildrenOfTypeToken(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Token]
'''
    ...
    def _getChildrenOfTypeTypeDef (self, *args, **kwargs):
      '''_getChildrenOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::TypeDef]
'''
    ...
    def _getChildrenOfTypeVisibility (self, *args, **kwargs):
      '''_getChildrenOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Visibility]
'''
    ...
    def _removeChildOfTypeCollection (self, *args, **kwargs):
      '''_removeChildOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeDocument (self, *args, **kwargs):
      '''_removeChildOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeGeomInfo (self, *args, **kwargs):
      '''_removeChildOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeGeomProp (self, *args, **kwargs):
      '''_removeChildOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeImplementation (self, *args, **kwargs):
      '''_removeChildOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeLook (self, *args, **kwargs):
      '''_removeChildOfTypeLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeMaterialAssign (self, *args, **kwargs):
      '''_removeChildOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNode (self, *args, **kwargs):
      '''_removeChildOfTypeNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNodeDef (self, *args, **kwargs):
      '''_removeChildOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNodeGraph (self, *args, **kwargs):
      '''_removeChildOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeProperty (self, *args, **kwargs):
      '''_removeChildOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypePropertySet (self, *args, **kwargs):
      '''_removeChildOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypePropertySetAssign (self, *args, **kwargs):
      '''_removeChildOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeToken (self, *args, **kwargs):
      '''_removeChildOfTypeToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeTypeDef (self, *args, **kwargs):
      '''_removeChildOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeVisibility (self, *args, **kwargs):
      '''_removeChildOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def addChild (self, elementClass, name, typeString=''):
      '''Add a child element of the given subclass, name, and optional type string.'''
    ...
    def addChildOfCategory (self, *args, **kwargs):
      '''addChildOfCategory(self: MaterialX.PyMaterialXCore.Element, category: str, name: str = '') -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def asString (self, *args, **kwargs):
      '''asString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def changeChildCategory (self, *args, **kwargs):
      '''changeChildCategory(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element, arg1: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def clearContent (self, *args, **kwargs):
      '''clearContent(self: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def copyContentFrom (self, *args, **kwargs):
      '''copyContentFrom(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def createStringResolver (self, *args, **kwargs):
      '''createStringResolver(self: MaterialX.PyMaterialXCore.Element, geom: str = '') -> MaterialX_v1_38_8::StringResolver
'''
    ...
    def createValidChildName (self, *args, **kwargs):
      '''createValidChildName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getActiveColorSpace (self, *args, **kwargs):
      '''getActiveColorSpace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveFilePrefix (self, *args, **kwargs):
      '''getActiveFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveGeomPrefix (self, *args, **kwargs):
      '''getActiveGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveSourceUri (self, *args, **kwargs):
      '''getActiveSourceUri(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getAttribute (self, *args, **kwargs):
      '''getAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getAttributeNames (self, *args, **kwargs):
      '''getAttributeNames(self: MaterialX.PyMaterialXCore.Element) -> List[str]
'''
    ...
    def getCategory (self, *args, **kwargs):
      '''getCategory(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getChild (self, name):
      '''Return the child element, if any, with the given name.'''
    ...
    def getChildIndex (self, *args, **kwargs):
      '''getChildIndex(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> int
'''
    ...
    def getChildOfType (self, elementClass, name):
      '''Return the child element, if any, with the given name and subclass.'''
    ...
    def getChildren (self, *args, **kwargs):
      '''getChildren(self: MaterialX.PyMaterialXCore.Element) -> List[MaterialX.PyMaterialXCore.Element]
'''
    ...
    def getChildrenOfType (self, elementClass):
      '''Return a list of all child elements that are instances of the given type.
       The returned list maintains the order in which children were added.'''
    ...
    def getCollection (self, *args, **kwargs):
      '''getCollection(self: MaterialX.PyMaterialXCore.GeomElement) -> MaterialX_v1_38_8::Collection
'''
    ...
    def getCollectionString (self, *args, **kwargs):
      '''getCollectionString(self: MaterialX.PyMaterialXCore.GeomElement) -> str
'''
    ...
    def getColorSpace (self, *args, **kwargs):
      '''getColorSpace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getDescendant (self, *args, **kwargs):
      '''getDescendant(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getDocString (self, *args, **kwargs):
      '''getDocString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getDocument (self, *args, **kwargs):
      '''getDocument(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::Document
'''
    ...
    def getExclusive (self, *args, **kwargs):
      '''getExclusive(self: MaterialX.PyMaterialXCore.MaterialAssign) -> bool
'''
    ...
    def getFilePrefix (self, *args, **kwargs):
      '''getFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getGeom (self, *args, **kwargs):
      '''getGeom(self: MaterialX.PyMaterialXCore.GeomElement) -> str
'''
    ...
    def getGeomPrefix (self, *args, **kwargs):
      '''getGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getInheritString (self, *args, **kwargs):
      '''getInheritString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getInheritsFrom (self, *args, **kwargs):
      '''getInheritsFrom(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getMaterial (self, *args, **kwargs):
      '''getMaterial(self: MaterialX.PyMaterialXCore.MaterialAssign) -> str
'''
    ...
    def getMaterialOutputs (self, *args, **kwargs):
      '''getMaterialOutputs(self: MaterialX.PyMaterialXCore.MaterialAssign) -> List[MaterialX.PyMaterialXCore.Output]
'''
    ...
    def getName (self, *args, **kwargs):
      '''getName(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getNamePath (self, *args, **kwargs):
      '''getNamePath(self: MaterialX.PyMaterialXCore.Element, relativeTo: MaterialX.PyMaterialXCore.Element = None) -> str
'''
    ...
    def getNamespace (self, *args, **kwargs):
      '''getNamespace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getParent (self, *args, **kwargs):
      '''getParent(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getQualifiedName (self, *args, **kwargs):
      '''getQualifiedName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getReferencedMaterial (self, *args, **kwargs):
      '''getReferencedMaterial(self: MaterialX.PyMaterialXCore.MaterialAssign) -> MaterialX_v1_38_8::Node
'''
    ...
    def getRoot (self, *args, **kwargs):
      '''getRoot(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getSelf (self, *args, **kwargs):
      '''getSelf(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getSourceUri (self, *args, **kwargs):
      '''getSourceUri(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getUpstreamEdge (self, *args, **kwargs):
      '''getUpstreamEdge(self: MaterialX.PyMaterialXCore.Element, index: int = 0) -> MaterialX_v1_38_8::Edge
'''
    ...
    def getUpstreamEdgeCount (self, *args, **kwargs):
      '''getUpstreamEdgeCount(self: MaterialX.PyMaterialXCore.Element) -> int
'''
    ...
    def getUpstreamElement (self, *args, **kwargs):
      '''getUpstreamElement(self: MaterialX.PyMaterialXCore.Element, index: int = 0) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def hasAttribute (self, *args, **kwargs):
      '''hasAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> bool
'''
    ...
    def hasCollectionString (self, *args, **kwargs):
      '''hasCollectionString(self: MaterialX.PyMaterialXCore.GeomElement) -> bool
'''
    ...
    def hasColorSpace (self, *args, **kwargs):
      '''hasColorSpace(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasFilePrefix (self, *args, **kwargs):
      '''hasFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasGeom (self, *args, **kwargs):
      '''hasGeom(self: MaterialX.PyMaterialXCore.GeomElement) -> bool
'''
    ...
    def hasGeomPrefix (self, *args, **kwargs):
      '''hasGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritString (self, *args, **kwargs):
      '''hasInheritString(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritanceCycle (self, *args, **kwargs):
      '''hasInheritanceCycle(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritedBase (self, *args, **kwargs):
      '''hasInheritedBase(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasMaterial (self, *args, **kwargs):
      '''hasMaterial(self: MaterialX.PyMaterialXCore.MaterialAssign) -> bool
'''
    ...
    def hasNamespace (self, *args, **kwargs):
      '''hasNamespace(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasSourceUri (self, *args, **kwargs):
      '''hasSourceUri(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def isA (self, elementClass, category=''):
      '''Return True if this element is an instance of the given subclass.
       If a category string is specified, then both subclass and category
       matches are required.'''
    ...
    def removeAttribute (self, *args, **kwargs):
      '''removeAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def removeChild (self, *args, **kwargs):
      '''removeChild(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def removeChildOfType (self, elementClass, name):
      '''Remove the typed child element, if any, with the given name.'''
    ...
    def setAttribute (self, *args, **kwargs):
      '''setAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str, arg1: str) -> None
'''
    ...
    def setCategory (self, *args, **kwargs):
      '''setCategory(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setChildIndex (self, *args, **kwargs):
      '''setChildIndex(self: MaterialX.PyMaterialXCore.Element, arg0: str, arg1: int) -> None
'''
    ...
    def setCollection (self, *args, **kwargs):
      '''setCollection(self: MaterialX.PyMaterialXCore.GeomElement, arg0: MaterialX_v1_38_8::Collection) -> None
'''
    ...
    def setCollectionString (self, *args, **kwargs):
      '''setCollectionString(self: MaterialX.PyMaterialXCore.GeomElement, arg0: str) -> None
'''
    ...
    def setColorSpace (self, *args, **kwargs):
      '''setColorSpace(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setDocString (self, *args, **kwargs):
      '''setDocString(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setExclusive (self, *args, **kwargs):
      '''setExclusive(self: MaterialX.PyMaterialXCore.MaterialAssign, arg0: bool) -> None
'''
    ...
    def setFilePrefix (self, *args, **kwargs):
      '''setFilePrefix(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setGeom (self, *args, **kwargs):
      '''setGeom(self: MaterialX.PyMaterialXCore.GeomElement, arg0: str) -> None
'''
    ...
    def setGeomPrefix (self, *args, **kwargs):
      '''setGeomPrefix(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setInheritString (self, *args, **kwargs):
      '''setInheritString(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setInheritsFrom (self, *args, **kwargs):
      '''setInheritsFrom(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def setMaterial (self, *args, **kwargs):
      '''setMaterial(self: MaterialX.PyMaterialXCore.MaterialAssign, arg0: str) -> None
'''
    ...
    def setName (self, *args, **kwargs):
      '''setName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setNamespace (self, *args, **kwargs):
      '''setNamespace(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setSourceUri (self, *args, **kwargs):
      '''setSourceUri(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def traverseGraph (self, *args, **kwargs):
      '''traverseGraph(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::GraphIterator
'''
    ...
    def traverseInheritance (self, *args, **kwargs):
      '''traverseInheritance(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::InheritanceIterator
'''
    ...
    def traverseTree (self, *args, **kwargs):
      '''traverseTree(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::TreeIterator
'''
    ...
    def validate (self, *args, **kwargs):
      '''validate(self: MaterialX.PyMaterialXCore.Element) -> Tuple[bool, str]
'''
    ...

def Matrix33 (*args):
      '''

'''      
    ...

class Matrix33:
    def IDENTITY (self, *args, **kwargs):
      '''None'''
    ...
    def copy (self, *args, **kwargs):
      '''copy(self: MaterialX.PyMaterialXCore.Matrix33) -> MaterialX.PyMaterialXCore.Matrix33
'''
    ...
    def createRotation (self, *args, **kwargs):
      '''createRotation(arg0: float) -> MaterialX.PyMaterialXCore.Matrix33
'''
    ...
    def createScale (self, *args, **kwargs):
      '''createScale(arg0: MaterialX.PyMaterialXCore.Vector2) -> MaterialX.PyMaterialXCore.Matrix33
'''
    ...
    def createTranslation (self, *args, **kwargs):
      '''createTranslation(arg0: MaterialX.PyMaterialXCore.Vector2) -> MaterialX.PyMaterialXCore.Matrix33
'''
    ...
    def getAdjugate (self, *args, **kwargs):
      '''getAdjugate(self: MaterialX.PyMaterialXCore.Matrix33) -> MaterialX.PyMaterialXCore.Matrix33
'''
    ...
    def getDeterminant (self, *args, **kwargs):
      '''getDeterminant(self: MaterialX.PyMaterialXCore.Matrix33) -> float
'''
    ...
    def getInverse (self, *args, **kwargs):
      '''getInverse(self: MaterialX.PyMaterialXCore.Matrix33) -> MaterialX.PyMaterialXCore.Matrix33
'''
    ...
    def getTranspose (self, *args, **kwargs):
      '''getTranspose(self: MaterialX.PyMaterialXCore.Matrix33) -> MaterialX.PyMaterialXCore.Matrix33
'''
    ...
    def isEquivalent (self, *args, **kwargs):
      '''isEquivalent(self: MaterialX.PyMaterialXCore.Matrix33, arg0: MaterialX.PyMaterialXCore.Matrix33, arg1: float) -> bool
'''
    ...
    def multiply (self, *args, **kwargs):
      '''multiply(self: MaterialX.PyMaterialXCore.Matrix33, arg0: MaterialX.PyMaterialXCore.Vector3) -> MaterialX.PyMaterialXCore.Vector3
'''
    ...
    def numColumns (self, *args, **kwargs):
      '''numColumns() -> int
'''
    ...
    def numRows (self, *args, **kwargs):
      '''numRows() -> int
'''
    ...
    def transformNormal (self, *args, **kwargs):
      '''transformNormal(self: MaterialX.PyMaterialXCore.Matrix33, arg0: MaterialX.PyMaterialXCore.Vector3) -> MaterialX.PyMaterialXCore.Vector3
'''
    ...
    def transformPoint (self, *args, **kwargs):
      '''transformPoint(self: MaterialX.PyMaterialXCore.Matrix33, arg0: MaterialX.PyMaterialXCore.Vector2) -> MaterialX.PyMaterialXCore.Vector2
'''
    ...
    def transformVector (self, *args, **kwargs):
      '''transformVector(self: MaterialX.PyMaterialXCore.Matrix33, arg0: MaterialX.PyMaterialXCore.Vector2) -> MaterialX.PyMaterialXCore.Vector2
'''
    ...

def Matrix44 (*args):
      '''

'''      
    ...

class Matrix44:
    def IDENTITY (self, *args, **kwargs):
      '''None'''
    ...
    def copy (self, *args, **kwargs):
      '''copy(self: MaterialX.PyMaterialXCore.Matrix44) -> MaterialX.PyMaterialXCore.Matrix44
'''
    ...
    def createRotationX (self, *args, **kwargs):
      '''createRotationX(arg0: float) -> MaterialX.PyMaterialXCore.Matrix44
'''
    ...
    def createRotationY (self, *args, **kwargs):
      '''createRotationY(arg0: float) -> MaterialX.PyMaterialXCore.Matrix44
'''
    ...
    def createRotationZ (self, *args, **kwargs):
      '''createRotationZ(arg0: float) -> MaterialX.PyMaterialXCore.Matrix44
'''
    ...
    def createScale (self, *args, **kwargs):
      '''createScale(arg0: MaterialX.PyMaterialXCore.Vector3) -> MaterialX.PyMaterialXCore.Matrix44
'''
    ...
    def createTranslation (self, *args, **kwargs):
      '''createTranslation(arg0: MaterialX.PyMaterialXCore.Vector3) -> MaterialX.PyMaterialXCore.Matrix44
'''
    ...
    def getAdjugate (self, *args, **kwargs):
      '''getAdjugate(self: MaterialX.PyMaterialXCore.Matrix44) -> MaterialX.PyMaterialXCore.Matrix44
'''
    ...
    def getDeterminant (self, *args, **kwargs):
      '''getDeterminant(self: MaterialX.PyMaterialXCore.Matrix44) -> float
'''
    ...
    def getInverse (self, *args, **kwargs):
      '''getInverse(self: MaterialX.PyMaterialXCore.Matrix44) -> MaterialX.PyMaterialXCore.Matrix44
'''
    ...
    def getTranspose (self, *args, **kwargs):
      '''getTranspose(self: MaterialX.PyMaterialXCore.Matrix44) -> MaterialX.PyMaterialXCore.Matrix44
'''
    ...
    def isEquivalent (self, *args, **kwargs):
      '''isEquivalent(self: MaterialX.PyMaterialXCore.Matrix44, arg0: MaterialX.PyMaterialXCore.Matrix44, arg1: float) -> bool
'''
    ...
    def multiply (self, *args, **kwargs):
      '''multiply(self: MaterialX.PyMaterialXCore.Matrix44, arg0: MaterialX.PyMaterialXCore.Vector4) -> MaterialX.PyMaterialXCore.Vector4
'''
    ...
    def numColumns (self, *args, **kwargs):
      '''numColumns() -> int
'''
    ...
    def numRows (self, *args, **kwargs):
      '''numRows() -> int
'''
    ...
    def transformNormal (self, *args, **kwargs):
      '''transformNormal(self: MaterialX.PyMaterialXCore.Matrix44, arg0: MaterialX.PyMaterialXCore.Vector3) -> MaterialX.PyMaterialXCore.Vector3
'''
    ...
    def transformPoint (self, *args, **kwargs):
      '''transformPoint(self: MaterialX.PyMaterialXCore.Matrix44, arg0: MaterialX.PyMaterialXCore.Vector3) -> MaterialX.PyMaterialXCore.Vector3
'''
    ...
    def transformVector (self, *args, **kwargs):
      '''transformVector(self: MaterialX.PyMaterialXCore.Matrix44, arg0: MaterialX.PyMaterialXCore.Vector3) -> MaterialX.PyMaterialXCore.Vector3
'''
    ...

def MatrixBase (*args):
      '''

'''      
    ...

class MatrixBase:

def Member (*args):
      '''

'''      
    ...

class Member:
    def CATEGORY (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def TYPE_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def _addChildCollection (self, *args, **kwargs):
      '''_addChildCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Collection
'''
    ...
    def _addChildDocument (self, *args, **kwargs):
      '''_addChildDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Document
'''
    ...
    def _addChildGeomInfo (self, *args, **kwargs):
      '''_addChildGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomInfo
'''
    ...
    def _addChildGeomProp (self, *args, **kwargs):
      '''_addChildGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def _addChildImplementation (self, *args, **kwargs):
      '''_addChildImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Implementation
'''
    ...
    def _addChildLook (self, *args, **kwargs):
      '''_addChildLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Look
'''
    ...
    def _addChildMaterialAssign (self, *args, **kwargs):
      '''_addChildMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::MaterialAssign
'''
    ...
    def _addChildNode (self, *args, **kwargs):
      '''_addChildNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Node
'''
    ...
    def _addChildNodeDef (self, *args, **kwargs):
      '''_addChildNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeDef
'''
    ...
    def _addChildNodeGraph (self, *args, **kwargs):
      '''_addChildNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeGraph
'''
    ...
    def _addChildProperty (self, *args, **kwargs):
      '''_addChildProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Property
'''
    ...
    def _addChildPropertySet (self, *args, **kwargs):
      '''_addChildPropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySet
'''
    ...
    def _addChildPropertySetAssign (self, *args, **kwargs):
      '''_addChildPropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySetAssign
'''
    ...
    def _addChildToken (self, *args, **kwargs):
      '''_addChildToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Token
'''
    ...
    def _addChildTypeDef (self, *args, **kwargs):
      '''_addChildTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def _addChildVisibility (self, *args, **kwargs):
      '''_addChildVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Visibility
'''
    ...
    def _getChild (self, *args, **kwargs):
      '''_getChild(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def _getChildOfTypeCollection (self, *args, **kwargs):
      '''_getChildOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Collection
'''
    ...
    def _getChildOfTypeDocument (self, *args, **kwargs):
      '''_getChildOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Document
'''
    ...
    def _getChildOfTypeGeomInfo (self, *args, **kwargs):
      '''_getChildOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomInfo
'''
    ...
    def _getChildOfTypeGeomProp (self, *args, **kwargs):
      '''_getChildOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def _getChildOfTypeImplementation (self, *args, **kwargs):
      '''_getChildOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Implementation
'''
    ...
    def _getChildOfTypeLook (self, *args, **kwargs):
      '''_getChildOfTypeLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Look
'''
    ...
    def _getChildOfTypeMaterialAssign (self, *args, **kwargs):
      '''_getChildOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::MaterialAssign
'''
    ...
    def _getChildOfTypeNode (self, *args, **kwargs):
      '''_getChildOfTypeNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Node
'''
    ...
    def _getChildOfTypeNodeDef (self, *args, **kwargs):
      '''_getChildOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeDef
'''
    ...
    def _getChildOfTypeNodeGraph (self, *args, **kwargs):
      '''_getChildOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeGraph
'''
    ...
    def _getChildOfTypeProperty (self, *args, **kwargs):
      '''_getChildOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Property
'''
    ...
    def _getChildOfTypePropertySet (self, *args, **kwargs):
      '''_getChildOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySet
'''
    ...
    def _getChildOfTypePropertySetAssign (self, *args, **kwargs):
      '''_getChildOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySetAssign
'''
    ...
    def _getChildOfTypeToken (self, *args, **kwargs):
      '''_getChildOfTypeToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Token
'''
    ...
    def _getChildOfTypeTypeDef (self, *args, **kwargs):
      '''_getChildOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def _getChildOfTypeVisibility (self, *args, **kwargs):
      '''_getChildOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Visibility
'''
    ...
    def _getChildrenOfTypeCollection (self, *args, **kwargs):
      '''_getChildrenOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Collection]
'''
    ...
    def _getChildrenOfTypeDocument (self, *args, **kwargs):
      '''_getChildrenOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Document]
'''
    ...
    def _getChildrenOfTypeGeomInfo (self, *args, **kwargs):
      '''_getChildrenOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::GeomInfo]
'''
    ...
    def _getChildrenOfTypeGeomProp (self, *args, **kwargs):
      '''_getChildrenOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::GeomProp]
'''
    ...
    def _getChildrenOfTypeImplementation (self, *args, **kwargs):
      '''_getChildrenOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Implementation]
'''
    ...
    def _getChildrenOfTypeLook (self, *args, **kwargs):
      '''_getChildrenOfTypeLook(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Look]
'''
    ...
    def _getChildrenOfTypeMaterialAssign (self, *args, **kwargs):
      '''_getChildrenOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::MaterialAssign]
'''
    ...
    def _getChildrenOfTypeNode (self, *args, **kwargs):
      '''_getChildrenOfTypeNode(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Node]
'''
    ...
    def _getChildrenOfTypeNodeDef (self, *args, **kwargs):
      '''_getChildrenOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::NodeDef]
'''
    ...
    def _getChildrenOfTypeNodeGraph (self, *args, **kwargs):
      '''_getChildrenOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::NodeGraph]
'''
    ...
    def _getChildrenOfTypeProperty (self, *args, **kwargs):
      '''_getChildrenOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Property]
'''
    ...
    def _getChildrenOfTypePropertySet (self, *args, **kwargs):
      '''_getChildrenOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::PropertySet]
'''
    ...
    def _getChildrenOfTypePropertySetAssign (self, *args, **kwargs):
      '''_getChildrenOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::PropertySetAssign]
'''
    ...
    def _getChildrenOfTypeToken (self, *args, **kwargs):
      '''_getChildrenOfTypeToken(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Token]
'''
    ...
    def _getChildrenOfTypeTypeDef (self, *args, **kwargs):
      '''_getChildrenOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::TypeDef]
'''
    ...
    def _getChildrenOfTypeVisibility (self, *args, **kwargs):
      '''_getChildrenOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Visibility]
'''
    ...
    def _removeChildOfTypeCollection (self, *args, **kwargs):
      '''_removeChildOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeDocument (self, *args, **kwargs):
      '''_removeChildOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeGeomInfo (self, *args, **kwargs):
      '''_removeChildOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeGeomProp (self, *args, **kwargs):
      '''_removeChildOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeImplementation (self, *args, **kwargs):
      '''_removeChildOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeLook (self, *args, **kwargs):
      '''_removeChildOfTypeLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeMaterialAssign (self, *args, **kwargs):
      '''_removeChildOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNode (self, *args, **kwargs):
      '''_removeChildOfTypeNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNodeDef (self, *args, **kwargs):
      '''_removeChildOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNodeGraph (self, *args, **kwargs):
      '''_removeChildOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeProperty (self, *args, **kwargs):
      '''_removeChildOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypePropertySet (self, *args, **kwargs):
      '''_removeChildOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypePropertySetAssign (self, *args, **kwargs):
      '''_removeChildOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeToken (self, *args, **kwargs):
      '''_removeChildOfTypeToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeTypeDef (self, *args, **kwargs):
      '''_removeChildOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeVisibility (self, *args, **kwargs):
      '''_removeChildOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def addChild (self, elementClass, name, typeString=''):
      '''Add a child element of the given subclass, name, and optional type string.'''
    ...
    def addChildOfCategory (self, *args, **kwargs):
      '''addChildOfCategory(self: MaterialX.PyMaterialXCore.Element, category: str, name: str = '') -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def asString (self, *args, **kwargs):
      '''asString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def changeChildCategory (self, *args, **kwargs):
      '''changeChildCategory(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element, arg1: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def clearContent (self, *args, **kwargs):
      '''clearContent(self: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def copyContentFrom (self, *args, **kwargs):
      '''copyContentFrom(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def createStringResolver (self, *args, **kwargs):
      '''createStringResolver(self: MaterialX.PyMaterialXCore.Element, geom: str = '') -> MaterialX_v1_38_8::StringResolver
'''
    ...
    def createValidChildName (self, *args, **kwargs):
      '''createValidChildName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getActiveColorSpace (self, *args, **kwargs):
      '''getActiveColorSpace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveFilePrefix (self, *args, **kwargs):
      '''getActiveFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveGeomPrefix (self, *args, **kwargs):
      '''getActiveGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveSourceUri (self, *args, **kwargs):
      '''getActiveSourceUri(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getAttribute (self, *args, **kwargs):
      '''getAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getAttributeNames (self, *args, **kwargs):
      '''getAttributeNames(self: MaterialX.PyMaterialXCore.Element) -> List[str]
'''
    ...
    def getCategory (self, *args, **kwargs):
      '''getCategory(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getChild (self, name):
      '''Return the child element, if any, with the given name.'''
    ...
    def getChildIndex (self, *args, **kwargs):
      '''getChildIndex(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> int
'''
    ...
    def getChildOfType (self, elementClass, name):
      '''Return the child element, if any, with the given name and subclass.'''
    ...
    def getChildren (self, *args, **kwargs):
      '''getChildren(self: MaterialX.PyMaterialXCore.Element) -> List[MaterialX.PyMaterialXCore.Element]
'''
    ...
    def getChildrenOfType (self, elementClass):
      '''Return a list of all child elements that are instances of the given type.
       The returned list maintains the order in which children were added.'''
    ...
    def getColorSpace (self, *args, **kwargs):
      '''getColorSpace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getDescendant (self, *args, **kwargs):
      '''getDescendant(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getDocString (self, *args, **kwargs):
      '''getDocString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getDocument (self, *args, **kwargs):
      '''getDocument(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::Document
'''
    ...
    def getFilePrefix (self, *args, **kwargs):
      '''getFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getGeomPrefix (self, *args, **kwargs):
      '''getGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getInheritString (self, *args, **kwargs):
      '''getInheritString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getInheritsFrom (self, *args, **kwargs):
      '''getInheritsFrom(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getName (self, *args, **kwargs):
      '''getName(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getNamePath (self, *args, **kwargs):
      '''getNamePath(self: MaterialX.PyMaterialXCore.Element, relativeTo: MaterialX.PyMaterialXCore.Element = None) -> str
'''
    ...
    def getNamespace (self, *args, **kwargs):
      '''getNamespace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getParent (self, *args, **kwargs):
      '''getParent(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getQualifiedName (self, *args, **kwargs):
      '''getQualifiedName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getRoot (self, *args, **kwargs):
      '''getRoot(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getSelf (self, *args, **kwargs):
      '''getSelf(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getSourceUri (self, *args, **kwargs):
      '''getSourceUri(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getType (self, *args, **kwargs):
      '''getType(self: MaterialX.PyMaterialXCore.TypedElement) -> str
'''
    ...
    def getTypeDef (self, *args, **kwargs):
      '''getTypeDef(self: MaterialX.PyMaterialXCore.TypedElement) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def getUpstreamEdge (self, *args, **kwargs):
      '''getUpstreamEdge(self: MaterialX.PyMaterialXCore.Element, index: int = 0) -> MaterialX_v1_38_8::Edge
'''
    ...
    def getUpstreamEdgeCount (self, *args, **kwargs):
      '''getUpstreamEdgeCount(self: MaterialX.PyMaterialXCore.Element) -> int
'''
    ...
    def getUpstreamElement (self, *args, **kwargs):
      '''getUpstreamElement(self: MaterialX.PyMaterialXCore.Element, index: int = 0) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def hasAttribute (self, *args, **kwargs):
      '''hasAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> bool
'''
    ...
    def hasColorSpace (self, *args, **kwargs):
      '''hasColorSpace(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasFilePrefix (self, *args, **kwargs):
      '''hasFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasGeomPrefix (self, *args, **kwargs):
      '''hasGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritString (self, *args, **kwargs):
      '''hasInheritString(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritanceCycle (self, *args, **kwargs):
      '''hasInheritanceCycle(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritedBase (self, *args, **kwargs):
      '''hasInheritedBase(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasNamespace (self, *args, **kwargs):
      '''hasNamespace(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasSourceUri (self, *args, **kwargs):
      '''hasSourceUri(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasType (self, *args, **kwargs):
      '''hasType(self: MaterialX.PyMaterialXCore.TypedElement) -> bool
'''
    ...
    def isA (self, elementClass, category=''):
      '''Return True if this element is an instance of the given subclass.
       If a category string is specified, then both subclass and category
       matches are required.'''
    ...
    def isMultiOutputType (self, *args, **kwargs):
      '''isMultiOutputType(self: MaterialX.PyMaterialXCore.TypedElement) -> bool
'''
    ...
    def removeAttribute (self, *args, **kwargs):
      '''removeAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def removeChild (self, *args, **kwargs):
      '''removeChild(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def removeChildOfType (self, elementClass, name):
      '''Remove the typed child element, if any, with the given name.'''
    ...
    def setAttribute (self, *args, **kwargs):
      '''setAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str, arg1: str) -> None
'''
    ...
    def setCategory (self, *args, **kwargs):
      '''setCategory(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setChildIndex (self, *args, **kwargs):
      '''setChildIndex(self: MaterialX.PyMaterialXCore.Element, arg0: str, arg1: int) -> None
'''
    ...
    def setColorSpace (self, *args, **kwargs):
      '''setColorSpace(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setDocString (self, *args, **kwargs):
      '''setDocString(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setFilePrefix (self, *args, **kwargs):
      '''setFilePrefix(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setGeomPrefix (self, *args, **kwargs):
      '''setGeomPrefix(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setInheritString (self, *args, **kwargs):
      '''setInheritString(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setInheritsFrom (self, *args, **kwargs):
      '''setInheritsFrom(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def setName (self, *args, **kwargs):
      '''setName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setNamespace (self, *args, **kwargs):
      '''setNamespace(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setSourceUri (self, *args, **kwargs):
      '''setSourceUri(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setType (self, *args, **kwargs):
      '''setType(self: MaterialX.PyMaterialXCore.TypedElement, arg0: str) -> None
'''
    ...
    def traverseGraph (self, *args, **kwargs):
      '''traverseGraph(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::GraphIterator
'''
    ...
    def traverseInheritance (self, *args, **kwargs):
      '''traverseInheritance(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::InheritanceIterator
'''
    ...
    def traverseTree (self, *args, **kwargs):
      '''traverseTree(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::TreeIterator
'''
    ...
    def validate (self, *args, **kwargs):
      '''validate(self: MaterialX.PyMaterialXCore.Element) -> Tuple[bool, str]
'''
    ...

def NAME_PATH_SEPARATOR (*args):
      '''

'''      
    ...

def NAME_PREFIX_SEPARATOR (*args):
      '''

'''      
    ...

def NONE_TYPE_STRING (*args):
      '''

'''      
    ...

def NewlineElement (*args):
      '''

'''      
    ...

class NewlineElement:
    def CATEGORY (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def _addChildCollection (self, *args, **kwargs):
      '''_addChildCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Collection
'''
    ...
    def _addChildDocument (self, *args, **kwargs):
      '''_addChildDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Document
'''
    ...
    def _addChildGeomInfo (self, *args, **kwargs):
      '''_addChildGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomInfo
'''
    ...
    def _addChildGeomProp (self, *args, **kwargs):
      '''_addChildGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def _addChildImplementation (self, *args, **kwargs):
      '''_addChildImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Implementation
'''
    ...
    def _addChildLook (self, *args, **kwargs):
      '''_addChildLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Look
'''
    ...
    def _addChildMaterialAssign (self, *args, **kwargs):
      '''_addChildMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::MaterialAssign
'''
    ...
    def _addChildNode (self, *args, **kwargs):
      '''_addChildNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Node
'''
    ...
    def _addChildNodeDef (self, *args, **kwargs):
      '''_addChildNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeDef
'''
    ...
    def _addChildNodeGraph (self, *args, **kwargs):
      '''_addChildNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeGraph
'''
    ...
    def _addChildProperty (self, *args, **kwargs):
      '''_addChildProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Property
'''
    ...
    def _addChildPropertySet (self, *args, **kwargs):
      '''_addChildPropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySet
'''
    ...
    def _addChildPropertySetAssign (self, *args, **kwargs):
      '''_addChildPropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySetAssign
'''
    ...
    def _addChildToken (self, *args, **kwargs):
      '''_addChildToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Token
'''
    ...
    def _addChildTypeDef (self, *args, **kwargs):
      '''_addChildTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def _addChildVisibility (self, *args, **kwargs):
      '''_addChildVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Visibility
'''
    ...
    def _getChild (self, *args, **kwargs):
      '''_getChild(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def _getChildOfTypeCollection (self, *args, **kwargs):
      '''_getChildOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Collection
'''
    ...
    def _getChildOfTypeDocument (self, *args, **kwargs):
      '''_getChildOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Document
'''
    ...
    def _getChildOfTypeGeomInfo (self, *args, **kwargs):
      '''_getChildOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomInfo
'''
    ...
    def _getChildOfTypeGeomProp (self, *args, **kwargs):
      '''_getChildOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def _getChildOfTypeImplementation (self, *args, **kwargs):
      '''_getChildOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Implementation
'''
    ...
    def _getChildOfTypeLook (self, *args, **kwargs):
      '''_getChildOfTypeLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Look
'''
    ...
    def _getChildOfTypeMaterialAssign (self, *args, **kwargs):
      '''_getChildOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::MaterialAssign
'''
    ...
    def _getChildOfTypeNode (self, *args, **kwargs):
      '''_getChildOfTypeNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Node
'''
    ...
    def _getChildOfTypeNodeDef (self, *args, **kwargs):
      '''_getChildOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeDef
'''
    ...
    def _getChildOfTypeNodeGraph (self, *args, **kwargs):
      '''_getChildOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeGraph
'''
    ...
    def _getChildOfTypeProperty (self, *args, **kwargs):
      '''_getChildOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Property
'''
    ...
    def _getChildOfTypePropertySet (self, *args, **kwargs):
      '''_getChildOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySet
'''
    ...
    def _getChildOfTypePropertySetAssign (self, *args, **kwargs):
      '''_getChildOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySetAssign
'''
    ...
    def _getChildOfTypeToken (self, *args, **kwargs):
      '''_getChildOfTypeToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Token
'''
    ...
    def _getChildOfTypeTypeDef (self, *args, **kwargs):
      '''_getChildOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def _getChildOfTypeVisibility (self, *args, **kwargs):
      '''_getChildOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Visibility
'''
    ...
    def _getChildrenOfTypeCollection (self, *args, **kwargs):
      '''_getChildrenOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Collection]
'''
    ...
    def _getChildrenOfTypeDocument (self, *args, **kwargs):
      '''_getChildrenOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Document]
'''
    ...
    def _getChildrenOfTypeGeomInfo (self, *args, **kwargs):
      '''_getChildrenOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::GeomInfo]
'''
    ...
    def _getChildrenOfTypeGeomProp (self, *args, **kwargs):
      '''_getChildrenOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::GeomProp]
'''
    ...
    def _getChildrenOfTypeImplementation (self, *args, **kwargs):
      '''_getChildrenOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Implementation]
'''
    ...
    def _getChildrenOfTypeLook (self, *args, **kwargs):
      '''_getChildrenOfTypeLook(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Look]
'''
    ...
    def _getChildrenOfTypeMaterialAssign (self, *args, **kwargs):
      '''_getChildrenOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::MaterialAssign]
'''
    ...
    def _getChildrenOfTypeNode (self, *args, **kwargs):
      '''_getChildrenOfTypeNode(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Node]
'''
    ...
    def _getChildrenOfTypeNodeDef (self, *args, **kwargs):
      '''_getChildrenOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::NodeDef]
'''
    ...
    def _getChildrenOfTypeNodeGraph (self, *args, **kwargs):
      '''_getChildrenOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::NodeGraph]
'''
    ...
    def _getChildrenOfTypeProperty (self, *args, **kwargs):
      '''_getChildrenOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Property]
'''
    ...
    def _getChildrenOfTypePropertySet (self, *args, **kwargs):
      '''_getChildrenOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::PropertySet]
'''
    ...
    def _getChildrenOfTypePropertySetAssign (self, *args, **kwargs):
      '''_getChildrenOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::PropertySetAssign]
'''
    ...
    def _getChildrenOfTypeToken (self, *args, **kwargs):
      '''_getChildrenOfTypeToken(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Token]
'''
    ...
    def _getChildrenOfTypeTypeDef (self, *args, **kwargs):
      '''_getChildrenOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::TypeDef]
'''
    ...
    def _getChildrenOfTypeVisibility (self, *args, **kwargs):
      '''_getChildrenOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Visibility]
'''
    ...
    def _removeChildOfTypeCollection (self, *args, **kwargs):
      '''_removeChildOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeDocument (self, *args, **kwargs):
      '''_removeChildOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeGeomInfo (self, *args, **kwargs):
      '''_removeChildOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeGeomProp (self, *args, **kwargs):
      '''_removeChildOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeImplementation (self, *args, **kwargs):
      '''_removeChildOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeLook (self, *args, **kwargs):
      '''_removeChildOfTypeLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeMaterialAssign (self, *args, **kwargs):
      '''_removeChildOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNode (self, *args, **kwargs):
      '''_removeChildOfTypeNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNodeDef (self, *args, **kwargs):
      '''_removeChildOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNodeGraph (self, *args, **kwargs):
      '''_removeChildOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeProperty (self, *args, **kwargs):
      '''_removeChildOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypePropertySet (self, *args, **kwargs):
      '''_removeChildOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypePropertySetAssign (self, *args, **kwargs):
      '''_removeChildOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeToken (self, *args, **kwargs):
      '''_removeChildOfTypeToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeTypeDef (self, *args, **kwargs):
      '''_removeChildOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeVisibility (self, *args, **kwargs):
      '''_removeChildOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def addChild (self, elementClass, name, typeString=''):
      '''Add a child element of the given subclass, name, and optional type string.'''
    ...
    def addChildOfCategory (self, *args, **kwargs):
      '''addChildOfCategory(self: MaterialX.PyMaterialXCore.Element, category: str, name: str = '') -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def asString (self, *args, **kwargs):
      '''asString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def changeChildCategory (self, *args, **kwargs):
      '''changeChildCategory(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element, arg1: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def clearContent (self, *args, **kwargs):
      '''clearContent(self: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def copyContentFrom (self, *args, **kwargs):
      '''copyContentFrom(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def createStringResolver (self, *args, **kwargs):
      '''createStringResolver(self: MaterialX.PyMaterialXCore.Element, geom: str = '') -> MaterialX_v1_38_8::StringResolver
'''
    ...
    def createValidChildName (self, *args, **kwargs):
      '''createValidChildName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getActiveColorSpace (self, *args, **kwargs):
      '''getActiveColorSpace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveFilePrefix (self, *args, **kwargs):
      '''getActiveFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveGeomPrefix (self, *args, **kwargs):
      '''getActiveGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveSourceUri (self, *args, **kwargs):
      '''getActiveSourceUri(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getAttribute (self, *args, **kwargs):
      '''getAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getAttributeNames (self, *args, **kwargs):
      '''getAttributeNames(self: MaterialX.PyMaterialXCore.Element) -> List[str]
'''
    ...
    def getCategory (self, *args, **kwargs):
      '''getCategory(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getChild (self, name):
      '''Return the child element, if any, with the given name.'''
    ...
    def getChildIndex (self, *args, **kwargs):
      '''getChildIndex(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> int
'''
    ...
    def getChildOfType (self, elementClass, name):
      '''Return the child element, if any, with the given name and subclass.'''
    ...
    def getChildren (self, *args, **kwargs):
      '''getChildren(self: MaterialX.PyMaterialXCore.Element) -> List[MaterialX.PyMaterialXCore.Element]
'''
    ...
    def getChildrenOfType (self, elementClass):
      '''Return a list of all child elements that are instances of the given type.
       The returned list maintains the order in which children were added.'''
    ...
    def getColorSpace (self, *args, **kwargs):
      '''getColorSpace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getDescendant (self, *args, **kwargs):
      '''getDescendant(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getDocString (self, *args, **kwargs):
      '''getDocString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getDocument (self, *args, **kwargs):
      '''getDocument(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::Document
'''
    ...
    def getFilePrefix (self, *args, **kwargs):
      '''getFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getGeomPrefix (self, *args, **kwargs):
      '''getGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getInheritString (self, *args, **kwargs):
      '''getInheritString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getInheritsFrom (self, *args, **kwargs):
      '''getInheritsFrom(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getName (self, *args, **kwargs):
      '''getName(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getNamePath (self, *args, **kwargs):
      '''getNamePath(self: MaterialX.PyMaterialXCore.Element, relativeTo: MaterialX.PyMaterialXCore.Element = None) -> str
'''
    ...
    def getNamespace (self, *args, **kwargs):
      '''getNamespace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getParent (self, *args, **kwargs):
      '''getParent(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getQualifiedName (self, *args, **kwargs):
      '''getQualifiedName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getRoot (self, *args, **kwargs):
      '''getRoot(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getSelf (self, *args, **kwargs):
      '''getSelf(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getSourceUri (self, *args, **kwargs):
      '''getSourceUri(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getUpstreamEdge (self, *args, **kwargs):
      '''getUpstreamEdge(self: MaterialX.PyMaterialXCore.Element, index: int = 0) -> MaterialX_v1_38_8::Edge
'''
    ...
    def getUpstreamEdgeCount (self, *args, **kwargs):
      '''getUpstreamEdgeCount(self: MaterialX.PyMaterialXCore.Element) -> int
'''
    ...
    def getUpstreamElement (self, *args, **kwargs):
      '''getUpstreamElement(self: MaterialX.PyMaterialXCore.Element, index: int = 0) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def hasAttribute (self, *args, **kwargs):
      '''hasAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> bool
'''
    ...
    def hasColorSpace (self, *args, **kwargs):
      '''hasColorSpace(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasFilePrefix (self, *args, **kwargs):
      '''hasFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasGeomPrefix (self, *args, **kwargs):
      '''hasGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritString (self, *args, **kwargs):
      '''hasInheritString(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritanceCycle (self, *args, **kwargs):
      '''hasInheritanceCycle(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritedBase (self, *args, **kwargs):
      '''hasInheritedBase(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasNamespace (self, *args, **kwargs):
      '''hasNamespace(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasSourceUri (self, *args, **kwargs):
      '''hasSourceUri(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def isA (self, elementClass, category=''):
      '''Return True if this element is an instance of the given subclass.
       If a category string is specified, then both subclass and category
       matches are required.'''
    ...
    def removeAttribute (self, *args, **kwargs):
      '''removeAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def removeChild (self, *args, **kwargs):
      '''removeChild(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def removeChildOfType (self, elementClass, name):
      '''Remove the typed child element, if any, with the given name.'''
    ...
    def setAttribute (self, *args, **kwargs):
      '''setAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str, arg1: str) -> None
'''
    ...
    def setCategory (self, *args, **kwargs):
      '''setCategory(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setChildIndex (self, *args, **kwargs):
      '''setChildIndex(self: MaterialX.PyMaterialXCore.Element, arg0: str, arg1: int) -> None
'''
    ...
    def setColorSpace (self, *args, **kwargs):
      '''setColorSpace(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setDocString (self, *args, **kwargs):
      '''setDocString(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setFilePrefix (self, *args, **kwargs):
      '''setFilePrefix(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setGeomPrefix (self, *args, **kwargs):
      '''setGeomPrefix(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setInheritString (self, *args, **kwargs):
      '''setInheritString(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setInheritsFrom (self, *args, **kwargs):
      '''setInheritsFrom(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def setName (self, *args, **kwargs):
      '''setName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setNamespace (self, *args, **kwargs):
      '''setNamespace(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setSourceUri (self, *args, **kwargs):
      '''setSourceUri(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def traverseGraph (self, *args, **kwargs):
      '''traverseGraph(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::GraphIterator
'''
    ...
    def traverseInheritance (self, *args, **kwargs):
      '''traverseInheritance(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::InheritanceIterator
'''
    ...
    def traverseTree (self, *args, **kwargs):
      '''traverseTree(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::TreeIterator
'''
    ...
    def validate (self, *args, **kwargs):
      '''validate(self: MaterialX.PyMaterialXCore.Element) -> Tuple[bool, str]
'''
    ...

def Node (*args):
      '''

'''      
    ...

class Node:
    def CATEGORY (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def NODE_DEF_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def TYPE_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def _addChildCollection (self, *args, **kwargs):
      '''_addChildCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Collection
'''
    ...
    def _addChildDocument (self, *args, **kwargs):
      '''_addChildDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Document
'''
    ...
    def _addChildGeomInfo (self, *args, **kwargs):
      '''_addChildGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomInfo
'''
    ...
    def _addChildGeomProp (self, *args, **kwargs):
      '''_addChildGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def _addChildImplementation (self, *args, **kwargs):
      '''_addChildImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Implementation
'''
    ...
    def _addChildLook (self, *args, **kwargs):
      '''_addChildLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Look
'''
    ...
    def _addChildMaterialAssign (self, *args, **kwargs):
      '''_addChildMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::MaterialAssign
'''
    ...
    def _addChildNode (self, *args, **kwargs):
      '''_addChildNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Node
'''
    ...
    def _addChildNodeDef (self, *args, **kwargs):
      '''_addChildNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeDef
'''
    ...
    def _addChildNodeGraph (self, *args, **kwargs):
      '''_addChildNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeGraph
'''
    ...
    def _addChildProperty (self, *args, **kwargs):
      '''_addChildProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Property
'''
    ...
    def _addChildPropertySet (self, *args, **kwargs):
      '''_addChildPropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySet
'''
    ...
    def _addChildPropertySetAssign (self, *args, **kwargs):
      '''_addChildPropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySetAssign
'''
    ...
    def _addChildToken (self, *args, **kwargs):
      '''_addChildToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Token
'''
    ...
    def _addChildTypeDef (self, *args, **kwargs):
      '''_addChildTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def _addChildVisibility (self, *args, **kwargs):
      '''_addChildVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Visibility
'''
    ...
    def _getChild (self, *args, **kwargs):
      '''_getChild(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def _getChildOfTypeCollection (self, *args, **kwargs):
      '''_getChildOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Collection
'''
    ...
    def _getChildOfTypeDocument (self, *args, **kwargs):
      '''_getChildOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Document
'''
    ...
    def _getChildOfTypeGeomInfo (self, *args, **kwargs):
      '''_getChildOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomInfo
'''
    ...
    def _getChildOfTypeGeomProp (self, *args, **kwargs):
      '''_getChildOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def _getChildOfTypeImplementation (self, *args, **kwargs):
      '''_getChildOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Implementation
'''
    ...
    def _getChildOfTypeLook (self, *args, **kwargs):
      '''_getChildOfTypeLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Look
'''
    ...
    def _getChildOfTypeMaterialAssign (self, *args, **kwargs):
      '''_getChildOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::MaterialAssign
'''
    ...
    def _getChildOfTypeNode (self, *args, **kwargs):
      '''_getChildOfTypeNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Node
'''
    ...
    def _getChildOfTypeNodeDef (self, *args, **kwargs):
      '''_getChildOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeDef
'''
    ...
    def _getChildOfTypeNodeGraph (self, *args, **kwargs):
      '''_getChildOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeGraph
'''
    ...
    def _getChildOfTypeProperty (self, *args, **kwargs):
      '''_getChildOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Property
'''
    ...
    def _getChildOfTypePropertySet (self, *args, **kwargs):
      '''_getChildOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySet
'''
    ...
    def _getChildOfTypePropertySetAssign (self, *args, **kwargs):
      '''_getChildOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySetAssign
'''
    ...
    def _getChildOfTypeToken (self, *args, **kwargs):
      '''_getChildOfTypeToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Token
'''
    ...
    def _getChildOfTypeTypeDef (self, *args, **kwargs):
      '''_getChildOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def _getChildOfTypeVisibility (self, *args, **kwargs):
      '''_getChildOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Visibility
'''
    ...
    def _getChildrenOfTypeCollection (self, *args, **kwargs):
      '''_getChildrenOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Collection]
'''
    ...
    def _getChildrenOfTypeDocument (self, *args, **kwargs):
      '''_getChildrenOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Document]
'''
    ...
    def _getChildrenOfTypeGeomInfo (self, *args, **kwargs):
      '''_getChildrenOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::GeomInfo]
'''
    ...
    def _getChildrenOfTypeGeomProp (self, *args, **kwargs):
      '''_getChildrenOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::GeomProp]
'''
    ...
    def _getChildrenOfTypeImplementation (self, *args, **kwargs):
      '''_getChildrenOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Implementation]
'''
    ...
    def _getChildrenOfTypeLook (self, *args, **kwargs):
      '''_getChildrenOfTypeLook(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Look]
'''
    ...
    def _getChildrenOfTypeMaterialAssign (self, *args, **kwargs):
      '''_getChildrenOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::MaterialAssign]
'''
    ...
    def _getChildrenOfTypeNode (self, *args, **kwargs):
      '''_getChildrenOfTypeNode(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Node]
'''
    ...
    def _getChildrenOfTypeNodeDef (self, *args, **kwargs):
      '''_getChildrenOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::NodeDef]
'''
    ...
    def _getChildrenOfTypeNodeGraph (self, *args, **kwargs):
      '''_getChildrenOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::NodeGraph]
'''
    ...
    def _getChildrenOfTypeProperty (self, *args, **kwargs):
      '''_getChildrenOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Property]
'''
    ...
    def _getChildrenOfTypePropertySet (self, *args, **kwargs):
      '''_getChildrenOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::PropertySet]
'''
    ...
    def _getChildrenOfTypePropertySetAssign (self, *args, **kwargs):
      '''_getChildrenOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::PropertySetAssign]
'''
    ...
    def _getChildrenOfTypeToken (self, *args, **kwargs):
      '''_getChildrenOfTypeToken(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Token]
'''
    ...
    def _getChildrenOfTypeTypeDef (self, *args, **kwargs):
      '''_getChildrenOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::TypeDef]
'''
    ...
    def _getChildrenOfTypeVisibility (self, *args, **kwargs):
      '''_getChildrenOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Visibility]
'''
    ...
    def _getInputValue (self, *args, **kwargs):
      '''_getInputValue(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str, arg1: str) -> MaterialX_v1_38_8::Value
'''
    ...
    def _removeChildOfTypeCollection (self, *args, **kwargs):
      '''_removeChildOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeDocument (self, *args, **kwargs):
      '''_removeChildOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeGeomInfo (self, *args, **kwargs):
      '''_removeChildOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeGeomProp (self, *args, **kwargs):
      '''_removeChildOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeImplementation (self, *args, **kwargs):
      '''_removeChildOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeLook (self, *args, **kwargs):
      '''_removeChildOfTypeLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeMaterialAssign (self, *args, **kwargs):
      '''_removeChildOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNode (self, *args, **kwargs):
      '''_removeChildOfTypeNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNodeDef (self, *args, **kwargs):
      '''_removeChildOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNodeGraph (self, *args, **kwargs):
      '''_removeChildOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeProperty (self, *args, **kwargs):
      '''_removeChildOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypePropertySet (self, *args, **kwargs):
      '''_removeChildOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypePropertySetAssign (self, *args, **kwargs):
      '''_removeChildOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeToken (self, *args, **kwargs):
      '''_removeChildOfTypeToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeTypeDef (self, *args, **kwargs):
      '''_removeChildOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeVisibility (self, *args, **kwargs):
      '''_removeChildOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _setInputValueboolean (self, *args, **kwargs):
      '''_setInputValueboolean(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: bool, type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValuebooleanarray (self, *args, **kwargs):
      '''_setInputValuebooleanarray(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: List[bool], type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValuecolor3 (self, *args, **kwargs):
      '''_setInputValuecolor3(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: MaterialX_v1_38_8::Color3, type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValuecolor4 (self, *args, **kwargs):
      '''_setInputValuecolor4(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: MaterialX_v1_38_8::Color4, type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValuefloat (self, *args, **kwargs):
      '''_setInputValuefloat(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: float, type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValuefloatarray (self, *args, **kwargs):
      '''_setInputValuefloatarray(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: List[float], type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValueinteger (self, *args, **kwargs):
      '''_setInputValueinteger(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: int, type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValueintegerarray (self, *args, **kwargs):
      '''_setInputValueintegerarray(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: List[int], type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValuematrix33 (self, *args, **kwargs):
      '''_setInputValuematrix33(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: MaterialX_v1_38_8::Matrix33, type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValuematrix44 (self, *args, **kwargs):
      '''_setInputValuematrix44(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: MaterialX_v1_38_8::Matrix44, type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValuestring (self, *args, **kwargs):
      '''_setInputValuestring(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: str, type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValuestringarray (self, *args, **kwargs):
      '''_setInputValuestringarray(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: List[str], type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValuevector2 (self, *args, **kwargs):
      '''_setInputValuevector2(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: MaterialX_v1_38_8::Vector2, type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValuevector3 (self, *args, **kwargs):
      '''_setInputValuevector3(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: MaterialX_v1_38_8::Vector3, type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValuevector4 (self, *args, **kwargs):
      '''_setInputValuevector4(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: MaterialX_v1_38_8::Vector4, type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def addBindInput (self, name, type='color3'):
      '''(Deprecated) Add a BindInput to this shader reference.'''
    ...
    def addBindParam (self, name, type='color3'):
      '''(Deprecated) Add a BindParam to this shader reference.'''
    ...
    def addChild (self, elementClass, name, typeString=''):
      '''Add a child element of the given subclass, name, and optional type string.'''
    ...
    def addChildOfCategory (self, *args, **kwargs):
      '''addChildOfCategory(self: MaterialX.PyMaterialXCore.Element, category: str, name: str = '') -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def addInput (self, *args, **kwargs):
      '''addInput(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str = '', type: str = 'color3') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def addInputFromNodeDef (self, *args, **kwargs):
      '''addInputFromNodeDef(self: MaterialX.PyMaterialXCore.Node, arg0: str) -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def addInputsFromNodeDef (self, *args, **kwargs):
      '''addInputsFromNodeDef(self: MaterialX.PyMaterialXCore.Node) -> None
'''
    ...
    def addOutput (self, *args, **kwargs):
      '''addOutput(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str = '', type: str = 'color3') -> MaterialX.PyMaterialXCore.Output
'''
    ...
    def addParameter (self, name):
      '''(Deprecated) Add a Parameter to this interface.'''
    ...
    def addShaderRef (self, name, nodeName):
      '''(Deprecated) Add a shader reference to this material element.'''
    ...
    def addToken (self, *args, **kwargs):
      '''addToken(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str = 'color3') -> MaterialX.PyMaterialXCore.Token
'''
    ...
    def asString (self, *args, **kwargs):
      '''asString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def changeChildCategory (self, *args, **kwargs):
      '''changeChildCategory(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element, arg1: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def clearContent (self, *args, **kwargs):
      '''clearContent(self: MaterialX.PyMaterialXCore.InterfaceElement) -> None
'''
    ...
    def copyContentFrom (self, *args, **kwargs):
      '''copyContentFrom(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def createStringResolver (self, *args, **kwargs):
      '''createStringResolver(self: MaterialX.PyMaterialXCore.Element, geom: str = '') -> MaterialX_v1_38_8::StringResolver
'''
    ...
    def createValidChildName (self, *args, **kwargs):
      '''createValidChildName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getActiveColorSpace (self, *args, **kwargs):
      '''getActiveColorSpace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveFilePrefix (self, *args, **kwargs):
      '''getActiveFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveGeomPrefix (self, *args, **kwargs):
      '''getActiveGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveInput (self, *args, **kwargs):
      '''getActiveInput(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def getActiveInputs (self, *args, **kwargs):
      '''getActiveInputs(self: MaterialX.PyMaterialXCore.InterfaceElement) -> List[MaterialX.PyMaterialXCore.Input]
'''
    ...
    def getActiveOutput (self, *args, **kwargs):
      '''getActiveOutput(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> MaterialX.PyMaterialXCore.Output
'''
    ...
    def getActiveOutputs (self, *args, **kwargs):
      '''getActiveOutputs(self: MaterialX.PyMaterialXCore.InterfaceElement) -> List[MaterialX.PyMaterialXCore.Output]
'''
    ...
    def getActiveParameters (self):
      '''(Deprecated) Return a vector of all parameters belonging to this interface, taking inheritance into account.'''
    ...
    def getActiveShaderRefs (self):
      '''(Deprecated) Return a vector of all shader references in this material element, taking material inheritance into account.'''
    ...
    def getActiveSourceUri (self, *args, **kwargs):
      '''getActiveSourceUri(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveToken (self, *args, **kwargs):
      '''getActiveToken(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> MaterialX.PyMaterialXCore.Token
'''
    ...
    def getActiveTokens (self, *args, **kwargs):
      '''getActiveTokens(self: MaterialX.PyMaterialXCore.InterfaceElement) -> List[MaterialX.PyMaterialXCore.Token]
'''
    ...
    def getActiveValueElement (self, *args, **kwargs):
      '''getActiveValueElement(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> MaterialX.PyMaterialXCore.ValueElement
'''
    ...
    def getActiveValueElements (self, *args, **kwargs):
      '''getActiveValueElements(self: MaterialX.PyMaterialXCore.InterfaceElement) -> List[MaterialX.PyMaterialXCore.ValueElement]
'''
    ...
    def getAttribute (self, *args, **kwargs):
      '''getAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getAttributeNames (self, *args, **kwargs):
      '''getAttributeNames(self: MaterialX.PyMaterialXCore.Element) -> List[str]
'''
    ...
    def getBindInputs (self):
      '''(Deprecated) Return a vector of all BindInput elements in this shader reference.'''
    ...
    def getBindParams (self):
      '''(Deprecated) Return a vector of all BindParam elements in this shader reference.'''
    ...
    def getBindTokens (self):
      '''(Deprecated) Return a vector of all BindToken elements in this shader reference.'''
    ...
    def getCategory (self, *args, **kwargs):
      '''getCategory(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getChild (self, name):
      '''Return the child element, if any, with the given name.'''
    ...
    def getChildIndex (self, *args, **kwargs):
      '''getChildIndex(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> int
'''
    ...
    def getChildOfType (self, elementClass, name):
      '''Return the child element, if any, with the given name and subclass.'''
    ...
    def getChildren (self, *args, **kwargs):
      '''getChildren(self: MaterialX.PyMaterialXCore.Element) -> List[MaterialX.PyMaterialXCore.Element]
'''
    ...
    def getChildrenOfType (self, elementClass):
      '''Return a list of all child elements that are instances of the given type.
       The returned list maintains the order in which children were added.'''
    ...
    def getColorSpace (self, *args, **kwargs):
      '''getColorSpace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getConnectedNode (self, *args, **kwargs):
      '''getConnectedNode(self: MaterialX.PyMaterialXCore.Node, arg0: str) -> MaterialX.PyMaterialXCore.Node
'''
    ...
    def getConnectedNodeName (self, *args, **kwargs):
      '''getConnectedNodeName(self: MaterialX.PyMaterialXCore.Node, arg0: str) -> str
'''
    ...
    def getConnectedOutput (self, *args, **kwargs):
      '''getConnectedOutput(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> MaterialX.PyMaterialXCore.Output
'''
    ...
    def getDeclaration (self, *args, **kwargs):
      '''getDeclaration(self: MaterialX.PyMaterialXCore.InterfaceElement, target: str = '') -> MaterialX.PyMaterialXCore.InterfaceElement
'''
    ...
    def getDefaultVersion (self, *args, **kwargs):
      '''getDefaultVersion(self: MaterialX.PyMaterialXCore.InterfaceElement) -> bool
'''
    ...
    def getDescendant (self, *args, **kwargs):
      '''getDescendant(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getDocString (self, *args, **kwargs):
      '''getDocString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getDocument (self, *args, **kwargs):
      '''getDocument(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::Document
'''
    ...
    def getDownstreamPorts (self, *args, **kwargs):
      '''getDownstreamPorts(self: MaterialX.PyMaterialXCore.Node) -> List[MaterialX.PyMaterialXCore.PortElement]
'''
    ...
    def getFilePrefix (self, *args, **kwargs):
      '''getFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getGeomPrefix (self, *args, **kwargs):
      '''getGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getImplementation (self, *args, **kwargs):
      '''getImplementation(self: MaterialX.PyMaterialXCore.Node, target: str = '') -> MaterialX.PyMaterialXCore.InterfaceElement
'''
    ...
    def getInheritString (self, *args, **kwargs):
      '''getInheritString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getInheritsFrom (self, *args, **kwargs):
      '''getInheritsFrom(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getInput (self, *args, **kwargs):
      '''getInput(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def getInputCount (self, *args, **kwargs):
      '''getInputCount(self: MaterialX.PyMaterialXCore.InterfaceElement) -> int
'''
    ...
    def getInputValue (self, name, target=''):
      '''Return the typed value of an input by its name, taking both the
       calling element and its declaration into account.  If the given
       input is not found, then None is returned.'''
    ...
    def getInputs (self, *args, **kwargs):
      '''getInputs(self: MaterialX.PyMaterialXCore.InterfaceElement) -> List[MaterialX.PyMaterialXCore.Input]
'''
    ...
    def getName (self, *args, **kwargs):
      '''getName(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getNamePath (self, *args, **kwargs):
      '''getNamePath(self: MaterialX.PyMaterialXCore.Element, relativeTo: MaterialX.PyMaterialXCore.Element = None) -> str
'''
    ...
    def getNamespace (self, *args, **kwargs):
      '''getNamespace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getNodeDef (self, *args, **kwargs):
      '''getNodeDef(self: MaterialX.PyMaterialXCore.Node, target: str = '', allowRoughMatch: bool = False) -> MaterialX.PyMaterialXCore.NodeDef
'''
    ...
    def getNodeDefString (self, *args, **kwargs):
      '''getNodeDefString(self: MaterialX.PyMaterialXCore.InterfaceElement) -> str
'''
    ...
    def getOutput (self, *args, **kwargs):
      '''getOutput(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> MaterialX.PyMaterialXCore.Output
'''
    ...
    def getOutputCount (self, *args, **kwargs):
      '''getOutputCount(self: MaterialX.PyMaterialXCore.InterfaceElement) -> int
'''
    ...
    def getOutputs (self, *args, **kwargs):
      '''getOutputs(self: MaterialX.PyMaterialXCore.InterfaceElement) -> List[MaterialX.PyMaterialXCore.Output]
'''
    ...
    def getParameterValue (self, name, target=''):
      '''(Deprecated) Return the typed value of a parameter by its name.'''
    ...
    def getParameterValueString (self, name):
      '''(Deprecated) Return the value string of a parameter by its name.'''
    ...
    def getParameters (self):
      '''(Deprecated) Return a vector of all Parameter elements.'''
    ...
    def getParent (self, *args, **kwargs):
      '''getParent(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getQualifiedName (self, *args, **kwargs):
      '''getQualifiedName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getReferencedNodeDef (self):
      '''(Deprecated) Return the first NodeDef that declares this node.'''
    ...
    def getRoot (self, *args, **kwargs):
      '''getRoot(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getSelf (self, *args, **kwargs):
      '''getSelf(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getShaderRefs (self):
      '''(Deprecated) Return a vector of all shader references in this material element.'''
    ...
    def getSourceUri (self, *args, **kwargs):
      '''getSourceUri(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getTarget (self, *args, **kwargs):
      '''getTarget(self: MaterialX.PyMaterialXCore.InterfaceElement) -> str
'''
    ...
    def getToken (self, *args, **kwargs):
      '''getToken(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> MaterialX.PyMaterialXCore.Token
'''
    ...
    def getTokenValue (self, *args, **kwargs):
      '''getTokenValue(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> str
'''
    ...
    def getTokens (self, *args, **kwargs):
      '''getTokens(self: MaterialX.PyMaterialXCore.InterfaceElement) -> List[MaterialX.PyMaterialXCore.Token]
'''
    ...
    def getType (self, *args, **kwargs):
      '''getType(self: MaterialX.PyMaterialXCore.TypedElement) -> str
'''
    ...
    def getTypeDef (self, *args, **kwargs):
      '''getTypeDef(self: MaterialX.PyMaterialXCore.TypedElement) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def getUpstreamEdge (self, *args, **kwargs):
      '''getUpstreamEdge(self: MaterialX.PyMaterialXCore.Element, index: int = 0) -> MaterialX_v1_38_8::Edge
'''
    ...
    def getUpstreamEdgeCount (self, *args, **kwargs):
      '''getUpstreamEdgeCount(self: MaterialX.PyMaterialXCore.Element) -> int
'''
    ...
    def getUpstreamElement (self, *args, **kwargs):
      '''getUpstreamElement(self: MaterialX.PyMaterialXCore.Element, index: int = 0) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getVersionIntegers (self, *args, **kwargs):
      '''getVersionIntegers(self: MaterialX.PyMaterialXCore.InterfaceElement) -> Tuple[int, int]
'''
    ...
    def getVersionString (self, *args, **kwargs):
      '''getVersionString(self: MaterialX.PyMaterialXCore.InterfaceElement) -> str
'''
    ...
    def hasAttribute (self, *args, **kwargs):
      '''hasAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> bool
'''
    ...
    def hasColorSpace (self, *args, **kwargs):
      '''hasColorSpace(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasExactInputMatch (self, *args, **kwargs):
      '''hasExactInputMatch(self: MaterialX.PyMaterialXCore.InterfaceElement, declaration: MaterialX.PyMaterialXCore.InterfaceElement, message: str = None) -> bool
'''
    ...
    def hasFilePrefix (self, *args, **kwargs):
      '''hasFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasGeomPrefix (self, *args, **kwargs):
      '''hasGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritString (self, *args, **kwargs):
      '''hasInheritString(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritanceCycle (self, *args, **kwargs):
      '''hasInheritanceCycle(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritedBase (self, *args, **kwargs):
      '''hasInheritedBase(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasNamespace (self, *args, **kwargs):
      '''hasNamespace(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasNodeDefString (self, *args, **kwargs):
      '''hasNodeDefString(self: MaterialX.PyMaterialXCore.InterfaceElement) -> bool
'''
    ...
    def hasSourceUri (self, *args, **kwargs):
      '''hasSourceUri(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasTarget (self, *args, **kwargs):
      '''hasTarget(self: MaterialX.PyMaterialXCore.InterfaceElement) -> bool
'''
    ...
    def hasType (self, *args, **kwargs):
      '''hasType(self: MaterialX.PyMaterialXCore.TypedElement) -> bool
'''
    ...
    def hasVersionString (self, *args, **kwargs):
      '''hasVersionString(self: MaterialX.PyMaterialXCore.InterfaceElement) -> bool
'''
    ...
    def isA (self, elementClass, category=''):
      '''Return True if this element is an instance of the given subclass.
       If a category string is specified, then both subclass and category
       matches are required.'''
    ...
    def isMultiOutputType (self, *args, **kwargs):
      '''isMultiOutputType(self: MaterialX.PyMaterialXCore.TypedElement) -> bool
'''
    ...
    def removeAttribute (self, *args, **kwargs):
      '''removeAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def removeChild (self, *args, **kwargs):
      '''removeChild(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def removeChildOfType (self, elementClass, name):
      '''Remove the typed child element, if any, with the given name.'''
    ...
    def removeInput (self, *args, **kwargs):
      '''removeInput(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> None
'''
    ...
    def removeOutput (self, *args, **kwargs):
      '''removeOutput(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> None
'''
    ...
    def removeToken (self, *args, **kwargs):
      '''removeToken(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> None
'''
    ...
    def setAttribute (self, *args, **kwargs):
      '''setAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str, arg1: str) -> None
'''
    ...
    def setCategory (self, *args, **kwargs):
      '''setCategory(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setChildIndex (self, *args, **kwargs):
      '''setChildIndex(self: MaterialX.PyMaterialXCore.Element, arg0: str, arg1: int) -> None
'''
    ...
    def setColorSpace (self, *args, **kwargs):
      '''setColorSpace(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setConnectedNode (self, *args, **kwargs):
      '''setConnectedNode(self: MaterialX.PyMaterialXCore.Node, arg0: str, arg1: MaterialX.PyMaterialXCore.Node) -> None
'''
    ...
    def setConnectedNodeName (self, *args, **kwargs):
      '''setConnectedNodeName(self: MaterialX.PyMaterialXCore.Node, arg0: str, arg1: str) -> None
'''
    ...
    def setConnectedOutput (self, *args, **kwargs):
      '''setConnectedOutput(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str, arg1: MaterialX.PyMaterialXCore.Output) -> None
'''
    ...
    def setDefaultVersion (self, *args, **kwargs):
      '''setDefaultVersion(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: bool) -> None
'''
    ...
    def setDocString (self, *args, **kwargs):
      '''setDocString(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setFilePrefix (self, *args, **kwargs):
      '''setFilePrefix(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setGeomPrefix (self, *args, **kwargs):
      '''setGeomPrefix(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setInheritString (self, *args, **kwargs):
      '''setInheritString(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setInheritsFrom (self, *args, **kwargs):
      '''setInheritsFrom(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def setInputValue (self, name, value, typeString=''):
      '''Set the typed value of an input by its name, creating a child element
       to hold the input if needed.'''
    ...
    def setName (self, *args, **kwargs):
      '''setName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setNamespace (self, *args, **kwargs):
      '''setNamespace(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setNodeDefString (self, *args, **kwargs):
      '''setNodeDefString(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> None
'''
    ...
    def setParameterValue (self, name, value, typeString=''):
      '''(Deprecated) Set the typed value of a parameter by its name.'''
    ...
    def setSourceUri (self, *args, **kwargs):
      '''setSourceUri(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setTarget (self, *args, **kwargs):
      '''setTarget(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> None
'''
    ...
    def setTokenValue (self, *args, **kwargs):
      '''setTokenValue(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str, arg1: str) -> MaterialX.PyMaterialXCore.Token
'''
    ...
    def setType (self, *args, **kwargs):
      '''setType(self: MaterialX.PyMaterialXCore.TypedElement, arg0: str) -> None
'''
    ...
    def setVersionIntegers (self, *args, **kwargs):
      '''setVersionIntegers(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: int, arg1: int) -> None
'''
    ...
    def setVersionString (self, *args, **kwargs):
      '''setVersionString(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> None
'''
    ...
    def traverseGraph (self, *args, **kwargs):
      '''traverseGraph(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::GraphIterator
'''
    ...
    def traverseInheritance (self, *args, **kwargs):
      '''traverseInheritance(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::InheritanceIterator
'''
    ...
    def traverseTree (self, *args, **kwargs):
      '''traverseTree(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::TreeIterator
'''
    ...
    def validate (self, *args, **kwargs):
      '''validate(self: MaterialX.PyMaterialXCore.Element) -> Tuple[bool, str]
'''
    ...

def NodeDef (*args):
      '''

'''      
    ...

class NodeDef:
    def ADJUSTMENT_NODE_GROUP (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def CATEGORY (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def CONDITIONAL_NODE_GROUP (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def GEOMETRIC_NODE_GROUP (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def NODE_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def NODE_DEF_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def ORGANIZATION_NODE_GROUP (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def PROCEDURAL_NODE_GROUP (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def TEXTURE_NODE_GROUP (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def TYPE_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def _addChildCollection (self, *args, **kwargs):
      '''_addChildCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Collection
'''
    ...
    def _addChildDocument (self, *args, **kwargs):
      '''_addChildDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Document
'''
    ...
    def _addChildGeomInfo (self, *args, **kwargs):
      '''_addChildGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomInfo
'''
    ...
    def _addChildGeomProp (self, *args, **kwargs):
      '''_addChildGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def _addChildImplementation (self, *args, **kwargs):
      '''_addChildImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Implementation
'''
    ...
    def _addChildLook (self, *args, **kwargs):
      '''_addChildLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Look
'''
    ...
    def _addChildMaterialAssign (self, *args, **kwargs):
      '''_addChildMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::MaterialAssign
'''
    ...
    def _addChildNode (self, *args, **kwargs):
      '''_addChildNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Node
'''
    ...
    def _addChildNodeDef (self, *args, **kwargs):
      '''_addChildNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeDef
'''
    ...
    def _addChildNodeGraph (self, *args, **kwargs):
      '''_addChildNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeGraph
'''
    ...
    def _addChildProperty (self, *args, **kwargs):
      '''_addChildProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Property
'''
    ...
    def _addChildPropertySet (self, *args, **kwargs):
      '''_addChildPropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySet
'''
    ...
    def _addChildPropertySetAssign (self, *args, **kwargs):
      '''_addChildPropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySetAssign
'''
    ...
    def _addChildToken (self, *args, **kwargs):
      '''_addChildToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Token
'''
    ...
    def _addChildTypeDef (self, *args, **kwargs):
      '''_addChildTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def _addChildVisibility (self, *args, **kwargs):
      '''_addChildVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Visibility
'''
    ...
    def _getChild (self, *args, **kwargs):
      '''_getChild(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def _getChildOfTypeCollection (self, *args, **kwargs):
      '''_getChildOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Collection
'''
    ...
    def _getChildOfTypeDocument (self, *args, **kwargs):
      '''_getChildOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Document
'''
    ...
    def _getChildOfTypeGeomInfo (self, *args, **kwargs):
      '''_getChildOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomInfo
'''
    ...
    def _getChildOfTypeGeomProp (self, *args, **kwargs):
      '''_getChildOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def _getChildOfTypeImplementation (self, *args, **kwargs):
      '''_getChildOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Implementation
'''
    ...
    def _getChildOfTypeLook (self, *args, **kwargs):
      '''_getChildOfTypeLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Look
'''
    ...
    def _getChildOfTypeMaterialAssign (self, *args, **kwargs):
      '''_getChildOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::MaterialAssign
'''
    ...
    def _getChildOfTypeNode (self, *args, **kwargs):
      '''_getChildOfTypeNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Node
'''
    ...
    def _getChildOfTypeNodeDef (self, *args, **kwargs):
      '''_getChildOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeDef
'''
    ...
    def _getChildOfTypeNodeGraph (self, *args, **kwargs):
      '''_getChildOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeGraph
'''
    ...
    def _getChildOfTypeProperty (self, *args, **kwargs):
      '''_getChildOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Property
'''
    ...
    def _getChildOfTypePropertySet (self, *args, **kwargs):
      '''_getChildOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySet
'''
    ...
    def _getChildOfTypePropertySetAssign (self, *args, **kwargs):
      '''_getChildOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySetAssign
'''
    ...
    def _getChildOfTypeToken (self, *args, **kwargs):
      '''_getChildOfTypeToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Token
'''
    ...
    def _getChildOfTypeTypeDef (self, *args, **kwargs):
      '''_getChildOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def _getChildOfTypeVisibility (self, *args, **kwargs):
      '''_getChildOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Visibility
'''
    ...
    def _getChildrenOfTypeCollection (self, *args, **kwargs):
      '''_getChildrenOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Collection]
'''
    ...
    def _getChildrenOfTypeDocument (self, *args, **kwargs):
      '''_getChildrenOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Document]
'''
    ...
    def _getChildrenOfTypeGeomInfo (self, *args, **kwargs):
      '''_getChildrenOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::GeomInfo]
'''
    ...
    def _getChildrenOfTypeGeomProp (self, *args, **kwargs):
      '''_getChildrenOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::GeomProp]
'''
    ...
    def _getChildrenOfTypeImplementation (self, *args, **kwargs):
      '''_getChildrenOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Implementation]
'''
    ...
    def _getChildrenOfTypeLook (self, *args, **kwargs):
      '''_getChildrenOfTypeLook(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Look]
'''
    ...
    def _getChildrenOfTypeMaterialAssign (self, *args, **kwargs):
      '''_getChildrenOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::MaterialAssign]
'''
    ...
    def _getChildrenOfTypeNode (self, *args, **kwargs):
      '''_getChildrenOfTypeNode(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Node]
'''
    ...
    def _getChildrenOfTypeNodeDef (self, *args, **kwargs):
      '''_getChildrenOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::NodeDef]
'''
    ...
    def _getChildrenOfTypeNodeGraph (self, *args, **kwargs):
      '''_getChildrenOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::NodeGraph]
'''
    ...
    def _getChildrenOfTypeProperty (self, *args, **kwargs):
      '''_getChildrenOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Property]
'''
    ...
    def _getChildrenOfTypePropertySet (self, *args, **kwargs):
      '''_getChildrenOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::PropertySet]
'''
    ...
    def _getChildrenOfTypePropertySetAssign (self, *args, **kwargs):
      '''_getChildrenOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::PropertySetAssign]
'''
    ...
    def _getChildrenOfTypeToken (self, *args, **kwargs):
      '''_getChildrenOfTypeToken(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Token]
'''
    ...
    def _getChildrenOfTypeTypeDef (self, *args, **kwargs):
      '''_getChildrenOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::TypeDef]
'''
    ...
    def _getChildrenOfTypeVisibility (self, *args, **kwargs):
      '''_getChildrenOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Visibility]
'''
    ...
    def _getInputValue (self, *args, **kwargs):
      '''_getInputValue(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str, arg1: str) -> MaterialX_v1_38_8::Value
'''
    ...
    def _removeChildOfTypeCollection (self, *args, **kwargs):
      '''_removeChildOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeDocument (self, *args, **kwargs):
      '''_removeChildOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeGeomInfo (self, *args, **kwargs):
      '''_removeChildOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeGeomProp (self, *args, **kwargs):
      '''_removeChildOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeImplementation (self, *args, **kwargs):
      '''_removeChildOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeLook (self, *args, **kwargs):
      '''_removeChildOfTypeLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeMaterialAssign (self, *args, **kwargs):
      '''_removeChildOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNode (self, *args, **kwargs):
      '''_removeChildOfTypeNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNodeDef (self, *args, **kwargs):
      '''_removeChildOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNodeGraph (self, *args, **kwargs):
      '''_removeChildOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeProperty (self, *args, **kwargs):
      '''_removeChildOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypePropertySet (self, *args, **kwargs):
      '''_removeChildOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypePropertySetAssign (self, *args, **kwargs):
      '''_removeChildOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeToken (self, *args, **kwargs):
      '''_removeChildOfTypeToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeTypeDef (self, *args, **kwargs):
      '''_removeChildOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeVisibility (self, *args, **kwargs):
      '''_removeChildOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _setInputValueboolean (self, *args, **kwargs):
      '''_setInputValueboolean(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: bool, type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValuebooleanarray (self, *args, **kwargs):
      '''_setInputValuebooleanarray(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: List[bool], type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValuecolor3 (self, *args, **kwargs):
      '''_setInputValuecolor3(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: MaterialX_v1_38_8::Color3, type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValuecolor4 (self, *args, **kwargs):
      '''_setInputValuecolor4(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: MaterialX_v1_38_8::Color4, type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValuefloat (self, *args, **kwargs):
      '''_setInputValuefloat(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: float, type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValuefloatarray (self, *args, **kwargs):
      '''_setInputValuefloatarray(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: List[float], type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValueinteger (self, *args, **kwargs):
      '''_setInputValueinteger(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: int, type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValueintegerarray (self, *args, **kwargs):
      '''_setInputValueintegerarray(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: List[int], type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValuematrix33 (self, *args, **kwargs):
      '''_setInputValuematrix33(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: MaterialX_v1_38_8::Matrix33, type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValuematrix44 (self, *args, **kwargs):
      '''_setInputValuematrix44(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: MaterialX_v1_38_8::Matrix44, type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValuestring (self, *args, **kwargs):
      '''_setInputValuestring(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: str, type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValuestringarray (self, *args, **kwargs):
      '''_setInputValuestringarray(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: List[str], type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValuevector2 (self, *args, **kwargs):
      '''_setInputValuevector2(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: MaterialX_v1_38_8::Vector2, type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValuevector3 (self, *args, **kwargs):
      '''_setInputValuevector3(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: MaterialX_v1_38_8::Vector3, type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValuevector4 (self, *args, **kwargs):
      '''_setInputValuevector4(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: MaterialX_v1_38_8::Vector4, type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def addBindInput (self, name, type='color3'):
      '''(Deprecated) Add a BindInput to this shader reference.'''
    ...
    def addBindParam (self, name, type='color3'):
      '''(Deprecated) Add a BindParam to this shader reference.'''
    ...
    def addChild (self, elementClass, name, typeString=''):
      '''Add a child element of the given subclass, name, and optional type string.'''
    ...
    def addChildOfCategory (self, *args, **kwargs):
      '''addChildOfCategory(self: MaterialX.PyMaterialXCore.Element, category: str, name: str = '') -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def addInput (self, *args, **kwargs):
      '''addInput(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str = '', type: str = 'color3') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def addOutput (self, *args, **kwargs):
      '''addOutput(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str = '', type: str = 'color3') -> MaterialX.PyMaterialXCore.Output
'''
    ...
    def addParameter (self, name):
      '''(Deprecated) Add a Parameter to this interface.'''
    ...
    def addToken (self, *args, **kwargs):
      '''addToken(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str = 'color3') -> MaterialX.PyMaterialXCore.Token
'''
    ...
    def asString (self, *args, **kwargs):
      '''asString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def changeChildCategory (self, *args, **kwargs):
      '''changeChildCategory(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element, arg1: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def clearContent (self, *args, **kwargs):
      '''clearContent(self: MaterialX.PyMaterialXCore.InterfaceElement) -> None
'''
    ...
    def copyContentFrom (self, *args, **kwargs):
      '''copyContentFrom(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def createStringResolver (self, *args, **kwargs):
      '''createStringResolver(self: MaterialX.PyMaterialXCore.Element, geom: str = '') -> MaterialX_v1_38_8::StringResolver
'''
    ...
    def createValidChildName (self, *args, **kwargs):
      '''createValidChildName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getActiveColorSpace (self, *args, **kwargs):
      '''getActiveColorSpace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveFilePrefix (self, *args, **kwargs):
      '''getActiveFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveGeomPrefix (self, *args, **kwargs):
      '''getActiveGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveInput (self, *args, **kwargs):
      '''getActiveInput(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def getActiveInputs (self, *args, **kwargs):
      '''getActiveInputs(self: MaterialX.PyMaterialXCore.InterfaceElement) -> List[MaterialX.PyMaterialXCore.Input]
'''
    ...
    def getActiveOutput (self, *args, **kwargs):
      '''getActiveOutput(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> MaterialX.PyMaterialXCore.Output
'''
    ...
    def getActiveOutputs (self, *args, **kwargs):
      '''getActiveOutputs(self: MaterialX.PyMaterialXCore.InterfaceElement) -> List[MaterialX.PyMaterialXCore.Output]
'''
    ...
    def getActiveParameters (self):
      '''(Deprecated) Return a vector of all parameters belonging to this interface, taking inheritance into account.'''
    ...
    def getActiveSourceUri (self, *args, **kwargs):
      '''getActiveSourceUri(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveToken (self, *args, **kwargs):
      '''getActiveToken(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> MaterialX.PyMaterialXCore.Token
'''
    ...
    def getActiveTokens (self, *args, **kwargs):
      '''getActiveTokens(self: MaterialX.PyMaterialXCore.InterfaceElement) -> List[MaterialX.PyMaterialXCore.Token]
'''
    ...
    def getActiveValueElement (self, *args, **kwargs):
      '''getActiveValueElement(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> MaterialX.PyMaterialXCore.ValueElement
'''
    ...
    def getActiveValueElements (self, *args, **kwargs):
      '''getActiveValueElements(self: MaterialX.PyMaterialXCore.InterfaceElement) -> List[MaterialX.PyMaterialXCore.ValueElement]
'''
    ...
    def getAttribute (self, *args, **kwargs):
      '''getAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getAttributeNames (self, *args, **kwargs):
      '''getAttributeNames(self: MaterialX.PyMaterialXCore.Element) -> List[str]
'''
    ...
    def getBindInputs (self):
      '''(Deprecated) Return a vector of all BindInput elements in this shader reference.'''
    ...
    def getBindParams (self):
      '''(Deprecated) Return a vector of all BindParam elements in this shader reference.'''
    ...
    def getBindTokens (self):
      '''(Deprecated) Return a vector of all BindToken elements in this shader reference.'''
    ...
    def getCategory (self, *args, **kwargs):
      '''getCategory(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getChild (self, name):
      '''Return the child element, if any, with the given name.'''
    ...
    def getChildIndex (self, *args, **kwargs):
      '''getChildIndex(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> int
'''
    ...
    def getChildOfType (self, elementClass, name):
      '''Return the child element, if any, with the given name and subclass.'''
    ...
    def getChildren (self, *args, **kwargs):
      '''getChildren(self: MaterialX.PyMaterialXCore.Element) -> List[MaterialX.PyMaterialXCore.Element]
'''
    ...
    def getChildrenOfType (self, elementClass):
      '''Return a list of all child elements that are instances of the given type.
       The returned list maintains the order in which children were added.'''
    ...
    def getColorSpace (self, *args, **kwargs):
      '''getColorSpace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getConnectedOutput (self, *args, **kwargs):
      '''getConnectedOutput(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> MaterialX.PyMaterialXCore.Output
'''
    ...
    def getDeclaration (self, *args, **kwargs):
      '''getDeclaration(self: MaterialX.PyMaterialXCore.InterfaceElement, target: str = '') -> MaterialX.PyMaterialXCore.InterfaceElement
'''
    ...
    def getDefaultVersion (self, *args, **kwargs):
      '''getDefaultVersion(self: MaterialX.PyMaterialXCore.InterfaceElement) -> bool
'''
    ...
    def getDescendant (self, *args, **kwargs):
      '''getDescendant(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getDocString (self, *args, **kwargs):
      '''getDocString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getDocument (self, *args, **kwargs):
      '''getDocument(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::Document
'''
    ...
    def getFilePrefix (self, *args, **kwargs):
      '''getFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getGeomPrefix (self, *args, **kwargs):
      '''getGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getImplementation (self, *args, **kwargs):
      '''getImplementation(*args, **kwargs)
Overloaded function.

1. getImplementation(self: MaterialX.PyMaterialXCore.NodeDef, arg0: str) -> MaterialX.PyMaterialXCore.InterfaceElement

2. getImplementation(self: MaterialX.PyMaterialXCore.NodeDef, target: str = '') -> MaterialX.PyMaterialXCore.InterfaceElement
'''
    ...
    def getInheritString (self, *args, **kwargs):
      '''getInheritString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getInheritsFrom (self, *args, **kwargs):
      '''getInheritsFrom(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getInput (self, *args, **kwargs):
      '''getInput(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def getInputCount (self, *args, **kwargs):
      '''getInputCount(self: MaterialX.PyMaterialXCore.InterfaceElement) -> int
'''
    ...
    def getInputValue (self, name, target=''):
      '''Return the typed value of an input by its name, taking both the
       calling element and its declaration into account.  If the given
       input is not found, then None is returned.'''
    ...
    def getInputs (self, *args, **kwargs):
      '''getInputs(self: MaterialX.PyMaterialXCore.InterfaceElement) -> List[MaterialX.PyMaterialXCore.Input]
'''
    ...
    def getName (self, *args, **kwargs):
      '''getName(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getNamePath (self, *args, **kwargs):
      '''getNamePath(self: MaterialX.PyMaterialXCore.Element, relativeTo: MaterialX.PyMaterialXCore.Element = None) -> str
'''
    ...
    def getNamespace (self, *args, **kwargs):
      '''getNamespace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getNodeDefString (self, *args, **kwargs):
      '''getNodeDefString(self: MaterialX.PyMaterialXCore.InterfaceElement) -> str
'''
    ...
    def getNodeGroup (self, *args, **kwargs):
      '''getNodeGroup(self: MaterialX.PyMaterialXCore.NodeDef) -> str
'''
    ...
    def getNodeString (self, *args, **kwargs):
      '''getNodeString(self: MaterialX.PyMaterialXCore.NodeDef) -> str
'''
    ...
    def getOutput (self, *args, **kwargs):
      '''getOutput(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> MaterialX.PyMaterialXCore.Output
'''
    ...
    def getOutputCount (self, *args, **kwargs):
      '''getOutputCount(self: MaterialX.PyMaterialXCore.InterfaceElement) -> int
'''
    ...
    def getOutputs (self, *args, **kwargs):
      '''getOutputs(self: MaterialX.PyMaterialXCore.InterfaceElement) -> List[MaterialX.PyMaterialXCore.Output]
'''
    ...
    def getParameterValue (self, name, target=''):
      '''(Deprecated) Return the typed value of a parameter by its name.'''
    ...
    def getParameterValueString (self, name):
      '''(Deprecated) Return the value string of a parameter by its name.'''
    ...
    def getParameters (self):
      '''(Deprecated) Return a vector of all Parameter elements.'''
    ...
    def getParent (self, *args, **kwargs):
      '''getParent(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getQualifiedName (self, *args, **kwargs):
      '''getQualifiedName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getRoot (self, *args, **kwargs):
      '''getRoot(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getSelf (self, *args, **kwargs):
      '''getSelf(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getSourceUri (self, *args, **kwargs):
      '''getSourceUri(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getTarget (self, *args, **kwargs):
      '''getTarget(self: MaterialX.PyMaterialXCore.InterfaceElement) -> str
'''
    ...
    def getToken (self, *args, **kwargs):
      '''getToken(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> MaterialX.PyMaterialXCore.Token
'''
    ...
    def getTokenValue (self, *args, **kwargs):
      '''getTokenValue(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> str
'''
    ...
    def getTokens (self, *args, **kwargs):
      '''getTokens(self: MaterialX.PyMaterialXCore.InterfaceElement) -> List[MaterialX.PyMaterialXCore.Token]
'''
    ...
    def getType (self, *args, **kwargs):
      '''getType(self: MaterialX.PyMaterialXCore.TypedElement) -> str
'''
    ...
    def getTypeDef (self, *args, **kwargs):
      '''getTypeDef(self: MaterialX.PyMaterialXCore.TypedElement) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def getUpstreamEdge (self, *args, **kwargs):
      '''getUpstreamEdge(self: MaterialX.PyMaterialXCore.Element, index: int = 0) -> MaterialX_v1_38_8::Edge
'''
    ...
    def getUpstreamEdgeCount (self, *args, **kwargs):
      '''getUpstreamEdgeCount(self: MaterialX.PyMaterialXCore.Element) -> int
'''
    ...
    def getUpstreamElement (self, *args, **kwargs):
      '''getUpstreamElement(self: MaterialX.PyMaterialXCore.Element, index: int = 0) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getVersionIntegers (self, *args, **kwargs):
      '''getVersionIntegers(self: MaterialX.PyMaterialXCore.InterfaceElement) -> Tuple[int, int]
'''
    ...
    def getVersionString (self, *args, **kwargs):
      '''getVersionString(self: MaterialX.PyMaterialXCore.InterfaceElement) -> str
'''
    ...
    def hasAttribute (self, *args, **kwargs):
      '''hasAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> bool
'''
    ...
    def hasColorSpace (self, *args, **kwargs):
      '''hasColorSpace(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasExactInputMatch (self, *args, **kwargs):
      '''hasExactInputMatch(self: MaterialX.PyMaterialXCore.InterfaceElement, declaration: MaterialX.PyMaterialXCore.InterfaceElement, message: str = None) -> bool
'''
    ...
    def hasFilePrefix (self, *args, **kwargs):
      '''hasFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasGeomPrefix (self, *args, **kwargs):
      '''hasGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritString (self, *args, **kwargs):
      '''hasInheritString(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritanceCycle (self, *args, **kwargs):
      '''hasInheritanceCycle(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritedBase (self, *args, **kwargs):
      '''hasInheritedBase(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasNamespace (self, *args, **kwargs):
      '''hasNamespace(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasNodeDefString (self, *args, **kwargs):
      '''hasNodeDefString(self: MaterialX.PyMaterialXCore.InterfaceElement) -> bool
'''
    ...
    def hasNodeGroup (self, *args, **kwargs):
      '''hasNodeGroup(self: MaterialX.PyMaterialXCore.NodeDef) -> bool
'''
    ...
    def hasNodeString (self, *args, **kwargs):
      '''hasNodeString(self: MaterialX.PyMaterialXCore.NodeDef) -> bool
'''
    ...
    def hasSourceUri (self, *args, **kwargs):
      '''hasSourceUri(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasTarget (self, *args, **kwargs):
      '''hasTarget(self: MaterialX.PyMaterialXCore.InterfaceElement) -> bool
'''
    ...
    def hasType (self, *args, **kwargs):
      '''hasType(self: MaterialX.PyMaterialXCore.TypedElement) -> bool
'''
    ...
    def hasVersionString (self, *args, **kwargs):
      '''hasVersionString(self: MaterialX.PyMaterialXCore.InterfaceElement) -> bool
'''
    ...
    def isA (self, elementClass, category=''):
      '''Return True if this element is an instance of the given subclass.
       If a category string is specified, then both subclass and category
       matches are required.'''
    ...
    def isMultiOutputType (self, *args, **kwargs):
      '''isMultiOutputType(self: MaterialX.PyMaterialXCore.TypedElement) -> bool
'''
    ...
    def isVersionCompatible (self, *args, **kwargs):
      '''isVersionCompatible(self: MaterialX.PyMaterialXCore.NodeDef, arg0: str) -> bool
'''
    ...
    def removeAttribute (self, *args, **kwargs):
      '''removeAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def removeChild (self, *args, **kwargs):
      '''removeChild(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def removeChildOfType (self, elementClass, name):
      '''Remove the typed child element, if any, with the given name.'''
    ...
    def removeInput (self, *args, **kwargs):
      '''removeInput(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> None
'''
    ...
    def removeOutput (self, *args, **kwargs):
      '''removeOutput(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> None
'''
    ...
    def removeToken (self, *args, **kwargs):
      '''removeToken(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> None
'''
    ...
    def setAttribute (self, *args, **kwargs):
      '''setAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str, arg1: str) -> None
'''
    ...
    def setCategory (self, *args, **kwargs):
      '''setCategory(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setChildIndex (self, *args, **kwargs):
      '''setChildIndex(self: MaterialX.PyMaterialXCore.Element, arg0: str, arg1: int) -> None
'''
    ...
    def setColorSpace (self, *args, **kwargs):
      '''setColorSpace(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setConnectedOutput (self, *args, **kwargs):
      '''setConnectedOutput(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str, arg1: MaterialX.PyMaterialXCore.Output) -> None
'''
    ...
    def setDefaultVersion (self, *args, **kwargs):
      '''setDefaultVersion(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: bool) -> None
'''
    ...
    def setDocString (self, *args, **kwargs):
      '''setDocString(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setFilePrefix (self, *args, **kwargs):
      '''setFilePrefix(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setGeomPrefix (self, *args, **kwargs):
      '''setGeomPrefix(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setInheritString (self, *args, **kwargs):
      '''setInheritString(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setInheritsFrom (self, *args, **kwargs):
      '''setInheritsFrom(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def setInputValue (self, name, value, typeString=''):
      '''Set the typed value of an input by its name, creating a child element
       to hold the input if needed.'''
    ...
    def setName (self, *args, **kwargs):
      '''setName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setNamespace (self, *args, **kwargs):
      '''setNamespace(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setNodeDefString (self, *args, **kwargs):
      '''setNodeDefString(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> None
'''
    ...
    def setNodeGroup (self, *args, **kwargs):
      '''setNodeGroup(self: MaterialX.PyMaterialXCore.NodeDef, arg0: str) -> None
'''
    ...
    def setNodeString (self, *args, **kwargs):
      '''setNodeString(self: MaterialX.PyMaterialXCore.NodeDef, arg0: str) -> None
'''
    ...
    def setParameterValue (self, name, value, typeString=''):
      '''(Deprecated) Set the typed value of a parameter by its name.'''
    ...
    def setSourceUri (self, *args, **kwargs):
      '''setSourceUri(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setTarget (self, *args, **kwargs):
      '''setTarget(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> None
'''
    ...
    def setTokenValue (self, *args, **kwargs):
      '''setTokenValue(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str, arg1: str) -> MaterialX.PyMaterialXCore.Token
'''
    ...
    def setType (self, *args, **kwargs):
      '''setType(self: MaterialX.PyMaterialXCore.TypedElement, arg0: str) -> None
'''
    ...
    def setVersionIntegers (self, *args, **kwargs):
      '''setVersionIntegers(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: int, arg1: int) -> None
'''
    ...
    def setVersionString (self, *args, **kwargs):
      '''setVersionString(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> None
'''
    ...
    def traverseGraph (self, *args, **kwargs):
      '''traverseGraph(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::GraphIterator
'''
    ...
    def traverseInheritance (self, *args, **kwargs):
      '''traverseInheritance(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::InheritanceIterator
'''
    ...
    def traverseTree (self, *args, **kwargs):
      '''traverseTree(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::TreeIterator
'''
    ...
    def validate (self, *args, **kwargs):
      '''validate(self: MaterialX.PyMaterialXCore.Element) -> Tuple[bool, str]
'''
    ...

def NodeGraph (*args):
      '''

'''      
    ...

class NodeGraph:
    def CATEGORY (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def NODE_DEF_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def TYPE_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def _addChildCollection (self, *args, **kwargs):
      '''_addChildCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Collection
'''
    ...
    def _addChildDocument (self, *args, **kwargs):
      '''_addChildDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Document
'''
    ...
    def _addChildGeomInfo (self, *args, **kwargs):
      '''_addChildGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomInfo
'''
    ...
    def _addChildGeomProp (self, *args, **kwargs):
      '''_addChildGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def _addChildImplementation (self, *args, **kwargs):
      '''_addChildImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Implementation
'''
    ...
    def _addChildLook (self, *args, **kwargs):
      '''_addChildLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Look
'''
    ...
    def _addChildMaterialAssign (self, *args, **kwargs):
      '''_addChildMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::MaterialAssign
'''
    ...
    def _addChildNode (self, *args, **kwargs):
      '''_addChildNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Node
'''
    ...
    def _addChildNodeDef (self, *args, **kwargs):
      '''_addChildNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeDef
'''
    ...
    def _addChildNodeGraph (self, *args, **kwargs):
      '''_addChildNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeGraph
'''
    ...
    def _addChildProperty (self, *args, **kwargs):
      '''_addChildProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Property
'''
    ...
    def _addChildPropertySet (self, *args, **kwargs):
      '''_addChildPropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySet
'''
    ...
    def _addChildPropertySetAssign (self, *args, **kwargs):
      '''_addChildPropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySetAssign
'''
    ...
    def _addChildToken (self, *args, **kwargs):
      '''_addChildToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Token
'''
    ...
    def _addChildTypeDef (self, *args, **kwargs):
      '''_addChildTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def _addChildVisibility (self, *args, **kwargs):
      '''_addChildVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Visibility
'''
    ...
    def _getChild (self, *args, **kwargs):
      '''_getChild(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def _getChildOfTypeCollection (self, *args, **kwargs):
      '''_getChildOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Collection
'''
    ...
    def _getChildOfTypeDocument (self, *args, **kwargs):
      '''_getChildOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Document
'''
    ...
    def _getChildOfTypeGeomInfo (self, *args, **kwargs):
      '''_getChildOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomInfo
'''
    ...
    def _getChildOfTypeGeomProp (self, *args, **kwargs):
      '''_getChildOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def _getChildOfTypeImplementation (self, *args, **kwargs):
      '''_getChildOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Implementation
'''
    ...
    def _getChildOfTypeLook (self, *args, **kwargs):
      '''_getChildOfTypeLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Look
'''
    ...
    def _getChildOfTypeMaterialAssign (self, *args, **kwargs):
      '''_getChildOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::MaterialAssign
'''
    ...
    def _getChildOfTypeNode (self, *args, **kwargs):
      '''_getChildOfTypeNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Node
'''
    ...
    def _getChildOfTypeNodeDef (self, *args, **kwargs):
      '''_getChildOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeDef
'''
    ...
    def _getChildOfTypeNodeGraph (self, *args, **kwargs):
      '''_getChildOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeGraph
'''
    ...
    def _getChildOfTypeProperty (self, *args, **kwargs):
      '''_getChildOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Property
'''
    ...
    def _getChildOfTypePropertySet (self, *args, **kwargs):
      '''_getChildOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySet
'''
    ...
    def _getChildOfTypePropertySetAssign (self, *args, **kwargs):
      '''_getChildOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySetAssign
'''
    ...
    def _getChildOfTypeToken (self, *args, **kwargs):
      '''_getChildOfTypeToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Token
'''
    ...
    def _getChildOfTypeTypeDef (self, *args, **kwargs):
      '''_getChildOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def _getChildOfTypeVisibility (self, *args, **kwargs):
      '''_getChildOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Visibility
'''
    ...
    def _getChildrenOfTypeCollection (self, *args, **kwargs):
      '''_getChildrenOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Collection]
'''
    ...
    def _getChildrenOfTypeDocument (self, *args, **kwargs):
      '''_getChildrenOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Document]
'''
    ...
    def _getChildrenOfTypeGeomInfo (self, *args, **kwargs):
      '''_getChildrenOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::GeomInfo]
'''
    ...
    def _getChildrenOfTypeGeomProp (self, *args, **kwargs):
      '''_getChildrenOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::GeomProp]
'''
    ...
    def _getChildrenOfTypeImplementation (self, *args, **kwargs):
      '''_getChildrenOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Implementation]
'''
    ...
    def _getChildrenOfTypeLook (self, *args, **kwargs):
      '''_getChildrenOfTypeLook(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Look]
'''
    ...
    def _getChildrenOfTypeMaterialAssign (self, *args, **kwargs):
      '''_getChildrenOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::MaterialAssign]
'''
    ...
    def _getChildrenOfTypeNode (self, *args, **kwargs):
      '''_getChildrenOfTypeNode(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Node]
'''
    ...
    def _getChildrenOfTypeNodeDef (self, *args, **kwargs):
      '''_getChildrenOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::NodeDef]
'''
    ...
    def _getChildrenOfTypeNodeGraph (self, *args, **kwargs):
      '''_getChildrenOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::NodeGraph]
'''
    ...
    def _getChildrenOfTypeProperty (self, *args, **kwargs):
      '''_getChildrenOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Property]
'''
    ...
    def _getChildrenOfTypePropertySet (self, *args, **kwargs):
      '''_getChildrenOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::PropertySet]
'''
    ...
    def _getChildrenOfTypePropertySetAssign (self, *args, **kwargs):
      '''_getChildrenOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::PropertySetAssign]
'''
    ...
    def _getChildrenOfTypeToken (self, *args, **kwargs):
      '''_getChildrenOfTypeToken(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Token]
'''
    ...
    def _getChildrenOfTypeTypeDef (self, *args, **kwargs):
      '''_getChildrenOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::TypeDef]
'''
    ...
    def _getChildrenOfTypeVisibility (self, *args, **kwargs):
      '''_getChildrenOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Visibility]
'''
    ...
    def _getInputValue (self, *args, **kwargs):
      '''_getInputValue(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str, arg1: str) -> MaterialX_v1_38_8::Value
'''
    ...
    def _removeChildOfTypeCollection (self, *args, **kwargs):
      '''_removeChildOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeDocument (self, *args, **kwargs):
      '''_removeChildOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeGeomInfo (self, *args, **kwargs):
      '''_removeChildOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeGeomProp (self, *args, **kwargs):
      '''_removeChildOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeImplementation (self, *args, **kwargs):
      '''_removeChildOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeLook (self, *args, **kwargs):
      '''_removeChildOfTypeLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeMaterialAssign (self, *args, **kwargs):
      '''_removeChildOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNode (self, *args, **kwargs):
      '''_removeChildOfTypeNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNodeDef (self, *args, **kwargs):
      '''_removeChildOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNodeGraph (self, *args, **kwargs):
      '''_removeChildOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeProperty (self, *args, **kwargs):
      '''_removeChildOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypePropertySet (self, *args, **kwargs):
      '''_removeChildOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypePropertySetAssign (self, *args, **kwargs):
      '''_removeChildOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeToken (self, *args, **kwargs):
      '''_removeChildOfTypeToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeTypeDef (self, *args, **kwargs):
      '''_removeChildOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeVisibility (self, *args, **kwargs):
      '''_removeChildOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _setInputValueboolean (self, *args, **kwargs):
      '''_setInputValueboolean(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: bool, type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValuebooleanarray (self, *args, **kwargs):
      '''_setInputValuebooleanarray(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: List[bool], type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValuecolor3 (self, *args, **kwargs):
      '''_setInputValuecolor3(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: MaterialX_v1_38_8::Color3, type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValuecolor4 (self, *args, **kwargs):
      '''_setInputValuecolor4(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: MaterialX_v1_38_8::Color4, type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValuefloat (self, *args, **kwargs):
      '''_setInputValuefloat(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: float, type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValuefloatarray (self, *args, **kwargs):
      '''_setInputValuefloatarray(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: List[float], type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValueinteger (self, *args, **kwargs):
      '''_setInputValueinteger(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: int, type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValueintegerarray (self, *args, **kwargs):
      '''_setInputValueintegerarray(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: List[int], type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValuematrix33 (self, *args, **kwargs):
      '''_setInputValuematrix33(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: MaterialX_v1_38_8::Matrix33, type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValuematrix44 (self, *args, **kwargs):
      '''_setInputValuematrix44(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: MaterialX_v1_38_8::Matrix44, type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValuestring (self, *args, **kwargs):
      '''_setInputValuestring(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: str, type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValuestringarray (self, *args, **kwargs):
      '''_setInputValuestringarray(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: List[str], type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValuevector2 (self, *args, **kwargs):
      '''_setInputValuevector2(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: MaterialX_v1_38_8::Vector2, type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValuevector3 (self, *args, **kwargs):
      '''_setInputValuevector3(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: MaterialX_v1_38_8::Vector3, type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValuevector4 (self, *args, **kwargs):
      '''_setInputValuevector4(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: MaterialX_v1_38_8::Vector4, type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def addBackdrop (self, *args, **kwargs):
      '''addBackdrop(self: MaterialX.PyMaterialXCore.GraphElement, name: str = '') -> MaterialX_v1_38_8::Backdrop
'''
    ...
    def addBindInput (self, name, type='color3'):
      '''(Deprecated) Add a BindInput to this shader reference.'''
    ...
    def addBindParam (self, name, type='color3'):
      '''(Deprecated) Add a BindParam to this shader reference.'''
    ...
    def addChild (self, elementClass, name, typeString=''):
      '''Add a child element of the given subclass, name, and optional type string.'''
    ...
    def addChildOfCategory (self, *args, **kwargs):
      '''addChildOfCategory(self: MaterialX.PyMaterialXCore.Element, category: str, name: str = '') -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def addGeomNode (self, *args, **kwargs):
      '''addGeomNode(self: MaterialX.PyMaterialXCore.GraphElement, arg0: MaterialX.PyMaterialXCore.GeomPropDef, arg1: str) -> MaterialX.PyMaterialXCore.Node
'''
    ...
    def addInput (self, *args, **kwargs):
      '''addInput(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str = '', type: str = 'color3') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def addInterfaceName (self, *args, **kwargs):
      '''addInterfaceName(self: MaterialX.PyMaterialXCore.NodeGraph, arg0: str, arg1: str) -> None
'''
    ...
    def addMaterialNode (self, *args, **kwargs):
      '''addMaterialNode(self: MaterialX.PyMaterialXCore.GraphElement, name: str = '', shaderNode: MaterialX.PyMaterialXCore.Node = None) -> MaterialX.PyMaterialXCore.Node
'''
    ...
    def addNode (self, *args, **kwargs):
      '''addNode(self: MaterialX.PyMaterialXCore.GraphElement, category: str, name: str = '', type: str = 'color3') -> MaterialX.PyMaterialXCore.Node
'''
    ...
    def addNodeInstance (self, *args, **kwargs):
      '''addNodeInstance(self: MaterialX.PyMaterialXCore.GraphElement, nodeDef: MaterialX.PyMaterialXCore.NodeDef, name: str = '') -> MaterialX.PyMaterialXCore.Node
'''
    ...
    def addOutput (self, *args, **kwargs):
      '''addOutput(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str = '', type: str = 'color3') -> MaterialX.PyMaterialXCore.Output
'''
    ...
    def addParameter (self, name):
      '''(Deprecated) Add a Parameter to this interface.'''
    ...
    def addToken (self, *args, **kwargs):
      '''addToken(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str = 'color3') -> MaterialX.PyMaterialXCore.Token
'''
    ...
    def asString (self, *args, **kwargs):
      '''asString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def asStringDot (self, *args, **kwargs):
      '''asStringDot(self: MaterialX.PyMaterialXCore.GraphElement) -> str
'''
    ...
    def changeChildCategory (self, *args, **kwargs):
      '''changeChildCategory(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element, arg1: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def clearContent (self, *args, **kwargs):
      '''clearContent(self: MaterialX.PyMaterialXCore.InterfaceElement) -> None
'''
    ...
    def copyContentFrom (self, *args, **kwargs):
      '''copyContentFrom(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def createStringResolver (self, *args, **kwargs):
      '''createStringResolver(self: MaterialX.PyMaterialXCore.Element, geom: str = '') -> MaterialX_v1_38_8::StringResolver
'''
    ...
    def createValidChildName (self, *args, **kwargs):
      '''createValidChildName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def flattenSubgraphs (self, *args, **kwargs):
      '''flattenSubgraphs(self: MaterialX.PyMaterialXCore.GraphElement, target: str = '', filter: Callable[[MaterialX.PyMaterialXCore.Node], bool] = None) -> None
'''
    ...
    def getActiveColorSpace (self, *args, **kwargs):
      '''getActiveColorSpace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveFilePrefix (self, *args, **kwargs):
      '''getActiveFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveGeomPrefix (self, *args, **kwargs):
      '''getActiveGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveInput (self, *args, **kwargs):
      '''getActiveInput(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def getActiveInputs (self, *args, **kwargs):
      '''getActiveInputs(self: MaterialX.PyMaterialXCore.InterfaceElement) -> List[MaterialX.PyMaterialXCore.Input]
'''
    ...
    def getActiveOutput (self, *args, **kwargs):
      '''getActiveOutput(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> MaterialX.PyMaterialXCore.Output
'''
    ...
    def getActiveOutputs (self, *args, **kwargs):
      '''getActiveOutputs(self: MaterialX.PyMaterialXCore.InterfaceElement) -> List[MaterialX.PyMaterialXCore.Output]
'''
    ...
    def getActiveParameters (self):
      '''(Deprecated) Return a vector of all parameters belonging to this interface, taking inheritance into account.'''
    ...
    def getActiveSourceUri (self, *args, **kwargs):
      '''getActiveSourceUri(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveToken (self, *args, **kwargs):
      '''getActiveToken(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> MaterialX.PyMaterialXCore.Token
'''
    ...
    def getActiveTokens (self, *args, **kwargs):
      '''getActiveTokens(self: MaterialX.PyMaterialXCore.InterfaceElement) -> List[MaterialX.PyMaterialXCore.Token]
'''
    ...
    def getActiveValueElement (self, *args, **kwargs):
      '''getActiveValueElement(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> MaterialX.PyMaterialXCore.ValueElement
'''
    ...
    def getActiveValueElements (self, *args, **kwargs):
      '''getActiveValueElements(self: MaterialX.PyMaterialXCore.InterfaceElement) -> List[MaterialX.PyMaterialXCore.ValueElement]
'''
    ...
    def getAttribute (self, *args, **kwargs):
      '''getAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getAttributeNames (self, *args, **kwargs):
      '''getAttributeNames(self: MaterialX.PyMaterialXCore.Element) -> List[str]
'''
    ...
    def getBackdrop (self, *args, **kwargs):
      '''getBackdrop(self: MaterialX.PyMaterialXCore.GraphElement, arg0: str) -> MaterialX_v1_38_8::Backdrop
'''
    ...
    def getBackdrops (self, *args, **kwargs):
      '''getBackdrops(self: MaterialX.PyMaterialXCore.GraphElement) -> List[MaterialX_v1_38_8::Backdrop]
'''
    ...
    def getBindInputs (self):
      '''(Deprecated) Return a vector of all BindInput elements in this shader reference.'''
    ...
    def getBindParams (self):
      '''(Deprecated) Return a vector of all BindParam elements in this shader reference.'''
    ...
    def getBindTokens (self):
      '''(Deprecated) Return a vector of all BindToken elements in this shader reference.'''
    ...
    def getCategory (self, *args, **kwargs):
      '''getCategory(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getChild (self, name):
      '''Return the child element, if any, with the given name.'''
    ...
    def getChildIndex (self, *args, **kwargs):
      '''getChildIndex(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> int
'''
    ...
    def getChildOfType (self, elementClass, name):
      '''Return the child element, if any, with the given name and subclass.'''
    ...
    def getChildren (self, *args, **kwargs):
      '''getChildren(self: MaterialX.PyMaterialXCore.Element) -> List[MaterialX.PyMaterialXCore.Element]
'''
    ...
    def getChildrenOfType (self, elementClass):
      '''Return a list of all child elements that are instances of the given type.
       The returned list maintains the order in which children were added.'''
    ...
    def getColorSpace (self, *args, **kwargs):
      '''getColorSpace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getConnectedOutput (self, *args, **kwargs):
      '''getConnectedOutput(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> MaterialX.PyMaterialXCore.Output
'''
    ...
    def getDeclaration (self, *args, **kwargs):
      '''getDeclaration(self: MaterialX.PyMaterialXCore.NodeGraph, arg0: str) -> MaterialX.PyMaterialXCore.InterfaceElement
'''
    ...
    def getDefaultVersion (self, *args, **kwargs):
      '''getDefaultVersion(self: MaterialX.PyMaterialXCore.InterfaceElement) -> bool
'''
    ...
    def getDescendant (self, *args, **kwargs):
      '''getDescendant(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getDocString (self, *args, **kwargs):
      '''getDocString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getDocument (self, *args, **kwargs):
      '''getDocument(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::Document
'''
    ...
    def getDownstreamPorts (self, *args, **kwargs):
      '''getDownstreamPorts(self: MaterialX.PyMaterialXCore.NodeGraph) -> List[MaterialX.PyMaterialXCore.PortElement]
'''
    ...
    def getFilePrefix (self, *args, **kwargs):
      '''getFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getGeomPrefix (self, *args, **kwargs):
      '''getGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getInheritString (self, *args, **kwargs):
      '''getInheritString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getInheritsFrom (self, *args, **kwargs):
      '''getInheritsFrom(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getInput (self, *args, **kwargs):
      '''getInput(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def getInputCount (self, *args, **kwargs):
      '''getInputCount(self: MaterialX.PyMaterialXCore.InterfaceElement) -> int
'''
    ...
    def getInputValue (self, name, target=''):
      '''Return the typed value of an input by its name, taking both the
       calling element and its declaration into account.  If the given
       input is not found, then None is returned.'''
    ...
    def getInputs (self, *args, **kwargs):
      '''getInputs(self: MaterialX.PyMaterialXCore.InterfaceElement) -> List[MaterialX.PyMaterialXCore.Input]
'''
    ...
    def getMaterialNodes (self, *args, **kwargs):
      '''getMaterialNodes(self: MaterialX.PyMaterialXCore.GraphElement) -> List[MaterialX.PyMaterialXCore.Node]
'''
    ...
    def getMaterialOutputs (self, *args, **kwargs):
      '''getMaterialOutputs(self: MaterialX.PyMaterialXCore.NodeGraph) -> List[MaterialX.PyMaterialXCore.Output]
'''
    ...
    def getName (self, *args, **kwargs):
      '''getName(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getNamePath (self, *args, **kwargs):
      '''getNamePath(self: MaterialX.PyMaterialXCore.Element, relativeTo: MaterialX.PyMaterialXCore.Element = None) -> str
'''
    ...
    def getNamespace (self, *args, **kwargs):
      '''getNamespace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getNode (self, *args, **kwargs):
      '''getNode(self: MaterialX.PyMaterialXCore.GraphElement, arg0: str) -> MaterialX.PyMaterialXCore.Node
'''
    ...
    def getNodeDef (self, *args, **kwargs):
      '''getNodeDef(self: MaterialX.PyMaterialXCore.NodeGraph) -> MaterialX.PyMaterialXCore.NodeDef
'''
    ...
    def getNodeDefString (self, *args, **kwargs):
      '''getNodeDefString(self: MaterialX.PyMaterialXCore.InterfaceElement) -> str
'''
    ...
    def getNodes (self, *args, **kwargs):
      '''getNodes(self: MaterialX.PyMaterialXCore.GraphElement, category: str = '') -> List[MaterialX.PyMaterialXCore.Node]
'''
    ...
    def getOutput (self, *args, **kwargs):
      '''getOutput(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> MaterialX.PyMaterialXCore.Output
'''
    ...
    def getOutputCount (self, *args, **kwargs):
      '''getOutputCount(self: MaterialX.PyMaterialXCore.InterfaceElement) -> int
'''
    ...
    def getOutputs (self, *args, **kwargs):
      '''getOutputs(self: MaterialX.PyMaterialXCore.InterfaceElement) -> List[MaterialX.PyMaterialXCore.Output]
'''
    ...
    def getParameterValue (self, name, target=''):
      '''(Deprecated) Return the typed value of a parameter by its name.'''
    ...
    def getParameterValueString (self, name):
      '''(Deprecated) Return the value string of a parameter by its name.'''
    ...
    def getParameters (self):
      '''(Deprecated) Return a vector of all Parameter elements.'''
    ...
    def getParent (self, *args, **kwargs):
      '''getParent(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getQualifiedName (self, *args, **kwargs):
      '''getQualifiedName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getRoot (self, *args, **kwargs):
      '''getRoot(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getSelf (self, *args, **kwargs):
      '''getSelf(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getSourceUri (self, *args, **kwargs):
      '''getSourceUri(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getTarget (self, *args, **kwargs):
      '''getTarget(self: MaterialX.PyMaterialXCore.InterfaceElement) -> str
'''
    ...
    def getToken (self, *args, **kwargs):
      '''getToken(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> MaterialX.PyMaterialXCore.Token
'''
    ...
    def getTokenValue (self, *args, **kwargs):
      '''getTokenValue(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> str
'''
    ...
    def getTokens (self, *args, **kwargs):
      '''getTokens(self: MaterialX.PyMaterialXCore.InterfaceElement) -> List[MaterialX.PyMaterialXCore.Token]
'''
    ...
    def getType (self, *args, **kwargs):
      '''getType(self: MaterialX.PyMaterialXCore.TypedElement) -> str
'''
    ...
    def getTypeDef (self, *args, **kwargs):
      '''getTypeDef(self: MaterialX.PyMaterialXCore.TypedElement) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def getUpstreamEdge (self, *args, **kwargs):
      '''getUpstreamEdge(self: MaterialX.PyMaterialXCore.Element, index: int = 0) -> MaterialX_v1_38_8::Edge
'''
    ...
    def getUpstreamEdgeCount (self, *args, **kwargs):
      '''getUpstreamEdgeCount(self: MaterialX.PyMaterialXCore.Element) -> int
'''
    ...
    def getUpstreamElement (self, *args, **kwargs):
      '''getUpstreamElement(self: MaterialX.PyMaterialXCore.Element, index: int = 0) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getVersionIntegers (self, *args, **kwargs):
      '''getVersionIntegers(self: MaterialX.PyMaterialXCore.InterfaceElement) -> Tuple[int, int]
'''
    ...
    def getVersionString (self, *args, **kwargs):
      '''getVersionString(self: MaterialX.PyMaterialXCore.InterfaceElement) -> str
'''
    ...
    def hasAttribute (self, *args, **kwargs):
      '''hasAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> bool
'''
    ...
    def hasColorSpace (self, *args, **kwargs):
      '''hasColorSpace(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasExactInputMatch (self, *args, **kwargs):
      '''hasExactInputMatch(self: MaterialX.PyMaterialXCore.InterfaceElement, declaration: MaterialX.PyMaterialXCore.InterfaceElement, message: str = None) -> bool
'''
    ...
    def hasFilePrefix (self, *args, **kwargs):
      '''hasFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasGeomPrefix (self, *args, **kwargs):
      '''hasGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritString (self, *args, **kwargs):
      '''hasInheritString(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritanceCycle (self, *args, **kwargs):
      '''hasInheritanceCycle(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritedBase (self, *args, **kwargs):
      '''hasInheritedBase(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasNamespace (self, *args, **kwargs):
      '''hasNamespace(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasNodeDefString (self, *args, **kwargs):
      '''hasNodeDefString(self: MaterialX.PyMaterialXCore.InterfaceElement) -> bool
'''
    ...
    def hasSourceUri (self, *args, **kwargs):
      '''hasSourceUri(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasTarget (self, *args, **kwargs):
      '''hasTarget(self: MaterialX.PyMaterialXCore.InterfaceElement) -> bool
'''
    ...
    def hasType (self, *args, **kwargs):
      '''hasType(self: MaterialX.PyMaterialXCore.TypedElement) -> bool
'''
    ...
    def hasVersionString (self, *args, **kwargs):
      '''hasVersionString(self: MaterialX.PyMaterialXCore.InterfaceElement) -> bool
'''
    ...
    def isA (self, elementClass, category=''):
      '''Return True if this element is an instance of the given subclass.
       If a category string is specified, then both subclass and category
       matches are required.'''
    ...
    def isMultiOutputType (self, *args, **kwargs):
      '''isMultiOutputType(self: MaterialX.PyMaterialXCore.TypedElement) -> bool
'''
    ...
    def modifyInterfaceName (self, *args, **kwargs):
      '''modifyInterfaceName(self: MaterialX.PyMaterialXCore.NodeGraph, arg0: str, arg1: str) -> None
'''
    ...
    def removeAttribute (self, *args, **kwargs):
      '''removeAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def removeBackdrop (self, *args, **kwargs):
      '''removeBackdrop(self: MaterialX.PyMaterialXCore.GraphElement, arg0: str) -> None
'''
    ...
    def removeChild (self, *args, **kwargs):
      '''removeChild(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def removeChildOfType (self, elementClass, name):
      '''Remove the typed child element, if any, with the given name.'''
    ...
    def removeInput (self, *args, **kwargs):
      '''removeInput(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> None
'''
    ...
    def removeInterfaceName (self, *args, **kwargs):
      '''removeInterfaceName(self: MaterialX.PyMaterialXCore.NodeGraph, arg0: str) -> None
'''
    ...
    def removeNode (self, *args, **kwargs):
      '''removeNode(self: MaterialX.PyMaterialXCore.GraphElement, arg0: str) -> None
'''
    ...
    def removeOutput (self, *args, **kwargs):
      '''removeOutput(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> None
'''
    ...
    def removeToken (self, *args, **kwargs):
      '''removeToken(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> None
'''
    ...
    def setAttribute (self, *args, **kwargs):
      '''setAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str, arg1: str) -> None
'''
    ...
    def setCategory (self, *args, **kwargs):
      '''setCategory(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setChildIndex (self, *args, **kwargs):
      '''setChildIndex(self: MaterialX.PyMaterialXCore.Element, arg0: str, arg1: int) -> None
'''
    ...
    def setColorSpace (self, *args, **kwargs):
      '''setColorSpace(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setConnectedOutput (self, *args, **kwargs):
      '''setConnectedOutput(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str, arg1: MaterialX.PyMaterialXCore.Output) -> None
'''
    ...
    def setDefaultVersion (self, *args, **kwargs):
      '''setDefaultVersion(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: bool) -> None
'''
    ...
    def setDocString (self, *args, **kwargs):
      '''setDocString(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setFilePrefix (self, *args, **kwargs):
      '''setFilePrefix(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setGeomPrefix (self, *args, **kwargs):
      '''setGeomPrefix(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setInheritString (self, *args, **kwargs):
      '''setInheritString(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setInheritsFrom (self, *args, **kwargs):
      '''setInheritsFrom(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def setInputValue (self, name, value, typeString=''):
      '''Set the typed value of an input by its name, creating a child element
       to hold the input if needed.'''
    ...
    def setName (self, *args, **kwargs):
      '''setName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setNamespace (self, *args, **kwargs):
      '''setNamespace(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setNodeDef (self, *args, **kwargs):
      '''setNodeDef(self: MaterialX.PyMaterialXCore.NodeGraph, arg0: MaterialX.PyMaterialXCore.NodeDef) -> None
'''
    ...
    def setNodeDefString (self, *args, **kwargs):
      '''setNodeDefString(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> None
'''
    ...
    def setParameterValue (self, name, value, typeString=''):
      '''(Deprecated) Set the typed value of a parameter by its name.'''
    ...
    def setSourceUri (self, *args, **kwargs):
      '''setSourceUri(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setTarget (self, *args, **kwargs):
      '''setTarget(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> None
'''
    ...
    def setTokenValue (self, *args, **kwargs):
      '''setTokenValue(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str, arg1: str) -> MaterialX.PyMaterialXCore.Token
'''
    ...
    def setType (self, *args, **kwargs):
      '''setType(self: MaterialX.PyMaterialXCore.TypedElement, arg0: str) -> None
'''
    ...
    def setVersionIntegers (self, *args, **kwargs):
      '''setVersionIntegers(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: int, arg1: int) -> None
'''
    ...
    def setVersionString (self, *args, **kwargs):
      '''setVersionString(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> None
'''
    ...
    def topologicalSort (self, *args, **kwargs):
      '''topologicalSort(self: MaterialX.PyMaterialXCore.GraphElement) -> List[MaterialX.PyMaterialXCore.Element]
'''
    ...
    def traverseGraph (self, *args, **kwargs):
      '''traverseGraph(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::GraphIterator
'''
    ...
    def traverseInheritance (self, *args, **kwargs):
      '''traverseInheritance(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::InheritanceIterator
'''
    ...
    def traverseTree (self, *args, **kwargs):
      '''traverseTree(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::TreeIterator
'''
    ...
    def validate (self, *args, **kwargs):
      '''validate(self: MaterialX.PyMaterialXCore.Element) -> Tuple[bool, str]
'''
    ...

def NodePredicate (*args):
      '''

'''      
    ...

class NodePredicate:

def Output (*args):
      '''

'''      
    ...

class Output:
    def CATEGORY (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def DEFAULT_INPUT_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def ENUM_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def ENUM_VALUES_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def IMPLEMENTATION_NAME_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def IMPLEMENTATION_TYPE_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def INTERFACE_NAME_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def TYPE_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def UI_ADVANCED_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def UI_FOLDER_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def UI_MAX_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def UI_MIN_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def UI_NAME_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def UI_SOFT_MAX_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def UI_SOFT_MIN_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def UI_STEP_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def UNIT_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def VALUE_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def _addChildCollection (self, *args, **kwargs):
      '''_addChildCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Collection
'''
    ...
    def _addChildDocument (self, *args, **kwargs):
      '''_addChildDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Document
'''
    ...
    def _addChildGeomInfo (self, *args, **kwargs):
      '''_addChildGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomInfo
'''
    ...
    def _addChildGeomProp (self, *args, **kwargs):
      '''_addChildGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def _addChildImplementation (self, *args, **kwargs):
      '''_addChildImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Implementation
'''
    ...
    def _addChildLook (self, *args, **kwargs):
      '''_addChildLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Look
'''
    ...
    def _addChildMaterialAssign (self, *args, **kwargs):
      '''_addChildMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::MaterialAssign
'''
    ...
    def _addChildNode (self, *args, **kwargs):
      '''_addChildNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Node
'''
    ...
    def _addChildNodeDef (self, *args, **kwargs):
      '''_addChildNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeDef
'''
    ...
    def _addChildNodeGraph (self, *args, **kwargs):
      '''_addChildNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeGraph
'''
    ...
    def _addChildProperty (self, *args, **kwargs):
      '''_addChildProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Property
'''
    ...
    def _addChildPropertySet (self, *args, **kwargs):
      '''_addChildPropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySet
'''
    ...
    def _addChildPropertySetAssign (self, *args, **kwargs):
      '''_addChildPropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySetAssign
'''
    ...
    def _addChildToken (self, *args, **kwargs):
      '''_addChildToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Token
'''
    ...
    def _addChildTypeDef (self, *args, **kwargs):
      '''_addChildTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def _addChildVisibility (self, *args, **kwargs):
      '''_addChildVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Visibility
'''
    ...
    def _getChild (self, *args, **kwargs):
      '''_getChild(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def _getChildOfTypeCollection (self, *args, **kwargs):
      '''_getChildOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Collection
'''
    ...
    def _getChildOfTypeDocument (self, *args, **kwargs):
      '''_getChildOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Document
'''
    ...
    def _getChildOfTypeGeomInfo (self, *args, **kwargs):
      '''_getChildOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomInfo
'''
    ...
    def _getChildOfTypeGeomProp (self, *args, **kwargs):
      '''_getChildOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def _getChildOfTypeImplementation (self, *args, **kwargs):
      '''_getChildOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Implementation
'''
    ...
    def _getChildOfTypeLook (self, *args, **kwargs):
      '''_getChildOfTypeLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Look
'''
    ...
    def _getChildOfTypeMaterialAssign (self, *args, **kwargs):
      '''_getChildOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::MaterialAssign
'''
    ...
    def _getChildOfTypeNode (self, *args, **kwargs):
      '''_getChildOfTypeNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Node
'''
    ...
    def _getChildOfTypeNodeDef (self, *args, **kwargs):
      '''_getChildOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeDef
'''
    ...
    def _getChildOfTypeNodeGraph (self, *args, **kwargs):
      '''_getChildOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeGraph
'''
    ...
    def _getChildOfTypeProperty (self, *args, **kwargs):
      '''_getChildOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Property
'''
    ...
    def _getChildOfTypePropertySet (self, *args, **kwargs):
      '''_getChildOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySet
'''
    ...
    def _getChildOfTypePropertySetAssign (self, *args, **kwargs):
      '''_getChildOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySetAssign
'''
    ...
    def _getChildOfTypeToken (self, *args, **kwargs):
      '''_getChildOfTypeToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Token
'''
    ...
    def _getChildOfTypeTypeDef (self, *args, **kwargs):
      '''_getChildOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def _getChildOfTypeVisibility (self, *args, **kwargs):
      '''_getChildOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Visibility
'''
    ...
    def _getChildrenOfTypeCollection (self, *args, **kwargs):
      '''_getChildrenOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Collection]
'''
    ...
    def _getChildrenOfTypeDocument (self, *args, **kwargs):
      '''_getChildrenOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Document]
'''
    ...
    def _getChildrenOfTypeGeomInfo (self, *args, **kwargs):
      '''_getChildrenOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::GeomInfo]
'''
    ...
    def _getChildrenOfTypeGeomProp (self, *args, **kwargs):
      '''_getChildrenOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::GeomProp]
'''
    ...
    def _getChildrenOfTypeImplementation (self, *args, **kwargs):
      '''_getChildrenOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Implementation]
'''
    ...
    def _getChildrenOfTypeLook (self, *args, **kwargs):
      '''_getChildrenOfTypeLook(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Look]
'''
    ...
    def _getChildrenOfTypeMaterialAssign (self, *args, **kwargs):
      '''_getChildrenOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::MaterialAssign]
'''
    ...
    def _getChildrenOfTypeNode (self, *args, **kwargs):
      '''_getChildrenOfTypeNode(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Node]
'''
    ...
    def _getChildrenOfTypeNodeDef (self, *args, **kwargs):
      '''_getChildrenOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::NodeDef]
'''
    ...
    def _getChildrenOfTypeNodeGraph (self, *args, **kwargs):
      '''_getChildrenOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::NodeGraph]
'''
    ...
    def _getChildrenOfTypeProperty (self, *args, **kwargs):
      '''_getChildrenOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Property]
'''
    ...
    def _getChildrenOfTypePropertySet (self, *args, **kwargs):
      '''_getChildrenOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::PropertySet]
'''
    ...
    def _getChildrenOfTypePropertySetAssign (self, *args, **kwargs):
      '''_getChildrenOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::PropertySetAssign]
'''
    ...
    def _getChildrenOfTypeToken (self, *args, **kwargs):
      '''_getChildrenOfTypeToken(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Token]
'''
    ...
    def _getChildrenOfTypeTypeDef (self, *args, **kwargs):
      '''_getChildrenOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::TypeDef]
'''
    ...
    def _getChildrenOfTypeVisibility (self, *args, **kwargs):
      '''_getChildrenOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Visibility]
'''
    ...
    def _getDefaultValue (self, *args, **kwargs):
      '''_getDefaultValue(self: MaterialX.PyMaterialXCore.ValueElement) -> MaterialX_v1_38_8::Value
'''
    ...
    def _getValue (self, *args, **kwargs):
      '''_getValue(self: MaterialX.PyMaterialXCore.ValueElement) -> MaterialX_v1_38_8::Value
'''
    ...
    def _removeChildOfTypeCollection (self, *args, **kwargs):
      '''_removeChildOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeDocument (self, *args, **kwargs):
      '''_removeChildOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeGeomInfo (self, *args, **kwargs):
      '''_removeChildOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeGeomProp (self, *args, **kwargs):
      '''_removeChildOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeImplementation (self, *args, **kwargs):
      '''_removeChildOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeLook (self, *args, **kwargs):
      '''_removeChildOfTypeLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeMaterialAssign (self, *args, **kwargs):
      '''_removeChildOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNode (self, *args, **kwargs):
      '''_removeChildOfTypeNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNodeDef (self, *args, **kwargs):
      '''_removeChildOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNodeGraph (self, *args, **kwargs):
      '''_removeChildOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeProperty (self, *args, **kwargs):
      '''_removeChildOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypePropertySet (self, *args, **kwargs):
      '''_removeChildOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypePropertySetAssign (self, *args, **kwargs):
      '''_removeChildOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeToken (self, *args, **kwargs):
      '''_removeChildOfTypeToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeTypeDef (self, *args, **kwargs):
      '''_removeChildOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeVisibility (self, *args, **kwargs):
      '''_removeChildOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _setValueboolean (self, *args, **kwargs):
      '''_setValueboolean(self: MaterialX.PyMaterialXCore.ValueElement, value: bool, type: str = '') -> None
'''
    ...
    def _setValuebooleanarray (self, *args, **kwargs):
      '''_setValuebooleanarray(self: MaterialX.PyMaterialXCore.ValueElement, value: List[bool], type: str = '') -> None
'''
    ...
    def _setValuecolor3 (self, *args, **kwargs):
      '''_setValuecolor3(self: MaterialX.PyMaterialXCore.ValueElement, value: MaterialX_v1_38_8::Color3, type: str = '') -> None
'''
    ...
    def _setValuecolor4 (self, *args, **kwargs):
      '''_setValuecolor4(self: MaterialX.PyMaterialXCore.ValueElement, value: MaterialX_v1_38_8::Color4, type: str = '') -> None
'''
    ...
    def _setValuefloat (self, *args, **kwargs):
      '''_setValuefloat(self: MaterialX.PyMaterialXCore.ValueElement, value: float, type: str = '') -> None
'''
    ...
    def _setValuefloatarray (self, *args, **kwargs):
      '''_setValuefloatarray(self: MaterialX.PyMaterialXCore.ValueElement, value: List[float], type: str = '') -> None
'''
    ...
    def _setValueinteger (self, *args, **kwargs):
      '''_setValueinteger(self: MaterialX.PyMaterialXCore.ValueElement, value: int, type: str = '') -> None
'''
    ...
    def _setValueintegerarray (self, *args, **kwargs):
      '''_setValueintegerarray(self: MaterialX.PyMaterialXCore.ValueElement, value: List[int], type: str = '') -> None
'''
    ...
    def _setValuematrix33 (self, *args, **kwargs):
      '''_setValuematrix33(self: MaterialX.PyMaterialXCore.ValueElement, value: MaterialX_v1_38_8::Matrix33, type: str = '') -> None
'''
    ...
    def _setValuematrix44 (self, *args, **kwargs):
      '''_setValuematrix44(self: MaterialX.PyMaterialXCore.ValueElement, value: MaterialX_v1_38_8::Matrix44, type: str = '') -> None
'''
    ...
    def _setValuestring (self, *args, **kwargs):
      '''_setValuestring(self: MaterialX.PyMaterialXCore.ValueElement, value: str, type: str = '') -> None
'''
    ...
    def _setValuestringarray (self, *args, **kwargs):
      '''_setValuestringarray(self: MaterialX.PyMaterialXCore.ValueElement, value: List[str], type: str = '') -> None
'''
    ...
    def _setValuevector2 (self, *args, **kwargs):
      '''_setValuevector2(self: MaterialX.PyMaterialXCore.ValueElement, value: MaterialX_v1_38_8::Vector2, type: str = '') -> None
'''
    ...
    def _setValuevector3 (self, *args, **kwargs):
      '''_setValuevector3(self: MaterialX.PyMaterialXCore.ValueElement, value: MaterialX_v1_38_8::Vector3, type: str = '') -> None
'''
    ...
    def _setValuevector4 (self, *args, **kwargs):
      '''_setValuevector4(self: MaterialX.PyMaterialXCore.ValueElement, value: MaterialX_v1_38_8::Vector4, type: str = '') -> None
'''
    ...
    def addChild (self, elementClass, name, typeString=''):
      '''Add a child element of the given subclass, name, and optional type string.'''
    ...
    def addChildOfCategory (self, *args, **kwargs):
      '''addChildOfCategory(self: MaterialX.PyMaterialXCore.Element, category: str, name: str = '') -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def asString (self, *args, **kwargs):
      '''asString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def changeChildCategory (self, *args, **kwargs):
      '''changeChildCategory(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element, arg1: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def clearContent (self, *args, **kwargs):
      '''clearContent(self: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def copyContentFrom (self, *args, **kwargs):
      '''copyContentFrom(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def createStringResolver (self, *args, **kwargs):
      '''createStringResolver(self: MaterialX.PyMaterialXCore.Element, geom: str = '') -> MaterialX_v1_38_8::StringResolver
'''
    ...
    def createValidChildName (self, *args, **kwargs):
      '''createValidChildName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getActiveColorSpace (self, *args, **kwargs):
      '''getActiveColorSpace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveFilePrefix (self, *args, **kwargs):
      '''getActiveFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveGeomPrefix (self, *args, **kwargs):
      '''getActiveGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveSourceUri (self, *args, **kwargs):
      '''getActiveSourceUri(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveUnit (self, *args, **kwargs):
      '''getActiveUnit(self: MaterialX.PyMaterialXCore.ValueElement) -> str
'''
    ...
    def getAttribute (self, *args, **kwargs):
      '''getAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getAttributeNames (self, *args, **kwargs):
      '''getAttributeNames(self: MaterialX.PyMaterialXCore.Element) -> List[str]
'''
    ...
    def getCategory (self, *args, **kwargs):
      '''getCategory(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getChannels (self, *args, **kwargs):
      '''getChannels(self: MaterialX.PyMaterialXCore.PortElement) -> str
'''
    ...
    def getChild (self, name):
      '''Return the child element, if any, with the given name.'''
    ...
    def getChildIndex (self, *args, **kwargs):
      '''getChildIndex(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> int
'''
    ...
    def getChildOfType (self, elementClass, name):
      '''Return the child element, if any, with the given name and subclass.'''
    ...
    def getChildren (self, *args, **kwargs):
      '''getChildren(self: MaterialX.PyMaterialXCore.Element) -> List[MaterialX.PyMaterialXCore.Element]
'''
    ...
    def getChildrenOfType (self, elementClass):
      '''Return a list of all child elements that are instances of the given type.
       The returned list maintains the order in which children were added.'''
    ...
    def getColorSpace (self, *args, **kwargs):
      '''getColorSpace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getConnectedNode (self, *args, **kwargs):
      '''getConnectedNode(self: MaterialX.PyMaterialXCore.PortElement) -> MaterialX_v1_38_8::Node
'''
    ...
    def getConnectedOutput (self, *args, **kwargs):
      '''getConnectedOutput(self: MaterialX.PyMaterialXCore.PortElement) -> MaterialX_v1_38_8::Output
'''
    ...
    def getDefaultValue (self):
      '''Return the default value for this element.'''
    ...
    def getDescendant (self, *args, **kwargs):
      '''getDescendant(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getDocString (self, *args, **kwargs):
      '''getDocString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getDocument (self, *args, **kwargs):
      '''getDocument(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::Document
'''
    ...
    def getFilePrefix (self, *args, **kwargs):
      '''getFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getGeomPrefix (self, *args, **kwargs):
      '''getGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getImplementationName (self, *args, **kwargs):
      '''getImplementationName(self: MaterialX.PyMaterialXCore.ValueElement) -> str
'''
    ...
    def getInheritString (self, *args, **kwargs):
      '''getInheritString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getInheritsFrom (self, *args, **kwargs):
      '''getInheritsFrom(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getInterfaceName (self, *args, **kwargs):
      '''getInterfaceName(self: MaterialX.PyMaterialXCore.ValueElement) -> str
'''
    ...
    def getIsUniform (self, *args, **kwargs):
      '''getIsUniform(self: MaterialX.PyMaterialXCore.ValueElement) -> bool
'''
    ...
    def getName (self, *args, **kwargs):
      '''getName(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getNamePath (self, *args, **kwargs):
      '''getNamePath(self: MaterialX.PyMaterialXCore.Element, relativeTo: MaterialX.PyMaterialXCore.Element = None) -> str
'''
    ...
    def getNamespace (self, *args, **kwargs):
      '''getNamespace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getNodeGraphString (self, *args, **kwargs):
      '''getNodeGraphString(self: MaterialX.PyMaterialXCore.PortElement) -> str
'''
    ...
    def getNodeName (self, *args, **kwargs):
      '''getNodeName(self: MaterialX.PyMaterialXCore.PortElement) -> str
'''
    ...
    def getOutputString (self, *args, **kwargs):
      '''getOutputString(self: MaterialX.PyMaterialXCore.PortElement) -> str
'''
    ...
    def getParent (self, *args, **kwargs):
      '''getParent(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getQualifiedName (self, *args, **kwargs):
      '''getQualifiedName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getResolvedValueString (self, *args, **kwargs):
      '''getResolvedValueString(self: MaterialX.PyMaterialXCore.ValueElement, resolver: MaterialX_v1_38_8::StringResolver = None) -> str
'''
    ...
    def getRoot (self, *args, **kwargs):
      '''getRoot(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getSelf (self, *args, **kwargs):
      '''getSelf(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getSourceUri (self, *args, **kwargs):
      '''getSourceUri(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getType (self, *args, **kwargs):
      '''getType(self: MaterialX.PyMaterialXCore.TypedElement) -> str
'''
    ...
    def getTypeDef (self, *args, **kwargs):
      '''getTypeDef(self: MaterialX.PyMaterialXCore.TypedElement) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def getUnit (self, *args, **kwargs):
      '''getUnit(self: MaterialX.PyMaterialXCore.ValueElement) -> str
'''
    ...
    def getUnitType (self, *args, **kwargs):
      '''getUnitType(self: MaterialX.PyMaterialXCore.ValueElement) -> str
'''
    ...
    def getUpstreamEdge (self, *args, **kwargs):
      '''getUpstreamEdge(self: MaterialX.PyMaterialXCore.Element, index: int = 0) -> MaterialX_v1_38_8::Edge
'''
    ...
    def getUpstreamEdgeCount (self, *args, **kwargs):
      '''getUpstreamEdgeCount(self: MaterialX.PyMaterialXCore.Element) -> int
'''
    ...
    def getUpstreamElement (self, *args, **kwargs):
      '''getUpstreamElement(self: MaterialX.PyMaterialXCore.Element, index: int = 0) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getValue (self):
      '''Return the typed value of an element.'''
    ...
    def getValueString (self, *args, **kwargs):
      '''getValueString(self: MaterialX.PyMaterialXCore.ValueElement) -> str
'''
    ...
    def hasAttribute (self, *args, **kwargs):
      '''hasAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> bool
'''
    ...
    def hasColorSpace (self, *args, **kwargs):
      '''hasColorSpace(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasFilePrefix (self, *args, **kwargs):
      '''hasFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasGeomPrefix (self, *args, **kwargs):
      '''hasGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasImplementationName (self, *args, **kwargs):
      '''hasImplementationName(self: MaterialX.PyMaterialXCore.ValueElement) -> bool
'''
    ...
    def hasInheritString (self, *args, **kwargs):
      '''hasInheritString(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritanceCycle (self, *args, **kwargs):
      '''hasInheritanceCycle(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritedBase (self, *args, **kwargs):
      '''hasInheritedBase(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInterfaceName (self, *args, **kwargs):
      '''hasInterfaceName(self: MaterialX.PyMaterialXCore.ValueElement) -> bool
'''
    ...
    def hasNamespace (self, *args, **kwargs):
      '''hasNamespace(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasNodeGraphString (self, *args, **kwargs):
      '''hasNodeGraphString(self: MaterialX.PyMaterialXCore.PortElement) -> bool
'''
    ...
    def hasOutputString (self, *args, **kwargs):
      '''hasOutputString(self: MaterialX.PyMaterialXCore.PortElement) -> bool
'''
    ...
    def hasSourceUri (self, *args, **kwargs):
      '''hasSourceUri(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasType (self, *args, **kwargs):
      '''hasType(self: MaterialX.PyMaterialXCore.TypedElement) -> bool
'''
    ...
    def hasUnit (self, *args, **kwargs):
      '''hasUnit(self: MaterialX.PyMaterialXCore.ValueElement) -> bool
'''
    ...
    def hasUnitType (self, *args, **kwargs):
      '''hasUnitType(self: MaterialX.PyMaterialXCore.ValueElement) -> bool
'''
    ...
    def hasUpstreamCycle (self, *args, **kwargs):
      '''hasUpstreamCycle(self: MaterialX.PyMaterialXCore.Output) -> bool
'''
    ...
    def hasValueString (self, *args, **kwargs):
      '''hasValueString(self: MaterialX.PyMaterialXCore.ValueElement) -> bool
'''
    ...
    def isA (self, elementClass, category=''):
      '''Return True if this element is an instance of the given subclass.
       If a category string is specified, then both subclass and category
       matches are required.'''
    ...
    def isMultiOutputType (self, *args, **kwargs):
      '''isMultiOutputType(self: MaterialX.PyMaterialXCore.TypedElement) -> bool
'''
    ...
    def removeAttribute (self, *args, **kwargs):
      '''removeAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def removeChild (self, *args, **kwargs):
      '''removeChild(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def removeChildOfType (self, elementClass, name):
      '''Remove the typed child element, if any, with the given name.'''
    ...
    def setAttribute (self, *args, **kwargs):
      '''setAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str, arg1: str) -> None
'''
    ...
    def setCategory (self, *args, **kwargs):
      '''setCategory(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setChannels (self, *args, **kwargs):
      '''setChannels(self: MaterialX.PyMaterialXCore.PortElement, arg0: str) -> None
'''
    ...
    def setChildIndex (self, *args, **kwargs):
      '''setChildIndex(self: MaterialX.PyMaterialXCore.Element, arg0: str, arg1: int) -> None
'''
    ...
    def setColorSpace (self, *args, **kwargs):
      '''setColorSpace(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setConnectedNode (self, *args, **kwargs):
      '''setConnectedNode(self: MaterialX.PyMaterialXCore.PortElement, arg0: MaterialX_v1_38_8::Node) -> None
'''
    ...
    def setConnectedOutput (self, *args, **kwargs):
      '''setConnectedOutput(self: MaterialX.PyMaterialXCore.PortElement, arg0: MaterialX_v1_38_8::Output) -> None
'''
    ...
    def setDocString (self, *args, **kwargs):
      '''setDocString(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setFilePrefix (self, *args, **kwargs):
      '''setFilePrefix(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setGeomPrefix (self, *args, **kwargs):
      '''setGeomPrefix(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setImplementationName (self, *args, **kwargs):
      '''setImplementationName(self: MaterialX.PyMaterialXCore.ValueElement, arg0: str) -> None
'''
    ...
    def setInheritString (self, *args, **kwargs):
      '''setInheritString(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setInheritsFrom (self, *args, **kwargs):
      '''setInheritsFrom(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def setInterfaceName (self, *args, **kwargs):
      '''setInterfaceName(self: MaterialX.PyMaterialXCore.ValueElement, arg0: str) -> None
'''
    ...
    def setIsUniform (self, *args, **kwargs):
      '''setIsUniform(self: MaterialX.PyMaterialXCore.ValueElement, arg0: bool) -> None
'''
    ...
    def setName (self, *args, **kwargs):
      '''setName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setNamespace (self, *args, **kwargs):
      '''setNamespace(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setNodeGraphString (self, *args, **kwargs):
      '''setNodeGraphString(self: MaterialX.PyMaterialXCore.PortElement, arg0: str) -> None
'''
    ...
    def setNodeName (self, *args, **kwargs):
      '''setNodeName(self: MaterialX.PyMaterialXCore.PortElement, arg0: str) -> None
'''
    ...
    def setOutputString (self, *args, **kwargs):
      '''setOutputString(self: MaterialX.PyMaterialXCore.PortElement, arg0: str) -> None
'''
    ...
    def setSourceUri (self, *args, **kwargs):
      '''setSourceUri(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setType (self, *args, **kwargs):
      '''setType(self: MaterialX.PyMaterialXCore.TypedElement, arg0: str) -> None
'''
    ...
    def setUnit (self, *args, **kwargs):
      '''setUnit(self: MaterialX.PyMaterialXCore.ValueElement, arg0: str) -> None
'''
    ...
    def setUnitType (self, *args, **kwargs):
      '''setUnitType(self: MaterialX.PyMaterialXCore.ValueElement, arg0: str) -> None
'''
    ...
    def setValue (self, value, typeString=''):
      '''Set the typed value of an element.'''
    ...
    def setValueString (self, *args, **kwargs):
      '''setValueString(self: MaterialX.PyMaterialXCore.ValueElement, arg0: str) -> None
'''
    ...
    def traverseGraph (self, *args, **kwargs):
      '''traverseGraph(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::GraphIterator
'''
    ...
    def traverseInheritance (self, *args, **kwargs):
      '''traverseInheritance(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::InheritanceIterator
'''
    ...
    def traverseTree (self, *args, **kwargs):
      '''traverseTree(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::TreeIterator
'''
    ...
    def validate (self, *args, **kwargs):
      '''validate(self: MaterialX.PyMaterialXCore.Element) -> Tuple[bool, str]
'''
    ...

def PATH_LIST_SEPARATOR (*args):
      '''

'''      
    ...

def PortElement (*args):
      '''

'''      
    ...

class PortElement:
    def ENUM_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def ENUM_VALUES_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def IMPLEMENTATION_NAME_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def IMPLEMENTATION_TYPE_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def INTERFACE_NAME_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def TYPE_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def UI_ADVANCED_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def UI_FOLDER_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def UI_MAX_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def UI_MIN_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def UI_NAME_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def UI_SOFT_MAX_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def UI_SOFT_MIN_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def UI_STEP_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def UNIT_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def VALUE_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def _addChildCollection (self, *args, **kwargs):
      '''_addChildCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Collection
'''
    ...
    def _addChildDocument (self, *args, **kwargs):
      '''_addChildDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Document
'''
    ...
    def _addChildGeomInfo (self, *args, **kwargs):
      '''_addChildGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomInfo
'''
    ...
    def _addChildGeomProp (self, *args, **kwargs):
      '''_addChildGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def _addChildImplementation (self, *args, **kwargs):
      '''_addChildImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Implementation
'''
    ...
    def _addChildLook (self, *args, **kwargs):
      '''_addChildLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Look
'''
    ...
    def _addChildMaterialAssign (self, *args, **kwargs):
      '''_addChildMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::MaterialAssign
'''
    ...
    def _addChildNode (self, *args, **kwargs):
      '''_addChildNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Node
'''
    ...
    def _addChildNodeDef (self, *args, **kwargs):
      '''_addChildNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeDef
'''
    ...
    def _addChildNodeGraph (self, *args, **kwargs):
      '''_addChildNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeGraph
'''
    ...
    def _addChildProperty (self, *args, **kwargs):
      '''_addChildProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Property
'''
    ...
    def _addChildPropertySet (self, *args, **kwargs):
      '''_addChildPropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySet
'''
    ...
    def _addChildPropertySetAssign (self, *args, **kwargs):
      '''_addChildPropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySetAssign
'''
    ...
    def _addChildToken (self, *args, **kwargs):
      '''_addChildToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Token
'''
    ...
    def _addChildTypeDef (self, *args, **kwargs):
      '''_addChildTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def _addChildVisibility (self, *args, **kwargs):
      '''_addChildVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Visibility
'''
    ...
    def _getChild (self, *args, **kwargs):
      '''_getChild(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def _getChildOfTypeCollection (self, *args, **kwargs):
      '''_getChildOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Collection
'''
    ...
    def _getChildOfTypeDocument (self, *args, **kwargs):
      '''_getChildOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Document
'''
    ...
    def _getChildOfTypeGeomInfo (self, *args, **kwargs):
      '''_getChildOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomInfo
'''
    ...
    def _getChildOfTypeGeomProp (self, *args, **kwargs):
      '''_getChildOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def _getChildOfTypeImplementation (self, *args, **kwargs):
      '''_getChildOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Implementation
'''
    ...
    def _getChildOfTypeLook (self, *args, **kwargs):
      '''_getChildOfTypeLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Look
'''
    ...
    def _getChildOfTypeMaterialAssign (self, *args, **kwargs):
      '''_getChildOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::MaterialAssign
'''
    ...
    def _getChildOfTypeNode (self, *args, **kwargs):
      '''_getChildOfTypeNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Node
'''
    ...
    def _getChildOfTypeNodeDef (self, *args, **kwargs):
      '''_getChildOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeDef
'''
    ...
    def _getChildOfTypeNodeGraph (self, *args, **kwargs):
      '''_getChildOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeGraph
'''
    ...
    def _getChildOfTypeProperty (self, *args, **kwargs):
      '''_getChildOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Property
'''
    ...
    def _getChildOfTypePropertySet (self, *args, **kwargs):
      '''_getChildOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySet
'''
    ...
    def _getChildOfTypePropertySetAssign (self, *args, **kwargs):
      '''_getChildOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySetAssign
'''
    ...
    def _getChildOfTypeToken (self, *args, **kwargs):
      '''_getChildOfTypeToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Token
'''
    ...
    def _getChildOfTypeTypeDef (self, *args, **kwargs):
      '''_getChildOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def _getChildOfTypeVisibility (self, *args, **kwargs):
      '''_getChildOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Visibility
'''
    ...
    def _getChildrenOfTypeCollection (self, *args, **kwargs):
      '''_getChildrenOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Collection]
'''
    ...
    def _getChildrenOfTypeDocument (self, *args, **kwargs):
      '''_getChildrenOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Document]
'''
    ...
    def _getChildrenOfTypeGeomInfo (self, *args, **kwargs):
      '''_getChildrenOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::GeomInfo]
'''
    ...
    def _getChildrenOfTypeGeomProp (self, *args, **kwargs):
      '''_getChildrenOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::GeomProp]
'''
    ...
    def _getChildrenOfTypeImplementation (self, *args, **kwargs):
      '''_getChildrenOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Implementation]
'''
    ...
    def _getChildrenOfTypeLook (self, *args, **kwargs):
      '''_getChildrenOfTypeLook(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Look]
'''
    ...
    def _getChildrenOfTypeMaterialAssign (self, *args, **kwargs):
      '''_getChildrenOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::MaterialAssign]
'''
    ...
    def _getChildrenOfTypeNode (self, *args, **kwargs):
      '''_getChildrenOfTypeNode(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Node]
'''
    ...
    def _getChildrenOfTypeNodeDef (self, *args, **kwargs):
      '''_getChildrenOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::NodeDef]
'''
    ...
    def _getChildrenOfTypeNodeGraph (self, *args, **kwargs):
      '''_getChildrenOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::NodeGraph]
'''
    ...
    def _getChildrenOfTypeProperty (self, *args, **kwargs):
      '''_getChildrenOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Property]
'''
    ...
    def _getChildrenOfTypePropertySet (self, *args, **kwargs):
      '''_getChildrenOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::PropertySet]
'''
    ...
    def _getChildrenOfTypePropertySetAssign (self, *args, **kwargs):
      '''_getChildrenOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::PropertySetAssign]
'''
    ...
    def _getChildrenOfTypeToken (self, *args, **kwargs):
      '''_getChildrenOfTypeToken(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Token]
'''
    ...
    def _getChildrenOfTypeTypeDef (self, *args, **kwargs):
      '''_getChildrenOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::TypeDef]
'''
    ...
    def _getChildrenOfTypeVisibility (self, *args, **kwargs):
      '''_getChildrenOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Visibility]
'''
    ...
    def _getDefaultValue (self, *args, **kwargs):
      '''_getDefaultValue(self: MaterialX.PyMaterialXCore.ValueElement) -> MaterialX_v1_38_8::Value
'''
    ...
    def _getValue (self, *args, **kwargs):
      '''_getValue(self: MaterialX.PyMaterialXCore.ValueElement) -> MaterialX_v1_38_8::Value
'''
    ...
    def _removeChildOfTypeCollection (self, *args, **kwargs):
      '''_removeChildOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeDocument (self, *args, **kwargs):
      '''_removeChildOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeGeomInfo (self, *args, **kwargs):
      '''_removeChildOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeGeomProp (self, *args, **kwargs):
      '''_removeChildOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeImplementation (self, *args, **kwargs):
      '''_removeChildOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeLook (self, *args, **kwargs):
      '''_removeChildOfTypeLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeMaterialAssign (self, *args, **kwargs):
      '''_removeChildOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNode (self, *args, **kwargs):
      '''_removeChildOfTypeNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNodeDef (self, *args, **kwargs):
      '''_removeChildOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNodeGraph (self, *args, **kwargs):
      '''_removeChildOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeProperty (self, *args, **kwargs):
      '''_removeChildOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypePropertySet (self, *args, **kwargs):
      '''_removeChildOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypePropertySetAssign (self, *args, **kwargs):
      '''_removeChildOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeToken (self, *args, **kwargs):
      '''_removeChildOfTypeToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeTypeDef (self, *args, **kwargs):
      '''_removeChildOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeVisibility (self, *args, **kwargs):
      '''_removeChildOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _setValueboolean (self, *args, **kwargs):
      '''_setValueboolean(self: MaterialX.PyMaterialXCore.ValueElement, value: bool, type: str = '') -> None
'''
    ...
    def _setValuebooleanarray (self, *args, **kwargs):
      '''_setValuebooleanarray(self: MaterialX.PyMaterialXCore.ValueElement, value: List[bool], type: str = '') -> None
'''
    ...
    def _setValuecolor3 (self, *args, **kwargs):
      '''_setValuecolor3(self: MaterialX.PyMaterialXCore.ValueElement, value: MaterialX_v1_38_8::Color3, type: str = '') -> None
'''
    ...
    def _setValuecolor4 (self, *args, **kwargs):
      '''_setValuecolor4(self: MaterialX.PyMaterialXCore.ValueElement, value: MaterialX_v1_38_8::Color4, type: str = '') -> None
'''
    ...
    def _setValuefloat (self, *args, **kwargs):
      '''_setValuefloat(self: MaterialX.PyMaterialXCore.ValueElement, value: float, type: str = '') -> None
'''
    ...
    def _setValuefloatarray (self, *args, **kwargs):
      '''_setValuefloatarray(self: MaterialX.PyMaterialXCore.ValueElement, value: List[float], type: str = '') -> None
'''
    ...
    def _setValueinteger (self, *args, **kwargs):
      '''_setValueinteger(self: MaterialX.PyMaterialXCore.ValueElement, value: int, type: str = '') -> None
'''
    ...
    def _setValueintegerarray (self, *args, **kwargs):
      '''_setValueintegerarray(self: MaterialX.PyMaterialXCore.ValueElement, value: List[int], type: str = '') -> None
'''
    ...
    def _setValuematrix33 (self, *args, **kwargs):
      '''_setValuematrix33(self: MaterialX.PyMaterialXCore.ValueElement, value: MaterialX_v1_38_8::Matrix33, type: str = '') -> None
'''
    ...
    def _setValuematrix44 (self, *args, **kwargs):
      '''_setValuematrix44(self: MaterialX.PyMaterialXCore.ValueElement, value: MaterialX_v1_38_8::Matrix44, type: str = '') -> None
'''
    ...
    def _setValuestring (self, *args, **kwargs):
      '''_setValuestring(self: MaterialX.PyMaterialXCore.ValueElement, value: str, type: str = '') -> None
'''
    ...
    def _setValuestringarray (self, *args, **kwargs):
      '''_setValuestringarray(self: MaterialX.PyMaterialXCore.ValueElement, value: List[str], type: str = '') -> None
'''
    ...
    def _setValuevector2 (self, *args, **kwargs):
      '''_setValuevector2(self: MaterialX.PyMaterialXCore.ValueElement, value: MaterialX_v1_38_8::Vector2, type: str = '') -> None
'''
    ...
    def _setValuevector3 (self, *args, **kwargs):
      '''_setValuevector3(self: MaterialX.PyMaterialXCore.ValueElement, value: MaterialX_v1_38_8::Vector3, type: str = '') -> None
'''
    ...
    def _setValuevector4 (self, *args, **kwargs):
      '''_setValuevector4(self: MaterialX.PyMaterialXCore.ValueElement, value: MaterialX_v1_38_8::Vector4, type: str = '') -> None
'''
    ...
    def addChild (self, elementClass, name, typeString=''):
      '''Add a child element of the given subclass, name, and optional type string.'''
    ...
    def addChildOfCategory (self, *args, **kwargs):
      '''addChildOfCategory(self: MaterialX.PyMaterialXCore.Element, category: str, name: str = '') -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def asString (self, *args, **kwargs):
      '''asString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def changeChildCategory (self, *args, **kwargs):
      '''changeChildCategory(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element, arg1: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def clearContent (self, *args, **kwargs):
      '''clearContent(self: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def copyContentFrom (self, *args, **kwargs):
      '''copyContentFrom(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def createStringResolver (self, *args, **kwargs):
      '''createStringResolver(self: MaterialX.PyMaterialXCore.Element, geom: str = '') -> MaterialX_v1_38_8::StringResolver
'''
    ...
    def createValidChildName (self, *args, **kwargs):
      '''createValidChildName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getActiveColorSpace (self, *args, **kwargs):
      '''getActiveColorSpace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveFilePrefix (self, *args, **kwargs):
      '''getActiveFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveGeomPrefix (self, *args, **kwargs):
      '''getActiveGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveSourceUri (self, *args, **kwargs):
      '''getActiveSourceUri(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveUnit (self, *args, **kwargs):
      '''getActiveUnit(self: MaterialX.PyMaterialXCore.ValueElement) -> str
'''
    ...
    def getAttribute (self, *args, **kwargs):
      '''getAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getAttributeNames (self, *args, **kwargs):
      '''getAttributeNames(self: MaterialX.PyMaterialXCore.Element) -> List[str]
'''
    ...
    def getCategory (self, *args, **kwargs):
      '''getCategory(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getChannels (self, *args, **kwargs):
      '''getChannels(self: MaterialX.PyMaterialXCore.PortElement) -> str
'''
    ...
    def getChild (self, name):
      '''Return the child element, if any, with the given name.'''
    ...
    def getChildIndex (self, *args, **kwargs):
      '''getChildIndex(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> int
'''
    ...
    def getChildOfType (self, elementClass, name):
      '''Return the child element, if any, with the given name and subclass.'''
    ...
    def getChildren (self, *args, **kwargs):
      '''getChildren(self: MaterialX.PyMaterialXCore.Element) -> List[MaterialX.PyMaterialXCore.Element]
'''
    ...
    def getChildrenOfType (self, elementClass):
      '''Return a list of all child elements that are instances of the given type.
       The returned list maintains the order in which children were added.'''
    ...
    def getColorSpace (self, *args, **kwargs):
      '''getColorSpace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getConnectedNode (self, *args, **kwargs):
      '''getConnectedNode(self: MaterialX.PyMaterialXCore.PortElement) -> MaterialX_v1_38_8::Node
'''
    ...
    def getConnectedOutput (self, *args, **kwargs):
      '''getConnectedOutput(self: MaterialX.PyMaterialXCore.PortElement) -> MaterialX_v1_38_8::Output
'''
    ...
    def getDefaultValue (self):
      '''Return the default value for this element.'''
    ...
    def getDescendant (self, *args, **kwargs):
      '''getDescendant(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getDocString (self, *args, **kwargs):
      '''getDocString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getDocument (self, *args, **kwargs):
      '''getDocument(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::Document
'''
    ...
    def getFilePrefix (self, *args, **kwargs):
      '''getFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getGeomPrefix (self, *args, **kwargs):
      '''getGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getImplementationName (self, *args, **kwargs):
      '''getImplementationName(self: MaterialX.PyMaterialXCore.ValueElement) -> str
'''
    ...
    def getInheritString (self, *args, **kwargs):
      '''getInheritString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getInheritsFrom (self, *args, **kwargs):
      '''getInheritsFrom(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getInterfaceName (self, *args, **kwargs):
      '''getInterfaceName(self: MaterialX.PyMaterialXCore.ValueElement) -> str
'''
    ...
    def getIsUniform (self, *args, **kwargs):
      '''getIsUniform(self: MaterialX.PyMaterialXCore.ValueElement) -> bool
'''
    ...
    def getName (self, *args, **kwargs):
      '''getName(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getNamePath (self, *args, **kwargs):
      '''getNamePath(self: MaterialX.PyMaterialXCore.Element, relativeTo: MaterialX.PyMaterialXCore.Element = None) -> str
'''
    ...
    def getNamespace (self, *args, **kwargs):
      '''getNamespace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getNodeGraphString (self, *args, **kwargs):
      '''getNodeGraphString(self: MaterialX.PyMaterialXCore.PortElement) -> str
'''
    ...
    def getNodeName (self, *args, **kwargs):
      '''getNodeName(self: MaterialX.PyMaterialXCore.PortElement) -> str
'''
    ...
    def getOutputString (self, *args, **kwargs):
      '''getOutputString(self: MaterialX.PyMaterialXCore.PortElement) -> str
'''
    ...
    def getParent (self, *args, **kwargs):
      '''getParent(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getQualifiedName (self, *args, **kwargs):
      '''getQualifiedName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getResolvedValueString (self, *args, **kwargs):
      '''getResolvedValueString(self: MaterialX.PyMaterialXCore.ValueElement, resolver: MaterialX_v1_38_8::StringResolver = None) -> str
'''
    ...
    def getRoot (self, *args, **kwargs):
      '''getRoot(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getSelf (self, *args, **kwargs):
      '''getSelf(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getSourceUri (self, *args, **kwargs):
      '''getSourceUri(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getType (self, *args, **kwargs):
      '''getType(self: MaterialX.PyMaterialXCore.TypedElement) -> str
'''
    ...
    def getTypeDef (self, *args, **kwargs):
      '''getTypeDef(self: MaterialX.PyMaterialXCore.TypedElement) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def getUnit (self, *args, **kwargs):
      '''getUnit(self: MaterialX.PyMaterialXCore.ValueElement) -> str
'''
    ...
    def getUnitType (self, *args, **kwargs):
      '''getUnitType(self: MaterialX.PyMaterialXCore.ValueElement) -> str
'''
    ...
    def getUpstreamEdge (self, *args, **kwargs):
      '''getUpstreamEdge(self: MaterialX.PyMaterialXCore.Element, index: int = 0) -> MaterialX_v1_38_8::Edge
'''
    ...
    def getUpstreamEdgeCount (self, *args, **kwargs):
      '''getUpstreamEdgeCount(self: MaterialX.PyMaterialXCore.Element) -> int
'''
    ...
    def getUpstreamElement (self, *args, **kwargs):
      '''getUpstreamElement(self: MaterialX.PyMaterialXCore.Element, index: int = 0) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getValue (self):
      '''Return the typed value of an element.'''
    ...
    def getValueString (self, *args, **kwargs):
      '''getValueString(self: MaterialX.PyMaterialXCore.ValueElement) -> str
'''
    ...
    def hasAttribute (self, *args, **kwargs):
      '''hasAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> bool
'''
    ...
    def hasColorSpace (self, *args, **kwargs):
      '''hasColorSpace(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasFilePrefix (self, *args, **kwargs):
      '''hasFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasGeomPrefix (self, *args, **kwargs):
      '''hasGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasImplementationName (self, *args, **kwargs):
      '''hasImplementationName(self: MaterialX.PyMaterialXCore.ValueElement) -> bool
'''
    ...
    def hasInheritString (self, *args, **kwargs):
      '''hasInheritString(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritanceCycle (self, *args, **kwargs):
      '''hasInheritanceCycle(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritedBase (self, *args, **kwargs):
      '''hasInheritedBase(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInterfaceName (self, *args, **kwargs):
      '''hasInterfaceName(self: MaterialX.PyMaterialXCore.ValueElement) -> bool
'''
    ...
    def hasNamespace (self, *args, **kwargs):
      '''hasNamespace(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasNodeGraphString (self, *args, **kwargs):
      '''hasNodeGraphString(self: MaterialX.PyMaterialXCore.PortElement) -> bool
'''
    ...
    def hasOutputString (self, *args, **kwargs):
      '''hasOutputString(self: MaterialX.PyMaterialXCore.PortElement) -> bool
'''
    ...
    def hasSourceUri (self, *args, **kwargs):
      '''hasSourceUri(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasType (self, *args, **kwargs):
      '''hasType(self: MaterialX.PyMaterialXCore.TypedElement) -> bool
'''
    ...
    def hasUnit (self, *args, **kwargs):
      '''hasUnit(self: MaterialX.PyMaterialXCore.ValueElement) -> bool
'''
    ...
    def hasUnitType (self, *args, **kwargs):
      '''hasUnitType(self: MaterialX.PyMaterialXCore.ValueElement) -> bool
'''
    ...
    def hasValueString (self, *args, **kwargs):
      '''hasValueString(self: MaterialX.PyMaterialXCore.ValueElement) -> bool
'''
    ...
    def isA (self, elementClass, category=''):
      '''Return True if this element is an instance of the given subclass.
       If a category string is specified, then both subclass and category
       matches are required.'''
    ...
    def isMultiOutputType (self, *args, **kwargs):
      '''isMultiOutputType(self: MaterialX.PyMaterialXCore.TypedElement) -> bool
'''
    ...
    def removeAttribute (self, *args, **kwargs):
      '''removeAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def removeChild (self, *args, **kwargs):
      '''removeChild(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def removeChildOfType (self, elementClass, name):
      '''Remove the typed child element, if any, with the given name.'''
    ...
    def setAttribute (self, *args, **kwargs):
      '''setAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str, arg1: str) -> None
'''
    ...
    def setCategory (self, *args, **kwargs):
      '''setCategory(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setChannels (self, *args, **kwargs):
      '''setChannels(self: MaterialX.PyMaterialXCore.PortElement, arg0: str) -> None
'''
    ...
    def setChildIndex (self, *args, **kwargs):
      '''setChildIndex(self: MaterialX.PyMaterialXCore.Element, arg0: str, arg1: int) -> None
'''
    ...
    def setColorSpace (self, *args, **kwargs):
      '''setColorSpace(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setConnectedNode (self, *args, **kwargs):
      '''setConnectedNode(self: MaterialX.PyMaterialXCore.PortElement, arg0: MaterialX_v1_38_8::Node) -> None
'''
    ...
    def setConnectedOutput (self, *args, **kwargs):
      '''setConnectedOutput(self: MaterialX.PyMaterialXCore.PortElement, arg0: MaterialX_v1_38_8::Output) -> None
'''
    ...
    def setDocString (self, *args, **kwargs):
      '''setDocString(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setFilePrefix (self, *args, **kwargs):
      '''setFilePrefix(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setGeomPrefix (self, *args, **kwargs):
      '''setGeomPrefix(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setImplementationName (self, *args, **kwargs):
      '''setImplementationName(self: MaterialX.PyMaterialXCore.ValueElement, arg0: str) -> None
'''
    ...
    def setInheritString (self, *args, **kwargs):
      '''setInheritString(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setInheritsFrom (self, *args, **kwargs):
      '''setInheritsFrom(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def setInterfaceName (self, *args, **kwargs):
      '''setInterfaceName(self: MaterialX.PyMaterialXCore.ValueElement, arg0: str) -> None
'''
    ...
    def setIsUniform (self, *args, **kwargs):
      '''setIsUniform(self: MaterialX.PyMaterialXCore.ValueElement, arg0: bool) -> None
'''
    ...
    def setName (self, *args, **kwargs):
      '''setName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setNamespace (self, *args, **kwargs):
      '''setNamespace(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setNodeGraphString (self, *args, **kwargs):
      '''setNodeGraphString(self: MaterialX.PyMaterialXCore.PortElement, arg0: str) -> None
'''
    ...
    def setNodeName (self, *args, **kwargs):
      '''setNodeName(self: MaterialX.PyMaterialXCore.PortElement, arg0: str) -> None
'''
    ...
    def setOutputString (self, *args, **kwargs):
      '''setOutputString(self: MaterialX.PyMaterialXCore.PortElement, arg0: str) -> None
'''
    ...
    def setSourceUri (self, *args, **kwargs):
      '''setSourceUri(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setType (self, *args, **kwargs):
      '''setType(self: MaterialX.PyMaterialXCore.TypedElement, arg0: str) -> None
'''
    ...
    def setUnit (self, *args, **kwargs):
      '''setUnit(self: MaterialX.PyMaterialXCore.ValueElement, arg0: str) -> None
'''
    ...
    def setUnitType (self, *args, **kwargs):
      '''setUnitType(self: MaterialX.PyMaterialXCore.ValueElement, arg0: str) -> None
'''
    ...
    def setValue (self, value, typeString=''):
      '''Set the typed value of an element.'''
    ...
    def setValueString (self, *args, **kwargs):
      '''setValueString(self: MaterialX.PyMaterialXCore.ValueElement, arg0: str) -> None
'''
    ...
    def traverseGraph (self, *args, **kwargs):
      '''traverseGraph(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::GraphIterator
'''
    ...
    def traverseInheritance (self, *args, **kwargs):
      '''traverseInheritance(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::InheritanceIterator
'''
    ...
    def traverseTree (self, *args, **kwargs):
      '''traverseTree(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::TreeIterator
'''
    ...
    def validate (self, *args, **kwargs):
      '''validate(self: MaterialX.PyMaterialXCore.Element) -> Tuple[bool, str]
'''
    ...

def Property (*args):
      '''

'''      
    ...

class Property:
    def CATEGORY (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def ENUM_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def ENUM_VALUES_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def IMPLEMENTATION_NAME_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def IMPLEMENTATION_TYPE_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def INTERFACE_NAME_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def TYPE_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def UI_ADVANCED_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def UI_FOLDER_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def UI_MAX_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def UI_MIN_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def UI_NAME_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def UI_SOFT_MAX_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def UI_SOFT_MIN_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def UI_STEP_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def UNIT_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def VALUE_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def _addChildCollection (self, *args, **kwargs):
      '''_addChildCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Collection
'''
    ...
    def _addChildDocument (self, *args, **kwargs):
      '''_addChildDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Document
'''
    ...
    def _addChildGeomInfo (self, *args, **kwargs):
      '''_addChildGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomInfo
'''
    ...
    def _addChildGeomProp (self, *args, **kwargs):
      '''_addChildGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def _addChildImplementation (self, *args, **kwargs):
      '''_addChildImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Implementation
'''
    ...
    def _addChildLook (self, *args, **kwargs):
      '''_addChildLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Look
'''
    ...
    def _addChildMaterialAssign (self, *args, **kwargs):
      '''_addChildMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::MaterialAssign
'''
    ...
    def _addChildNode (self, *args, **kwargs):
      '''_addChildNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Node
'''
    ...
    def _addChildNodeDef (self, *args, **kwargs):
      '''_addChildNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeDef
'''
    ...
    def _addChildNodeGraph (self, *args, **kwargs):
      '''_addChildNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeGraph
'''
    ...
    def _addChildProperty (self, *args, **kwargs):
      '''_addChildProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Property
'''
    ...
    def _addChildPropertySet (self, *args, **kwargs):
      '''_addChildPropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySet
'''
    ...
    def _addChildPropertySetAssign (self, *args, **kwargs):
      '''_addChildPropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySetAssign
'''
    ...
    def _addChildToken (self, *args, **kwargs):
      '''_addChildToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Token
'''
    ...
    def _addChildTypeDef (self, *args, **kwargs):
      '''_addChildTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def _addChildVisibility (self, *args, **kwargs):
      '''_addChildVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Visibility
'''
    ...
    def _getChild (self, *args, **kwargs):
      '''_getChild(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def _getChildOfTypeCollection (self, *args, **kwargs):
      '''_getChildOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Collection
'''
    ...
    def _getChildOfTypeDocument (self, *args, **kwargs):
      '''_getChildOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Document
'''
    ...
    def _getChildOfTypeGeomInfo (self, *args, **kwargs):
      '''_getChildOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomInfo
'''
    ...
    def _getChildOfTypeGeomProp (self, *args, **kwargs):
      '''_getChildOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def _getChildOfTypeImplementation (self, *args, **kwargs):
      '''_getChildOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Implementation
'''
    ...
    def _getChildOfTypeLook (self, *args, **kwargs):
      '''_getChildOfTypeLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Look
'''
    ...
    def _getChildOfTypeMaterialAssign (self, *args, **kwargs):
      '''_getChildOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::MaterialAssign
'''
    ...
    def _getChildOfTypeNode (self, *args, **kwargs):
      '''_getChildOfTypeNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Node
'''
    ...
    def _getChildOfTypeNodeDef (self, *args, **kwargs):
      '''_getChildOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeDef
'''
    ...
    def _getChildOfTypeNodeGraph (self, *args, **kwargs):
      '''_getChildOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeGraph
'''
    ...
    def _getChildOfTypeProperty (self, *args, **kwargs):
      '''_getChildOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Property
'''
    ...
    def _getChildOfTypePropertySet (self, *args, **kwargs):
      '''_getChildOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySet
'''
    ...
    def _getChildOfTypePropertySetAssign (self, *args, **kwargs):
      '''_getChildOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySetAssign
'''
    ...
    def _getChildOfTypeToken (self, *args, **kwargs):
      '''_getChildOfTypeToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Token
'''
    ...
    def _getChildOfTypeTypeDef (self, *args, **kwargs):
      '''_getChildOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def _getChildOfTypeVisibility (self, *args, **kwargs):
      '''_getChildOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Visibility
'''
    ...
    def _getChildrenOfTypeCollection (self, *args, **kwargs):
      '''_getChildrenOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Collection]
'''
    ...
    def _getChildrenOfTypeDocument (self, *args, **kwargs):
      '''_getChildrenOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Document]
'''
    ...
    def _getChildrenOfTypeGeomInfo (self, *args, **kwargs):
      '''_getChildrenOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::GeomInfo]
'''
    ...
    def _getChildrenOfTypeGeomProp (self, *args, **kwargs):
      '''_getChildrenOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::GeomProp]
'''
    ...
    def _getChildrenOfTypeImplementation (self, *args, **kwargs):
      '''_getChildrenOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Implementation]
'''
    ...
    def _getChildrenOfTypeLook (self, *args, **kwargs):
      '''_getChildrenOfTypeLook(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Look]
'''
    ...
    def _getChildrenOfTypeMaterialAssign (self, *args, **kwargs):
      '''_getChildrenOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::MaterialAssign]
'''
    ...
    def _getChildrenOfTypeNode (self, *args, **kwargs):
      '''_getChildrenOfTypeNode(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Node]
'''
    ...
    def _getChildrenOfTypeNodeDef (self, *args, **kwargs):
      '''_getChildrenOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::NodeDef]
'''
    ...
    def _getChildrenOfTypeNodeGraph (self, *args, **kwargs):
      '''_getChildrenOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::NodeGraph]
'''
    ...
    def _getChildrenOfTypeProperty (self, *args, **kwargs):
      '''_getChildrenOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Property]
'''
    ...
    def _getChildrenOfTypePropertySet (self, *args, **kwargs):
      '''_getChildrenOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::PropertySet]
'''
    ...
    def _getChildrenOfTypePropertySetAssign (self, *args, **kwargs):
      '''_getChildrenOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::PropertySetAssign]
'''
    ...
    def _getChildrenOfTypeToken (self, *args, **kwargs):
      '''_getChildrenOfTypeToken(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Token]
'''
    ...
    def _getChildrenOfTypeTypeDef (self, *args, **kwargs):
      '''_getChildrenOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::TypeDef]
'''
    ...
    def _getChildrenOfTypeVisibility (self, *args, **kwargs):
      '''_getChildrenOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Visibility]
'''
    ...
    def _getDefaultValue (self, *args, **kwargs):
      '''_getDefaultValue(self: MaterialX.PyMaterialXCore.ValueElement) -> MaterialX_v1_38_8::Value
'''
    ...
    def _getValue (self, *args, **kwargs):
      '''_getValue(self: MaterialX.PyMaterialXCore.ValueElement) -> MaterialX_v1_38_8::Value
'''
    ...
    def _removeChildOfTypeCollection (self, *args, **kwargs):
      '''_removeChildOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeDocument (self, *args, **kwargs):
      '''_removeChildOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeGeomInfo (self, *args, **kwargs):
      '''_removeChildOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeGeomProp (self, *args, **kwargs):
      '''_removeChildOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeImplementation (self, *args, **kwargs):
      '''_removeChildOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeLook (self, *args, **kwargs):
      '''_removeChildOfTypeLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeMaterialAssign (self, *args, **kwargs):
      '''_removeChildOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNode (self, *args, **kwargs):
      '''_removeChildOfTypeNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNodeDef (self, *args, **kwargs):
      '''_removeChildOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNodeGraph (self, *args, **kwargs):
      '''_removeChildOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeProperty (self, *args, **kwargs):
      '''_removeChildOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypePropertySet (self, *args, **kwargs):
      '''_removeChildOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypePropertySetAssign (self, *args, **kwargs):
      '''_removeChildOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeToken (self, *args, **kwargs):
      '''_removeChildOfTypeToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeTypeDef (self, *args, **kwargs):
      '''_removeChildOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeVisibility (self, *args, **kwargs):
      '''_removeChildOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _setValueboolean (self, *args, **kwargs):
      '''_setValueboolean(self: MaterialX.PyMaterialXCore.ValueElement, value: bool, type: str = '') -> None
'''
    ...
    def _setValuebooleanarray (self, *args, **kwargs):
      '''_setValuebooleanarray(self: MaterialX.PyMaterialXCore.ValueElement, value: List[bool], type: str = '') -> None
'''
    ...
    def _setValuecolor3 (self, *args, **kwargs):
      '''_setValuecolor3(self: MaterialX.PyMaterialXCore.ValueElement, value: MaterialX_v1_38_8::Color3, type: str = '') -> None
'''
    ...
    def _setValuecolor4 (self, *args, **kwargs):
      '''_setValuecolor4(self: MaterialX.PyMaterialXCore.ValueElement, value: MaterialX_v1_38_8::Color4, type: str = '') -> None
'''
    ...
    def _setValuefloat (self, *args, **kwargs):
      '''_setValuefloat(self: MaterialX.PyMaterialXCore.ValueElement, value: float, type: str = '') -> None
'''
    ...
    def _setValuefloatarray (self, *args, **kwargs):
      '''_setValuefloatarray(self: MaterialX.PyMaterialXCore.ValueElement, value: List[float], type: str = '') -> None
'''
    ...
    def _setValueinteger (self, *args, **kwargs):
      '''_setValueinteger(self: MaterialX.PyMaterialXCore.ValueElement, value: int, type: str = '') -> None
'''
    ...
    def _setValueintegerarray (self, *args, **kwargs):
      '''_setValueintegerarray(self: MaterialX.PyMaterialXCore.ValueElement, value: List[int], type: str = '') -> None
'''
    ...
    def _setValuematrix33 (self, *args, **kwargs):
      '''_setValuematrix33(self: MaterialX.PyMaterialXCore.ValueElement, value: MaterialX_v1_38_8::Matrix33, type: str = '') -> None
'''
    ...
    def _setValuematrix44 (self, *args, **kwargs):
      '''_setValuematrix44(self: MaterialX.PyMaterialXCore.ValueElement, value: MaterialX_v1_38_8::Matrix44, type: str = '') -> None
'''
    ...
    def _setValuestring (self, *args, **kwargs):
      '''_setValuestring(self: MaterialX.PyMaterialXCore.ValueElement, value: str, type: str = '') -> None
'''
    ...
    def _setValuestringarray (self, *args, **kwargs):
      '''_setValuestringarray(self: MaterialX.PyMaterialXCore.ValueElement, value: List[str], type: str = '') -> None
'''
    ...
    def _setValuevector2 (self, *args, **kwargs):
      '''_setValuevector2(self: MaterialX.PyMaterialXCore.ValueElement, value: MaterialX_v1_38_8::Vector2, type: str = '') -> None
'''
    ...
    def _setValuevector3 (self, *args, **kwargs):
      '''_setValuevector3(self: MaterialX.PyMaterialXCore.ValueElement, value: MaterialX_v1_38_8::Vector3, type: str = '') -> None
'''
    ...
    def _setValuevector4 (self, *args, **kwargs):
      '''_setValuevector4(self: MaterialX.PyMaterialXCore.ValueElement, value: MaterialX_v1_38_8::Vector4, type: str = '') -> None
'''
    ...
    def addChild (self, elementClass, name, typeString=''):
      '''Add a child element of the given subclass, name, and optional type string.'''
    ...
    def addChildOfCategory (self, *args, **kwargs):
      '''addChildOfCategory(self: MaterialX.PyMaterialXCore.Element, category: str, name: str = '') -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def asString (self, *args, **kwargs):
      '''asString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def changeChildCategory (self, *args, **kwargs):
      '''changeChildCategory(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element, arg1: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def clearContent (self, *args, **kwargs):
      '''clearContent(self: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def copyContentFrom (self, *args, **kwargs):
      '''copyContentFrom(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def createStringResolver (self, *args, **kwargs):
      '''createStringResolver(self: MaterialX.PyMaterialXCore.Element, geom: str = '') -> MaterialX_v1_38_8::StringResolver
'''
    ...
    def createValidChildName (self, *args, **kwargs):
      '''createValidChildName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getActiveColorSpace (self, *args, **kwargs):
      '''getActiveColorSpace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveFilePrefix (self, *args, **kwargs):
      '''getActiveFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveGeomPrefix (self, *args, **kwargs):
      '''getActiveGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveSourceUri (self, *args, **kwargs):
      '''getActiveSourceUri(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveUnit (self, *args, **kwargs):
      '''getActiveUnit(self: MaterialX.PyMaterialXCore.ValueElement) -> str
'''
    ...
    def getAttribute (self, *args, **kwargs):
      '''getAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getAttributeNames (self, *args, **kwargs):
      '''getAttributeNames(self: MaterialX.PyMaterialXCore.Element) -> List[str]
'''
    ...
    def getCategory (self, *args, **kwargs):
      '''getCategory(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getChild (self, name):
      '''Return the child element, if any, with the given name.'''
    ...
    def getChildIndex (self, *args, **kwargs):
      '''getChildIndex(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> int
'''
    ...
    def getChildOfType (self, elementClass, name):
      '''Return the child element, if any, with the given name and subclass.'''
    ...
    def getChildren (self, *args, **kwargs):
      '''getChildren(self: MaterialX.PyMaterialXCore.Element) -> List[MaterialX.PyMaterialXCore.Element]
'''
    ...
    def getChildrenOfType (self, elementClass):
      '''Return a list of all child elements that are instances of the given type.
       The returned list maintains the order in which children were added.'''
    ...
    def getColorSpace (self, *args, **kwargs):
      '''getColorSpace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getDefaultValue (self):
      '''Return the default value for this element.'''
    ...
    def getDescendant (self, *args, **kwargs):
      '''getDescendant(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getDocString (self, *args, **kwargs):
      '''getDocString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getDocument (self, *args, **kwargs):
      '''getDocument(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::Document
'''
    ...
    def getFilePrefix (self, *args, **kwargs):
      '''getFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getGeomPrefix (self, *args, **kwargs):
      '''getGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getImplementationName (self, *args, **kwargs):
      '''getImplementationName(self: MaterialX.PyMaterialXCore.ValueElement) -> str
'''
    ...
    def getInheritString (self, *args, **kwargs):
      '''getInheritString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getInheritsFrom (self, *args, **kwargs):
      '''getInheritsFrom(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getInterfaceName (self, *args, **kwargs):
      '''getInterfaceName(self: MaterialX.PyMaterialXCore.ValueElement) -> str
'''
    ...
    def getIsUniform (self, *args, **kwargs):
      '''getIsUniform(self: MaterialX.PyMaterialXCore.ValueElement) -> bool
'''
    ...
    def getName (self, *args, **kwargs):
      '''getName(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getNamePath (self, *args, **kwargs):
      '''getNamePath(self: MaterialX.PyMaterialXCore.Element, relativeTo: MaterialX.PyMaterialXCore.Element = None) -> str
'''
    ...
    def getNamespace (self, *args, **kwargs):
      '''getNamespace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getParent (self, *args, **kwargs):
      '''getParent(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getQualifiedName (self, *args, **kwargs):
      '''getQualifiedName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getResolvedValueString (self, *args, **kwargs):
      '''getResolvedValueString(self: MaterialX.PyMaterialXCore.ValueElement, resolver: MaterialX_v1_38_8::StringResolver = None) -> str
'''
    ...
    def getRoot (self, *args, **kwargs):
      '''getRoot(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getSelf (self, *args, **kwargs):
      '''getSelf(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getSourceUri (self, *args, **kwargs):
      '''getSourceUri(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getType (self, *args, **kwargs):
      '''getType(self: MaterialX.PyMaterialXCore.TypedElement) -> str
'''
    ...
    def getTypeDef (self, *args, **kwargs):
      '''getTypeDef(self: MaterialX.PyMaterialXCore.TypedElement) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def getUnit (self, *args, **kwargs):
      '''getUnit(self: MaterialX.PyMaterialXCore.ValueElement) -> str
'''
    ...
    def getUnitType (self, *args, **kwargs):
      '''getUnitType(self: MaterialX.PyMaterialXCore.ValueElement) -> str
'''
    ...
    def getUpstreamEdge (self, *args, **kwargs):
      '''getUpstreamEdge(self: MaterialX.PyMaterialXCore.Element, index: int = 0) -> MaterialX_v1_38_8::Edge
'''
    ...
    def getUpstreamEdgeCount (self, *args, **kwargs):
      '''getUpstreamEdgeCount(self: MaterialX.PyMaterialXCore.Element) -> int
'''
    ...
    def getUpstreamElement (self, *args, **kwargs):
      '''getUpstreamElement(self: MaterialX.PyMaterialXCore.Element, index: int = 0) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getValue (self):
      '''Return the typed value of an element.'''
    ...
    def getValueString (self, *args, **kwargs):
      '''getValueString(self: MaterialX.PyMaterialXCore.ValueElement) -> str
'''
    ...
    def hasAttribute (self, *args, **kwargs):
      '''hasAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> bool
'''
    ...
    def hasColorSpace (self, *args, **kwargs):
      '''hasColorSpace(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasFilePrefix (self, *args, **kwargs):
      '''hasFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasGeomPrefix (self, *args, **kwargs):
      '''hasGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasImplementationName (self, *args, **kwargs):
      '''hasImplementationName(self: MaterialX.PyMaterialXCore.ValueElement) -> bool
'''
    ...
    def hasInheritString (self, *args, **kwargs):
      '''hasInheritString(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritanceCycle (self, *args, **kwargs):
      '''hasInheritanceCycle(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritedBase (self, *args, **kwargs):
      '''hasInheritedBase(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInterfaceName (self, *args, **kwargs):
      '''hasInterfaceName(self: MaterialX.PyMaterialXCore.ValueElement) -> bool
'''
    ...
    def hasNamespace (self, *args, **kwargs):
      '''hasNamespace(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasSourceUri (self, *args, **kwargs):
      '''hasSourceUri(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasType (self, *args, **kwargs):
      '''hasType(self: MaterialX.PyMaterialXCore.TypedElement) -> bool
'''
    ...
    def hasUnit (self, *args, **kwargs):
      '''hasUnit(self: MaterialX.PyMaterialXCore.ValueElement) -> bool
'''
    ...
    def hasUnitType (self, *args, **kwargs):
      '''hasUnitType(self: MaterialX.PyMaterialXCore.ValueElement) -> bool
'''
    ...
    def hasValueString (self, *args, **kwargs):
      '''hasValueString(self: MaterialX.PyMaterialXCore.ValueElement) -> bool
'''
    ...
    def isA (self, elementClass, category=''):
      '''Return True if this element is an instance of the given subclass.
       If a category string is specified, then both subclass and category
       matches are required.'''
    ...
    def isMultiOutputType (self, *args, **kwargs):
      '''isMultiOutputType(self: MaterialX.PyMaterialXCore.TypedElement) -> bool
'''
    ...
    def removeAttribute (self, *args, **kwargs):
      '''removeAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def removeChild (self, *args, **kwargs):
      '''removeChild(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def removeChildOfType (self, elementClass, name):
      '''Remove the typed child element, if any, with the given name.'''
    ...
    def setAttribute (self, *args, **kwargs):
      '''setAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str, arg1: str) -> None
'''
    ...
    def setCategory (self, *args, **kwargs):
      '''setCategory(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setChildIndex (self, *args, **kwargs):
      '''setChildIndex(self: MaterialX.PyMaterialXCore.Element, arg0: str, arg1: int) -> None
'''
    ...
    def setColorSpace (self, *args, **kwargs):
      '''setColorSpace(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setDocString (self, *args, **kwargs):
      '''setDocString(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setFilePrefix (self, *args, **kwargs):
      '''setFilePrefix(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setGeomPrefix (self, *args, **kwargs):
      '''setGeomPrefix(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setImplementationName (self, *args, **kwargs):
      '''setImplementationName(self: MaterialX.PyMaterialXCore.ValueElement, arg0: str) -> None
'''
    ...
    def setInheritString (self, *args, **kwargs):
      '''setInheritString(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setInheritsFrom (self, *args, **kwargs):
      '''setInheritsFrom(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def setInterfaceName (self, *args, **kwargs):
      '''setInterfaceName(self: MaterialX.PyMaterialXCore.ValueElement, arg0: str) -> None
'''
    ...
    def setIsUniform (self, *args, **kwargs):
      '''setIsUniform(self: MaterialX.PyMaterialXCore.ValueElement, arg0: bool) -> None
'''
    ...
    def setName (self, *args, **kwargs):
      '''setName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setNamespace (self, *args, **kwargs):
      '''setNamespace(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setSourceUri (self, *args, **kwargs):
      '''setSourceUri(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setType (self, *args, **kwargs):
      '''setType(self: MaterialX.PyMaterialXCore.TypedElement, arg0: str) -> None
'''
    ...
    def setUnit (self, *args, **kwargs):
      '''setUnit(self: MaterialX.PyMaterialXCore.ValueElement, arg0: str) -> None
'''
    ...
    def setUnitType (self, *args, **kwargs):
      '''setUnitType(self: MaterialX.PyMaterialXCore.ValueElement, arg0: str) -> None
'''
    ...
    def setValue (self, value, typeString=''):
      '''Set the typed value of an element.'''
    ...
    def setValueString (self, *args, **kwargs):
      '''setValueString(self: MaterialX.PyMaterialXCore.ValueElement, arg0: str) -> None
'''
    ...
    def traverseGraph (self, *args, **kwargs):
      '''traverseGraph(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::GraphIterator
'''
    ...
    def traverseInheritance (self, *args, **kwargs):
      '''traverseInheritance(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::InheritanceIterator
'''
    ...
    def traverseTree (self, *args, **kwargs):
      '''traverseTree(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::TreeIterator
'''
    ...
    def validate (self, *args, **kwargs):
      '''validate(self: MaterialX.PyMaterialXCore.Element) -> Tuple[bool, str]
'''
    ...

def PropertyAssign (*args):
      '''

'''      
    ...

class PropertyAssign:
    def CATEGORY (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def ENUM_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def ENUM_VALUES_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def IMPLEMENTATION_NAME_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def IMPLEMENTATION_TYPE_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def INTERFACE_NAME_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def TYPE_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def UI_ADVANCED_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def UI_FOLDER_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def UI_MAX_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def UI_MIN_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def UI_NAME_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def UI_SOFT_MAX_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def UI_SOFT_MIN_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def UI_STEP_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def UNIT_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def VALUE_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def _addChildCollection (self, *args, **kwargs):
      '''_addChildCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Collection
'''
    ...
    def _addChildDocument (self, *args, **kwargs):
      '''_addChildDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Document
'''
    ...
    def _addChildGeomInfo (self, *args, **kwargs):
      '''_addChildGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomInfo
'''
    ...
    def _addChildGeomProp (self, *args, **kwargs):
      '''_addChildGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def _addChildImplementation (self, *args, **kwargs):
      '''_addChildImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Implementation
'''
    ...
    def _addChildLook (self, *args, **kwargs):
      '''_addChildLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Look
'''
    ...
    def _addChildMaterialAssign (self, *args, **kwargs):
      '''_addChildMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::MaterialAssign
'''
    ...
    def _addChildNode (self, *args, **kwargs):
      '''_addChildNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Node
'''
    ...
    def _addChildNodeDef (self, *args, **kwargs):
      '''_addChildNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeDef
'''
    ...
    def _addChildNodeGraph (self, *args, **kwargs):
      '''_addChildNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeGraph
'''
    ...
    def _addChildProperty (self, *args, **kwargs):
      '''_addChildProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Property
'''
    ...
    def _addChildPropertySet (self, *args, **kwargs):
      '''_addChildPropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySet
'''
    ...
    def _addChildPropertySetAssign (self, *args, **kwargs):
      '''_addChildPropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySetAssign
'''
    ...
    def _addChildToken (self, *args, **kwargs):
      '''_addChildToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Token
'''
    ...
    def _addChildTypeDef (self, *args, **kwargs):
      '''_addChildTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def _addChildVisibility (self, *args, **kwargs):
      '''_addChildVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Visibility
'''
    ...
    def _getChild (self, *args, **kwargs):
      '''_getChild(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def _getChildOfTypeCollection (self, *args, **kwargs):
      '''_getChildOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Collection
'''
    ...
    def _getChildOfTypeDocument (self, *args, **kwargs):
      '''_getChildOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Document
'''
    ...
    def _getChildOfTypeGeomInfo (self, *args, **kwargs):
      '''_getChildOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomInfo
'''
    ...
    def _getChildOfTypeGeomProp (self, *args, **kwargs):
      '''_getChildOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def _getChildOfTypeImplementation (self, *args, **kwargs):
      '''_getChildOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Implementation
'''
    ...
    def _getChildOfTypeLook (self, *args, **kwargs):
      '''_getChildOfTypeLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Look
'''
    ...
    def _getChildOfTypeMaterialAssign (self, *args, **kwargs):
      '''_getChildOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::MaterialAssign
'''
    ...
    def _getChildOfTypeNode (self, *args, **kwargs):
      '''_getChildOfTypeNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Node
'''
    ...
    def _getChildOfTypeNodeDef (self, *args, **kwargs):
      '''_getChildOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeDef
'''
    ...
    def _getChildOfTypeNodeGraph (self, *args, **kwargs):
      '''_getChildOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeGraph
'''
    ...
    def _getChildOfTypeProperty (self, *args, **kwargs):
      '''_getChildOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Property
'''
    ...
    def _getChildOfTypePropertySet (self, *args, **kwargs):
      '''_getChildOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySet
'''
    ...
    def _getChildOfTypePropertySetAssign (self, *args, **kwargs):
      '''_getChildOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySetAssign
'''
    ...
    def _getChildOfTypeToken (self, *args, **kwargs):
      '''_getChildOfTypeToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Token
'''
    ...
    def _getChildOfTypeTypeDef (self, *args, **kwargs):
      '''_getChildOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def _getChildOfTypeVisibility (self, *args, **kwargs):
      '''_getChildOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Visibility
'''
    ...
    def _getChildrenOfTypeCollection (self, *args, **kwargs):
      '''_getChildrenOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Collection]
'''
    ...
    def _getChildrenOfTypeDocument (self, *args, **kwargs):
      '''_getChildrenOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Document]
'''
    ...
    def _getChildrenOfTypeGeomInfo (self, *args, **kwargs):
      '''_getChildrenOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::GeomInfo]
'''
    ...
    def _getChildrenOfTypeGeomProp (self, *args, **kwargs):
      '''_getChildrenOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::GeomProp]
'''
    ...
    def _getChildrenOfTypeImplementation (self, *args, **kwargs):
      '''_getChildrenOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Implementation]
'''
    ...
    def _getChildrenOfTypeLook (self, *args, **kwargs):
      '''_getChildrenOfTypeLook(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Look]
'''
    ...
    def _getChildrenOfTypeMaterialAssign (self, *args, **kwargs):
      '''_getChildrenOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::MaterialAssign]
'''
    ...
    def _getChildrenOfTypeNode (self, *args, **kwargs):
      '''_getChildrenOfTypeNode(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Node]
'''
    ...
    def _getChildrenOfTypeNodeDef (self, *args, **kwargs):
      '''_getChildrenOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::NodeDef]
'''
    ...
    def _getChildrenOfTypeNodeGraph (self, *args, **kwargs):
      '''_getChildrenOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::NodeGraph]
'''
    ...
    def _getChildrenOfTypeProperty (self, *args, **kwargs):
      '''_getChildrenOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Property]
'''
    ...
    def _getChildrenOfTypePropertySet (self, *args, **kwargs):
      '''_getChildrenOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::PropertySet]
'''
    ...
    def _getChildrenOfTypePropertySetAssign (self, *args, **kwargs):
      '''_getChildrenOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::PropertySetAssign]
'''
    ...
    def _getChildrenOfTypeToken (self, *args, **kwargs):
      '''_getChildrenOfTypeToken(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Token]
'''
    ...
    def _getChildrenOfTypeTypeDef (self, *args, **kwargs):
      '''_getChildrenOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::TypeDef]
'''
    ...
    def _getChildrenOfTypeVisibility (self, *args, **kwargs):
      '''_getChildrenOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Visibility]
'''
    ...
    def _getDefaultValue (self, *args, **kwargs):
      '''_getDefaultValue(self: MaterialX.PyMaterialXCore.ValueElement) -> MaterialX_v1_38_8::Value
'''
    ...
    def _getValue (self, *args, **kwargs):
      '''_getValue(self: MaterialX.PyMaterialXCore.ValueElement) -> MaterialX_v1_38_8::Value
'''
    ...
    def _removeChildOfTypeCollection (self, *args, **kwargs):
      '''_removeChildOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeDocument (self, *args, **kwargs):
      '''_removeChildOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeGeomInfo (self, *args, **kwargs):
      '''_removeChildOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeGeomProp (self, *args, **kwargs):
      '''_removeChildOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeImplementation (self, *args, **kwargs):
      '''_removeChildOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeLook (self, *args, **kwargs):
      '''_removeChildOfTypeLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeMaterialAssign (self, *args, **kwargs):
      '''_removeChildOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNode (self, *args, **kwargs):
      '''_removeChildOfTypeNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNodeDef (self, *args, **kwargs):
      '''_removeChildOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNodeGraph (self, *args, **kwargs):
      '''_removeChildOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeProperty (self, *args, **kwargs):
      '''_removeChildOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypePropertySet (self, *args, **kwargs):
      '''_removeChildOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypePropertySetAssign (self, *args, **kwargs):
      '''_removeChildOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeToken (self, *args, **kwargs):
      '''_removeChildOfTypeToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeTypeDef (self, *args, **kwargs):
      '''_removeChildOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeVisibility (self, *args, **kwargs):
      '''_removeChildOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _setValueboolean (self, *args, **kwargs):
      '''_setValueboolean(self: MaterialX.PyMaterialXCore.ValueElement, value: bool, type: str = '') -> None
'''
    ...
    def _setValuebooleanarray (self, *args, **kwargs):
      '''_setValuebooleanarray(self: MaterialX.PyMaterialXCore.ValueElement, value: List[bool], type: str = '') -> None
'''
    ...
    def _setValuecolor3 (self, *args, **kwargs):
      '''_setValuecolor3(self: MaterialX.PyMaterialXCore.ValueElement, value: MaterialX_v1_38_8::Color3, type: str = '') -> None
'''
    ...
    def _setValuecolor4 (self, *args, **kwargs):
      '''_setValuecolor4(self: MaterialX.PyMaterialXCore.ValueElement, value: MaterialX_v1_38_8::Color4, type: str = '') -> None
'''
    ...
    def _setValuefloat (self, *args, **kwargs):
      '''_setValuefloat(self: MaterialX.PyMaterialXCore.ValueElement, value: float, type: str = '') -> None
'''
    ...
    def _setValuefloatarray (self, *args, **kwargs):
      '''_setValuefloatarray(self: MaterialX.PyMaterialXCore.ValueElement, value: List[float], type: str = '') -> None
'''
    ...
    def _setValueinteger (self, *args, **kwargs):
      '''_setValueinteger(self: MaterialX.PyMaterialXCore.ValueElement, value: int, type: str = '') -> None
'''
    ...
    def _setValueintegerarray (self, *args, **kwargs):
      '''_setValueintegerarray(self: MaterialX.PyMaterialXCore.ValueElement, value: List[int], type: str = '') -> None
'''
    ...
    def _setValuematrix33 (self, *args, **kwargs):
      '''_setValuematrix33(self: MaterialX.PyMaterialXCore.ValueElement, value: MaterialX_v1_38_8::Matrix33, type: str = '') -> None
'''
    ...
    def _setValuematrix44 (self, *args, **kwargs):
      '''_setValuematrix44(self: MaterialX.PyMaterialXCore.ValueElement, value: MaterialX_v1_38_8::Matrix44, type: str = '') -> None
'''
    ...
    def _setValuestring (self, *args, **kwargs):
      '''_setValuestring(self: MaterialX.PyMaterialXCore.ValueElement, value: str, type: str = '') -> None
'''
    ...
    def _setValuestringarray (self, *args, **kwargs):
      '''_setValuestringarray(self: MaterialX.PyMaterialXCore.ValueElement, value: List[str], type: str = '') -> None
'''
    ...
    def _setValuevector2 (self, *args, **kwargs):
      '''_setValuevector2(self: MaterialX.PyMaterialXCore.ValueElement, value: MaterialX_v1_38_8::Vector2, type: str = '') -> None
'''
    ...
    def _setValuevector3 (self, *args, **kwargs):
      '''_setValuevector3(self: MaterialX.PyMaterialXCore.ValueElement, value: MaterialX_v1_38_8::Vector3, type: str = '') -> None
'''
    ...
    def _setValuevector4 (self, *args, **kwargs):
      '''_setValuevector4(self: MaterialX.PyMaterialXCore.ValueElement, value: MaterialX_v1_38_8::Vector4, type: str = '') -> None
'''
    ...
    def addChild (self, elementClass, name, typeString=''):
      '''Add a child element of the given subclass, name, and optional type string.'''
    ...
    def addChildOfCategory (self, *args, **kwargs):
      '''addChildOfCategory(self: MaterialX.PyMaterialXCore.Element, category: str, name: str = '') -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def asString (self, *args, **kwargs):
      '''asString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def changeChildCategory (self, *args, **kwargs):
      '''changeChildCategory(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element, arg1: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def clearContent (self, *args, **kwargs):
      '''clearContent(self: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def copyContentFrom (self, *args, **kwargs):
      '''copyContentFrom(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def createStringResolver (self, *args, **kwargs):
      '''createStringResolver(self: MaterialX.PyMaterialXCore.Element, geom: str = '') -> MaterialX_v1_38_8::StringResolver
'''
    ...
    def createValidChildName (self, *args, **kwargs):
      '''createValidChildName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getActiveColorSpace (self, *args, **kwargs):
      '''getActiveColorSpace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveFilePrefix (self, *args, **kwargs):
      '''getActiveFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveGeomPrefix (self, *args, **kwargs):
      '''getActiveGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveSourceUri (self, *args, **kwargs):
      '''getActiveSourceUri(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveUnit (self, *args, **kwargs):
      '''getActiveUnit(self: MaterialX.PyMaterialXCore.ValueElement) -> str
'''
    ...
    def getAttribute (self, *args, **kwargs):
      '''getAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getAttributeNames (self, *args, **kwargs):
      '''getAttributeNames(self: MaterialX.PyMaterialXCore.Element) -> List[str]
'''
    ...
    def getCategory (self, *args, **kwargs):
      '''getCategory(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getChild (self, name):
      '''Return the child element, if any, with the given name.'''
    ...
    def getChildIndex (self, *args, **kwargs):
      '''getChildIndex(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> int
'''
    ...
    def getChildOfType (self, elementClass, name):
      '''Return the child element, if any, with the given name and subclass.'''
    ...
    def getChildren (self, *args, **kwargs):
      '''getChildren(self: MaterialX.PyMaterialXCore.Element) -> List[MaterialX.PyMaterialXCore.Element]
'''
    ...
    def getChildrenOfType (self, elementClass):
      '''Return a list of all child elements that are instances of the given type.
       The returned list maintains the order in which children were added.'''
    ...
    def getCollection (self, *args, **kwargs):
      '''getCollection(self: MaterialX.PyMaterialXCore.PropertyAssign) -> MaterialX.PyMaterialXCore.Collection
'''
    ...
    def getCollectionString (self, *args, **kwargs):
      '''getCollectionString(self: MaterialX.PyMaterialXCore.PropertyAssign) -> str
'''
    ...
    def getColorSpace (self, *args, **kwargs):
      '''getColorSpace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getDefaultValue (self):
      '''Return the default value for this element.'''
    ...
    def getDescendant (self, *args, **kwargs):
      '''getDescendant(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getDocString (self, *args, **kwargs):
      '''getDocString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getDocument (self, *args, **kwargs):
      '''getDocument(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::Document
'''
    ...
    def getFilePrefix (self, *args, **kwargs):
      '''getFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getGeom (self, *args, **kwargs):
      '''getGeom(self: MaterialX.PyMaterialXCore.PropertyAssign) -> str
'''
    ...
    def getGeomPrefix (self, *args, **kwargs):
      '''getGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getImplementationName (self, *args, **kwargs):
      '''getImplementationName(self: MaterialX.PyMaterialXCore.ValueElement) -> str
'''
    ...
    def getInheritString (self, *args, **kwargs):
      '''getInheritString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getInheritsFrom (self, *args, **kwargs):
      '''getInheritsFrom(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getInterfaceName (self, *args, **kwargs):
      '''getInterfaceName(self: MaterialX.PyMaterialXCore.ValueElement) -> str
'''
    ...
    def getIsUniform (self, *args, **kwargs):
      '''getIsUniform(self: MaterialX.PyMaterialXCore.ValueElement) -> bool
'''
    ...
    def getName (self, *args, **kwargs):
      '''getName(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getNamePath (self, *args, **kwargs):
      '''getNamePath(self: MaterialX.PyMaterialXCore.Element, relativeTo: MaterialX.PyMaterialXCore.Element = None) -> str
'''
    ...
    def getNamespace (self, *args, **kwargs):
      '''getNamespace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getParent (self, *args, **kwargs):
      '''getParent(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getProperty (self, *args, **kwargs):
      '''getProperty(self: MaterialX.PyMaterialXCore.PropertyAssign) -> str
'''
    ...
    def getQualifiedName (self, *args, **kwargs):
      '''getQualifiedName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getResolvedValueString (self, *args, **kwargs):
      '''getResolvedValueString(self: MaterialX.PyMaterialXCore.ValueElement, resolver: MaterialX_v1_38_8::StringResolver = None) -> str
'''
    ...
    def getRoot (self, *args, **kwargs):
      '''getRoot(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getSelf (self, *args, **kwargs):
      '''getSelf(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getSourceUri (self, *args, **kwargs):
      '''getSourceUri(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getType (self, *args, **kwargs):
      '''getType(self: MaterialX.PyMaterialXCore.TypedElement) -> str
'''
    ...
    def getTypeDef (self, *args, **kwargs):
      '''getTypeDef(self: MaterialX.PyMaterialXCore.TypedElement) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def getUnit (self, *args, **kwargs):
      '''getUnit(self: MaterialX.PyMaterialXCore.ValueElement) -> str
'''
    ...
    def getUnitType (self, *args, **kwargs):
      '''getUnitType(self: MaterialX.PyMaterialXCore.ValueElement) -> str
'''
    ...
    def getUpstreamEdge (self, *args, **kwargs):
      '''getUpstreamEdge(self: MaterialX.PyMaterialXCore.Element, index: int = 0) -> MaterialX_v1_38_8::Edge
'''
    ...
    def getUpstreamEdgeCount (self, *args, **kwargs):
      '''getUpstreamEdgeCount(self: MaterialX.PyMaterialXCore.Element) -> int
'''
    ...
    def getUpstreamElement (self, *args, **kwargs):
      '''getUpstreamElement(self: MaterialX.PyMaterialXCore.Element, index: int = 0) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getValue (self):
      '''Return the typed value of an element.'''
    ...
    def getValueString (self, *args, **kwargs):
      '''getValueString(self: MaterialX.PyMaterialXCore.ValueElement) -> str
'''
    ...
    def hasAttribute (self, *args, **kwargs):
      '''hasAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> bool
'''
    ...
    def hasCollectionString (self, *args, **kwargs):
      '''hasCollectionString(self: MaterialX.PyMaterialXCore.PropertyAssign) -> bool
'''
    ...
    def hasColorSpace (self, *args, **kwargs):
      '''hasColorSpace(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasFilePrefix (self, *args, **kwargs):
      '''hasFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasGeom (self, *args, **kwargs):
      '''hasGeom(self: MaterialX.PyMaterialXCore.PropertyAssign) -> bool
'''
    ...
    def hasGeomPrefix (self, *args, **kwargs):
      '''hasGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasImplementationName (self, *args, **kwargs):
      '''hasImplementationName(self: MaterialX.PyMaterialXCore.ValueElement) -> bool
'''
    ...
    def hasInheritString (self, *args, **kwargs):
      '''hasInheritString(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritanceCycle (self, *args, **kwargs):
      '''hasInheritanceCycle(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritedBase (self, *args, **kwargs):
      '''hasInheritedBase(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInterfaceName (self, *args, **kwargs):
      '''hasInterfaceName(self: MaterialX.PyMaterialXCore.ValueElement) -> bool
'''
    ...
    def hasNamespace (self, *args, **kwargs):
      '''hasNamespace(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasProperty (self, *args, **kwargs):
      '''hasProperty(self: MaterialX.PyMaterialXCore.PropertyAssign) -> bool
'''
    ...
    def hasSourceUri (self, *args, **kwargs):
      '''hasSourceUri(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasType (self, *args, **kwargs):
      '''hasType(self: MaterialX.PyMaterialXCore.TypedElement) -> bool
'''
    ...
    def hasUnit (self, *args, **kwargs):
      '''hasUnit(self: MaterialX.PyMaterialXCore.ValueElement) -> bool
'''
    ...
    def hasUnitType (self, *args, **kwargs):
      '''hasUnitType(self: MaterialX.PyMaterialXCore.ValueElement) -> bool
'''
    ...
    def hasValueString (self, *args, **kwargs):
      '''hasValueString(self: MaterialX.PyMaterialXCore.ValueElement) -> bool
'''
    ...
    def isA (self, elementClass, category=''):
      '''Return True if this element is an instance of the given subclass.
       If a category string is specified, then both subclass and category
       matches are required.'''
    ...
    def isMultiOutputType (self, *args, **kwargs):
      '''isMultiOutputType(self: MaterialX.PyMaterialXCore.TypedElement) -> bool
'''
    ...
    def removeAttribute (self, *args, **kwargs):
      '''removeAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def removeChild (self, *args, **kwargs):
      '''removeChild(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def removeChildOfType (self, elementClass, name):
      '''Remove the typed child element, if any, with the given name.'''
    ...
    def setAttribute (self, *args, **kwargs):
      '''setAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str, arg1: str) -> None
'''
    ...
    def setCategory (self, *args, **kwargs):
      '''setCategory(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setChildIndex (self, *args, **kwargs):
      '''setChildIndex(self: MaterialX.PyMaterialXCore.Element, arg0: str, arg1: int) -> None
'''
    ...
    def setCollection (self, *args, **kwargs):
      '''setCollection(self: MaterialX.PyMaterialXCore.PropertyAssign, arg0: MaterialX.PyMaterialXCore.Collection) -> None
'''
    ...
    def setCollectionString (self, *args, **kwargs):
      '''setCollectionString(self: MaterialX.PyMaterialXCore.PropertyAssign, arg0: str) -> None
'''
    ...
    def setColorSpace (self, *args, **kwargs):
      '''setColorSpace(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setDocString (self, *args, **kwargs):
      '''setDocString(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setFilePrefix (self, *args, **kwargs):
      '''setFilePrefix(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setGeom (self, *args, **kwargs):
      '''setGeom(self: MaterialX.PyMaterialXCore.PropertyAssign, arg0: str) -> None
'''
    ...
    def setGeomPrefix (self, *args, **kwargs):
      '''setGeomPrefix(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setImplementationName (self, *args, **kwargs):
      '''setImplementationName(self: MaterialX.PyMaterialXCore.ValueElement, arg0: str) -> None
'''
    ...
    def setInheritString (self, *args, **kwargs):
      '''setInheritString(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setInheritsFrom (self, *args, **kwargs):
      '''setInheritsFrom(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def setInterfaceName (self, *args, **kwargs):
      '''setInterfaceName(self: MaterialX.PyMaterialXCore.ValueElement, arg0: str) -> None
'''
    ...
    def setIsUniform (self, *args, **kwargs):
      '''setIsUniform(self: MaterialX.PyMaterialXCore.ValueElement, arg0: bool) -> None
'''
    ...
    def setName (self, *args, **kwargs):
      '''setName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setNamespace (self, *args, **kwargs):
      '''setNamespace(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setProperty (self, *args, **kwargs):
      '''setProperty(self: MaterialX.PyMaterialXCore.PropertyAssign, arg0: str) -> None
'''
    ...
    def setSourceUri (self, *args, **kwargs):
      '''setSourceUri(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setType (self, *args, **kwargs):
      '''setType(self: MaterialX.PyMaterialXCore.TypedElement, arg0: str) -> None
'''
    ...
    def setUnit (self, *args, **kwargs):
      '''setUnit(self: MaterialX.PyMaterialXCore.ValueElement, arg0: str) -> None
'''
    ...
    def setUnitType (self, *args, **kwargs):
      '''setUnitType(self: MaterialX.PyMaterialXCore.ValueElement, arg0: str) -> None
'''
    ...
    def setValue (self, value, typeString=''):
      '''Set the typed value of an element.'''
    ...
    def setValueString (self, *args, **kwargs):
      '''setValueString(self: MaterialX.PyMaterialXCore.ValueElement, arg0: str) -> None
'''
    ...
    def traverseGraph (self, *args, **kwargs):
      '''traverseGraph(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::GraphIterator
'''
    ...
    def traverseInheritance (self, *args, **kwargs):
      '''traverseInheritance(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::InheritanceIterator
'''
    ...
    def traverseTree (self, *args, **kwargs):
      '''traverseTree(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::TreeIterator
'''
    ...
    def validate (self, *args, **kwargs):
      '''validate(self: MaterialX.PyMaterialXCore.Element) -> Tuple[bool, str]
'''
    ...

def PropertySet (*args):
      '''

'''      
    ...

class PropertySet:
    def CATEGORY (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def _addChildCollection (self, *args, **kwargs):
      '''_addChildCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Collection
'''
    ...
    def _addChildDocument (self, *args, **kwargs):
      '''_addChildDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Document
'''
    ...
    def _addChildGeomInfo (self, *args, **kwargs):
      '''_addChildGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomInfo
'''
    ...
    def _addChildGeomProp (self, *args, **kwargs):
      '''_addChildGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def _addChildImplementation (self, *args, **kwargs):
      '''_addChildImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Implementation
'''
    ...
    def _addChildLook (self, *args, **kwargs):
      '''_addChildLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Look
'''
    ...
    def _addChildMaterialAssign (self, *args, **kwargs):
      '''_addChildMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::MaterialAssign
'''
    ...
    def _addChildNode (self, *args, **kwargs):
      '''_addChildNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Node
'''
    ...
    def _addChildNodeDef (self, *args, **kwargs):
      '''_addChildNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeDef
'''
    ...
    def _addChildNodeGraph (self, *args, **kwargs):
      '''_addChildNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeGraph
'''
    ...
    def _addChildProperty (self, *args, **kwargs):
      '''_addChildProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Property
'''
    ...
    def _addChildPropertySet (self, *args, **kwargs):
      '''_addChildPropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySet
'''
    ...
    def _addChildPropertySetAssign (self, *args, **kwargs):
      '''_addChildPropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySetAssign
'''
    ...
    def _addChildToken (self, *args, **kwargs):
      '''_addChildToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Token
'''
    ...
    def _addChildTypeDef (self, *args, **kwargs):
      '''_addChildTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def _addChildVisibility (self, *args, **kwargs):
      '''_addChildVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Visibility
'''
    ...
    def _getChild (self, *args, **kwargs):
      '''_getChild(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def _getChildOfTypeCollection (self, *args, **kwargs):
      '''_getChildOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Collection
'''
    ...
    def _getChildOfTypeDocument (self, *args, **kwargs):
      '''_getChildOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Document
'''
    ...
    def _getChildOfTypeGeomInfo (self, *args, **kwargs):
      '''_getChildOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomInfo
'''
    ...
    def _getChildOfTypeGeomProp (self, *args, **kwargs):
      '''_getChildOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def _getChildOfTypeImplementation (self, *args, **kwargs):
      '''_getChildOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Implementation
'''
    ...
    def _getChildOfTypeLook (self, *args, **kwargs):
      '''_getChildOfTypeLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Look
'''
    ...
    def _getChildOfTypeMaterialAssign (self, *args, **kwargs):
      '''_getChildOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::MaterialAssign
'''
    ...
    def _getChildOfTypeNode (self, *args, **kwargs):
      '''_getChildOfTypeNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Node
'''
    ...
    def _getChildOfTypeNodeDef (self, *args, **kwargs):
      '''_getChildOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeDef
'''
    ...
    def _getChildOfTypeNodeGraph (self, *args, **kwargs):
      '''_getChildOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeGraph
'''
    ...
    def _getChildOfTypeProperty (self, *args, **kwargs):
      '''_getChildOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Property
'''
    ...
    def _getChildOfTypePropertySet (self, *args, **kwargs):
      '''_getChildOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySet
'''
    ...
    def _getChildOfTypePropertySetAssign (self, *args, **kwargs):
      '''_getChildOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySetAssign
'''
    ...
    def _getChildOfTypeToken (self, *args, **kwargs):
      '''_getChildOfTypeToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Token
'''
    ...
    def _getChildOfTypeTypeDef (self, *args, **kwargs):
      '''_getChildOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def _getChildOfTypeVisibility (self, *args, **kwargs):
      '''_getChildOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Visibility
'''
    ...
    def _getChildrenOfTypeCollection (self, *args, **kwargs):
      '''_getChildrenOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Collection]
'''
    ...
    def _getChildrenOfTypeDocument (self, *args, **kwargs):
      '''_getChildrenOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Document]
'''
    ...
    def _getChildrenOfTypeGeomInfo (self, *args, **kwargs):
      '''_getChildrenOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::GeomInfo]
'''
    ...
    def _getChildrenOfTypeGeomProp (self, *args, **kwargs):
      '''_getChildrenOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::GeomProp]
'''
    ...
    def _getChildrenOfTypeImplementation (self, *args, **kwargs):
      '''_getChildrenOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Implementation]
'''
    ...
    def _getChildrenOfTypeLook (self, *args, **kwargs):
      '''_getChildrenOfTypeLook(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Look]
'''
    ...
    def _getChildrenOfTypeMaterialAssign (self, *args, **kwargs):
      '''_getChildrenOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::MaterialAssign]
'''
    ...
    def _getChildrenOfTypeNode (self, *args, **kwargs):
      '''_getChildrenOfTypeNode(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Node]
'''
    ...
    def _getChildrenOfTypeNodeDef (self, *args, **kwargs):
      '''_getChildrenOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::NodeDef]
'''
    ...
    def _getChildrenOfTypeNodeGraph (self, *args, **kwargs):
      '''_getChildrenOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::NodeGraph]
'''
    ...
    def _getChildrenOfTypeProperty (self, *args, **kwargs):
      '''_getChildrenOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Property]
'''
    ...
    def _getChildrenOfTypePropertySet (self, *args, **kwargs):
      '''_getChildrenOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::PropertySet]
'''
    ...
    def _getChildrenOfTypePropertySetAssign (self, *args, **kwargs):
      '''_getChildrenOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::PropertySetAssign]
'''
    ...
    def _getChildrenOfTypeToken (self, *args, **kwargs):
      '''_getChildrenOfTypeToken(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Token]
'''
    ...
    def _getChildrenOfTypeTypeDef (self, *args, **kwargs):
      '''_getChildrenOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::TypeDef]
'''
    ...
    def _getChildrenOfTypeVisibility (self, *args, **kwargs):
      '''_getChildrenOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Visibility]
'''
    ...
    def _getPropertyValue (self, *args, **kwargs):
      '''_getPropertyValue(self: MaterialX.PyMaterialXCore.PropertySet, arg0: str) -> MaterialX.PyMaterialXCore.Value
'''
    ...
    def _removeChildOfTypeCollection (self, *args, **kwargs):
      '''_removeChildOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeDocument (self, *args, **kwargs):
      '''_removeChildOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeGeomInfo (self, *args, **kwargs):
      '''_removeChildOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeGeomProp (self, *args, **kwargs):
      '''_removeChildOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeImplementation (self, *args, **kwargs):
      '''_removeChildOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeLook (self, *args, **kwargs):
      '''_removeChildOfTypeLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeMaterialAssign (self, *args, **kwargs):
      '''_removeChildOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNode (self, *args, **kwargs):
      '''_removeChildOfTypeNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNodeDef (self, *args, **kwargs):
      '''_removeChildOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNodeGraph (self, *args, **kwargs):
      '''_removeChildOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeProperty (self, *args, **kwargs):
      '''_removeChildOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypePropertySet (self, *args, **kwargs):
      '''_removeChildOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypePropertySetAssign (self, *args, **kwargs):
      '''_removeChildOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeToken (self, *args, **kwargs):
      '''_removeChildOfTypeToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeTypeDef (self, *args, **kwargs):
      '''_removeChildOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeVisibility (self, *args, **kwargs):
      '''_removeChildOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _setPropertyValueboolean (self, *args, **kwargs):
      '''_setPropertyValueboolean(self: MaterialX.PyMaterialXCore.PropertySet, name: str, value: bool, type: str = '') -> MaterialX.PyMaterialXCore.Property
'''
    ...
    def _setPropertyValuebooleanarray (self, *args, **kwargs):
      '''_setPropertyValuebooleanarray(self: MaterialX.PyMaterialXCore.PropertySet, name: str, value: List[bool], type: str = '') -> MaterialX.PyMaterialXCore.Property
'''
    ...
    def _setPropertyValuecolor3 (self, *args, **kwargs):
      '''_setPropertyValuecolor3(self: MaterialX.PyMaterialXCore.PropertySet, name: str, value: MaterialX_v1_38_8::Color3, type: str = '') -> MaterialX.PyMaterialXCore.Property
'''
    ...
    def _setPropertyValuecolor4 (self, *args, **kwargs):
      '''_setPropertyValuecolor4(self: MaterialX.PyMaterialXCore.PropertySet, name: str, value: MaterialX_v1_38_8::Color4, type: str = '') -> MaterialX.PyMaterialXCore.Property
'''
    ...
    def _setPropertyValuefloat (self, *args, **kwargs):
      '''_setPropertyValuefloat(self: MaterialX.PyMaterialXCore.PropertySet, name: str, value: float, type: str = '') -> MaterialX.PyMaterialXCore.Property
'''
    ...
    def _setPropertyValuefloatarray (self, *args, **kwargs):
      '''_setPropertyValuefloatarray(self: MaterialX.PyMaterialXCore.PropertySet, name: str, value: List[float], type: str = '') -> MaterialX.PyMaterialXCore.Property
'''
    ...
    def _setPropertyValueinteger (self, *args, **kwargs):
      '''_setPropertyValueinteger(self: MaterialX.PyMaterialXCore.PropertySet, name: str, value: int, type: str = '') -> MaterialX.PyMaterialXCore.Property
'''
    ...
    def _setPropertyValueintegerarray (self, *args, **kwargs):
      '''_setPropertyValueintegerarray(self: MaterialX.PyMaterialXCore.PropertySet, name: str, value: List[int], type: str = '') -> MaterialX.PyMaterialXCore.Property
'''
    ...
    def _setPropertyValuematrix33 (self, *args, **kwargs):
      '''_setPropertyValuematrix33(self: MaterialX.PyMaterialXCore.PropertySet, name: str, value: MaterialX_v1_38_8::Matrix33, type: str = '') -> MaterialX.PyMaterialXCore.Property
'''
    ...
    def _setPropertyValuematrix44 (self, *args, **kwargs):
      '''_setPropertyValuematrix44(self: MaterialX.PyMaterialXCore.PropertySet, name: str, value: MaterialX_v1_38_8::Matrix44, type: str = '') -> MaterialX.PyMaterialXCore.Property
'''
    ...
    def _setPropertyValuestring (self, *args, **kwargs):
      '''_setPropertyValuestring(self: MaterialX.PyMaterialXCore.PropertySet, name: str, value: str, type: str = '') -> MaterialX.PyMaterialXCore.Property
'''
    ...
    def _setPropertyValuestringarray (self, *args, **kwargs):
      '''_setPropertyValuestringarray(self: MaterialX.PyMaterialXCore.PropertySet, name: str, value: List[str], type: str = '') -> MaterialX.PyMaterialXCore.Property
'''
    ...
    def _setPropertyValuevector2 (self, *args, **kwargs):
      '''_setPropertyValuevector2(self: MaterialX.PyMaterialXCore.PropertySet, name: str, value: MaterialX_v1_38_8::Vector2, type: str = '') -> MaterialX.PyMaterialXCore.Property
'''
    ...
    def _setPropertyValuevector3 (self, *args, **kwargs):
      '''_setPropertyValuevector3(self: MaterialX.PyMaterialXCore.PropertySet, name: str, value: MaterialX_v1_38_8::Vector3, type: str = '') -> MaterialX.PyMaterialXCore.Property
'''
    ...
    def _setPropertyValuevector4 (self, *args, **kwargs):
      '''_setPropertyValuevector4(self: MaterialX.PyMaterialXCore.PropertySet, name: str, value: MaterialX_v1_38_8::Vector4, type: str = '') -> MaterialX.PyMaterialXCore.Property
'''
    ...
    def addChild (self, elementClass, name, typeString=''):
      '''Add a child element of the given subclass, name, and optional type string.'''
    ...
    def addChildOfCategory (self, *args, **kwargs):
      '''addChildOfCategory(self: MaterialX.PyMaterialXCore.Element, category: str, name: str = '') -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def addProperty (self, *args, **kwargs):
      '''addProperty(self: MaterialX.PyMaterialXCore.PropertySet, arg0: str) -> MaterialX.PyMaterialXCore.Property
'''
    ...
    def asString (self, *args, **kwargs):
      '''asString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def changeChildCategory (self, *args, **kwargs):
      '''changeChildCategory(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element, arg1: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def clearContent (self, *args, **kwargs):
      '''clearContent(self: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def copyContentFrom (self, *args, **kwargs):
      '''copyContentFrom(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def createStringResolver (self, *args, **kwargs):
      '''createStringResolver(self: MaterialX.PyMaterialXCore.Element, geom: str = '') -> MaterialX_v1_38_8::StringResolver
'''
    ...
    def createValidChildName (self, *args, **kwargs):
      '''createValidChildName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getActiveColorSpace (self, *args, **kwargs):
      '''getActiveColorSpace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveFilePrefix (self, *args, **kwargs):
      '''getActiveFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveGeomPrefix (self, *args, **kwargs):
      '''getActiveGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveSourceUri (self, *args, **kwargs):
      '''getActiveSourceUri(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getAttribute (self, *args, **kwargs):
      '''getAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getAttributeNames (self, *args, **kwargs):
      '''getAttributeNames(self: MaterialX.PyMaterialXCore.Element) -> List[str]
'''
    ...
    def getCategory (self, *args, **kwargs):
      '''getCategory(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getChild (self, name):
      '''Return the child element, if any, with the given name.'''
    ...
    def getChildIndex (self, *args, **kwargs):
      '''getChildIndex(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> int
'''
    ...
    def getChildOfType (self, elementClass, name):
      '''Return the child element, if any, with the given name and subclass.'''
    ...
    def getChildren (self, *args, **kwargs):
      '''getChildren(self: MaterialX.PyMaterialXCore.Element) -> List[MaterialX.PyMaterialXCore.Element]
'''
    ...
    def getChildrenOfType (self, elementClass):
      '''Return a list of all child elements that are instances of the given type.
       The returned list maintains the order in which children were added.'''
    ...
    def getColorSpace (self, *args, **kwargs):
      '''getColorSpace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getDescendant (self, *args, **kwargs):
      '''getDescendant(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getDocString (self, *args, **kwargs):
      '''getDocString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getDocument (self, *args, **kwargs):
      '''getDocument(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::Document
'''
    ...
    def getFilePrefix (self, *args, **kwargs):
      '''getFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getGeomPrefix (self, *args, **kwargs):
      '''getGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getInheritString (self, *args, **kwargs):
      '''getInheritString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getInheritsFrom (self, *args, **kwargs):
      '''getInheritsFrom(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getName (self, *args, **kwargs):
      '''getName(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getNamePath (self, *args, **kwargs):
      '''getNamePath(self: MaterialX.PyMaterialXCore.Element, relativeTo: MaterialX.PyMaterialXCore.Element = None) -> str
'''
    ...
    def getNamespace (self, *args, **kwargs):
      '''getNamespace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getParent (self, *args, **kwargs):
      '''getParent(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getProperties (self, *args, **kwargs):
      '''getProperties(self: MaterialX.PyMaterialXCore.PropertySet) -> List[MaterialX.PyMaterialXCore.Property]
'''
    ...
    def getPropertyValue (self, name, target=''):
      '''Return the typed value of a property by its name.  If the given property
       is not found, then None is returned.'''
    ...
    def getQualifiedName (self, *args, **kwargs):
      '''getQualifiedName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getRoot (self, *args, **kwargs):
      '''getRoot(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getSelf (self, *args, **kwargs):
      '''getSelf(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getSourceUri (self, *args, **kwargs):
      '''getSourceUri(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getUpstreamEdge (self, *args, **kwargs):
      '''getUpstreamEdge(self: MaterialX.PyMaterialXCore.Element, index: int = 0) -> MaterialX_v1_38_8::Edge
'''
    ...
    def getUpstreamEdgeCount (self, *args, **kwargs):
      '''getUpstreamEdgeCount(self: MaterialX.PyMaterialXCore.Element) -> int
'''
    ...
    def getUpstreamElement (self, *args, **kwargs):
      '''getUpstreamElement(self: MaterialX.PyMaterialXCore.Element, index: int = 0) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def hasAttribute (self, *args, **kwargs):
      '''hasAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> bool
'''
    ...
    def hasColorSpace (self, *args, **kwargs):
      '''hasColorSpace(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasFilePrefix (self, *args, **kwargs):
      '''hasFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasGeomPrefix (self, *args, **kwargs):
      '''hasGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritString (self, *args, **kwargs):
      '''hasInheritString(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritanceCycle (self, *args, **kwargs):
      '''hasInheritanceCycle(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritedBase (self, *args, **kwargs):
      '''hasInheritedBase(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasNamespace (self, *args, **kwargs):
      '''hasNamespace(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasSourceUri (self, *args, **kwargs):
      '''hasSourceUri(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def isA (self, elementClass, category=''):
      '''Return True if this element is an instance of the given subclass.
       If a category string is specified, then both subclass and category
       matches are required.'''
    ...
    def removeAttribute (self, *args, **kwargs):
      '''removeAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def removeChild (self, *args, **kwargs):
      '''removeChild(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def removeChildOfType (self, elementClass, name):
      '''Remove the typed child element, if any, with the given name.'''
    ...
    def removeProperty (self, *args, **kwargs):
      '''removeProperty(self: MaterialX.PyMaterialXCore.PropertySet, arg0: str) -> None
'''
    ...
    def setAttribute (self, *args, **kwargs):
      '''setAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str, arg1: str) -> None
'''
    ...
    def setCategory (self, *args, **kwargs):
      '''setCategory(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setChildIndex (self, *args, **kwargs):
      '''setChildIndex(self: MaterialX.PyMaterialXCore.Element, arg0: str, arg1: int) -> None
'''
    ...
    def setColorSpace (self, *args, **kwargs):
      '''setColorSpace(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setDocString (self, *args, **kwargs):
      '''setDocString(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setFilePrefix (self, *args, **kwargs):
      '''setFilePrefix(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setGeomPrefix (self, *args, **kwargs):
      '''setGeomPrefix(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setInheritString (self, *args, **kwargs):
      '''setInheritString(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setInheritsFrom (self, *args, **kwargs):
      '''setInheritsFrom(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def setName (self, *args, **kwargs):
      '''setName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setNamespace (self, *args, **kwargs):
      '''setNamespace(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setPropertyValue (self, name, value, typeString=''):
      '''Set the typed value of a property by its name, creating a child element
       to hold the property if needed.'''
    ...
    def setSourceUri (self, *args, **kwargs):
      '''setSourceUri(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def traverseGraph (self, *args, **kwargs):
      '''traverseGraph(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::GraphIterator
'''
    ...
    def traverseInheritance (self, *args, **kwargs):
      '''traverseInheritance(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::InheritanceIterator
'''
    ...
    def traverseTree (self, *args, **kwargs):
      '''traverseTree(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::TreeIterator
'''
    ...
    def validate (self, *args, **kwargs):
      '''validate(self: MaterialX.PyMaterialXCore.Element) -> Tuple[bool, str]
'''
    ...

def PropertySetAssign (*args):
      '''

'''      
    ...

class PropertySetAssign:
    def CATEGORY (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def _addChildCollection (self, *args, **kwargs):
      '''_addChildCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Collection
'''
    ...
    def _addChildDocument (self, *args, **kwargs):
      '''_addChildDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Document
'''
    ...
    def _addChildGeomInfo (self, *args, **kwargs):
      '''_addChildGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomInfo
'''
    ...
    def _addChildGeomProp (self, *args, **kwargs):
      '''_addChildGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def _addChildImplementation (self, *args, **kwargs):
      '''_addChildImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Implementation
'''
    ...
    def _addChildLook (self, *args, **kwargs):
      '''_addChildLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Look
'''
    ...
    def _addChildMaterialAssign (self, *args, **kwargs):
      '''_addChildMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::MaterialAssign
'''
    ...
    def _addChildNode (self, *args, **kwargs):
      '''_addChildNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Node
'''
    ...
    def _addChildNodeDef (self, *args, **kwargs):
      '''_addChildNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeDef
'''
    ...
    def _addChildNodeGraph (self, *args, **kwargs):
      '''_addChildNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeGraph
'''
    ...
    def _addChildProperty (self, *args, **kwargs):
      '''_addChildProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Property
'''
    ...
    def _addChildPropertySet (self, *args, **kwargs):
      '''_addChildPropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySet
'''
    ...
    def _addChildPropertySetAssign (self, *args, **kwargs):
      '''_addChildPropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySetAssign
'''
    ...
    def _addChildToken (self, *args, **kwargs):
      '''_addChildToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Token
'''
    ...
    def _addChildTypeDef (self, *args, **kwargs):
      '''_addChildTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def _addChildVisibility (self, *args, **kwargs):
      '''_addChildVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Visibility
'''
    ...
    def _getChild (self, *args, **kwargs):
      '''_getChild(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def _getChildOfTypeCollection (self, *args, **kwargs):
      '''_getChildOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Collection
'''
    ...
    def _getChildOfTypeDocument (self, *args, **kwargs):
      '''_getChildOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Document
'''
    ...
    def _getChildOfTypeGeomInfo (self, *args, **kwargs):
      '''_getChildOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomInfo
'''
    ...
    def _getChildOfTypeGeomProp (self, *args, **kwargs):
      '''_getChildOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def _getChildOfTypeImplementation (self, *args, **kwargs):
      '''_getChildOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Implementation
'''
    ...
    def _getChildOfTypeLook (self, *args, **kwargs):
      '''_getChildOfTypeLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Look
'''
    ...
    def _getChildOfTypeMaterialAssign (self, *args, **kwargs):
      '''_getChildOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::MaterialAssign
'''
    ...
    def _getChildOfTypeNode (self, *args, **kwargs):
      '''_getChildOfTypeNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Node
'''
    ...
    def _getChildOfTypeNodeDef (self, *args, **kwargs):
      '''_getChildOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeDef
'''
    ...
    def _getChildOfTypeNodeGraph (self, *args, **kwargs):
      '''_getChildOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeGraph
'''
    ...
    def _getChildOfTypeProperty (self, *args, **kwargs):
      '''_getChildOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Property
'''
    ...
    def _getChildOfTypePropertySet (self, *args, **kwargs):
      '''_getChildOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySet
'''
    ...
    def _getChildOfTypePropertySetAssign (self, *args, **kwargs):
      '''_getChildOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySetAssign
'''
    ...
    def _getChildOfTypeToken (self, *args, **kwargs):
      '''_getChildOfTypeToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Token
'''
    ...
    def _getChildOfTypeTypeDef (self, *args, **kwargs):
      '''_getChildOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def _getChildOfTypeVisibility (self, *args, **kwargs):
      '''_getChildOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Visibility
'''
    ...
    def _getChildrenOfTypeCollection (self, *args, **kwargs):
      '''_getChildrenOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Collection]
'''
    ...
    def _getChildrenOfTypeDocument (self, *args, **kwargs):
      '''_getChildrenOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Document]
'''
    ...
    def _getChildrenOfTypeGeomInfo (self, *args, **kwargs):
      '''_getChildrenOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::GeomInfo]
'''
    ...
    def _getChildrenOfTypeGeomProp (self, *args, **kwargs):
      '''_getChildrenOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::GeomProp]
'''
    ...
    def _getChildrenOfTypeImplementation (self, *args, **kwargs):
      '''_getChildrenOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Implementation]
'''
    ...
    def _getChildrenOfTypeLook (self, *args, **kwargs):
      '''_getChildrenOfTypeLook(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Look]
'''
    ...
    def _getChildrenOfTypeMaterialAssign (self, *args, **kwargs):
      '''_getChildrenOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::MaterialAssign]
'''
    ...
    def _getChildrenOfTypeNode (self, *args, **kwargs):
      '''_getChildrenOfTypeNode(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Node]
'''
    ...
    def _getChildrenOfTypeNodeDef (self, *args, **kwargs):
      '''_getChildrenOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::NodeDef]
'''
    ...
    def _getChildrenOfTypeNodeGraph (self, *args, **kwargs):
      '''_getChildrenOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::NodeGraph]
'''
    ...
    def _getChildrenOfTypeProperty (self, *args, **kwargs):
      '''_getChildrenOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Property]
'''
    ...
    def _getChildrenOfTypePropertySet (self, *args, **kwargs):
      '''_getChildrenOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::PropertySet]
'''
    ...
    def _getChildrenOfTypePropertySetAssign (self, *args, **kwargs):
      '''_getChildrenOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::PropertySetAssign]
'''
    ...
    def _getChildrenOfTypeToken (self, *args, **kwargs):
      '''_getChildrenOfTypeToken(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Token]
'''
    ...
    def _getChildrenOfTypeTypeDef (self, *args, **kwargs):
      '''_getChildrenOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::TypeDef]
'''
    ...
    def _getChildrenOfTypeVisibility (self, *args, **kwargs):
      '''_getChildrenOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Visibility]
'''
    ...
    def _removeChildOfTypeCollection (self, *args, **kwargs):
      '''_removeChildOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeDocument (self, *args, **kwargs):
      '''_removeChildOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeGeomInfo (self, *args, **kwargs):
      '''_removeChildOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeGeomProp (self, *args, **kwargs):
      '''_removeChildOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeImplementation (self, *args, **kwargs):
      '''_removeChildOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeLook (self, *args, **kwargs):
      '''_removeChildOfTypeLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeMaterialAssign (self, *args, **kwargs):
      '''_removeChildOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNode (self, *args, **kwargs):
      '''_removeChildOfTypeNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNodeDef (self, *args, **kwargs):
      '''_removeChildOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNodeGraph (self, *args, **kwargs):
      '''_removeChildOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeProperty (self, *args, **kwargs):
      '''_removeChildOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypePropertySet (self, *args, **kwargs):
      '''_removeChildOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypePropertySetAssign (self, *args, **kwargs):
      '''_removeChildOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeToken (self, *args, **kwargs):
      '''_removeChildOfTypeToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeTypeDef (self, *args, **kwargs):
      '''_removeChildOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeVisibility (self, *args, **kwargs):
      '''_removeChildOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def addChild (self, elementClass, name, typeString=''):
      '''Add a child element of the given subclass, name, and optional type string.'''
    ...
    def addChildOfCategory (self, *args, **kwargs):
      '''addChildOfCategory(self: MaterialX.PyMaterialXCore.Element, category: str, name: str = '') -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def asString (self, *args, **kwargs):
      '''asString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def changeChildCategory (self, *args, **kwargs):
      '''changeChildCategory(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element, arg1: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def clearContent (self, *args, **kwargs):
      '''clearContent(self: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def copyContentFrom (self, *args, **kwargs):
      '''copyContentFrom(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def createStringResolver (self, *args, **kwargs):
      '''createStringResolver(self: MaterialX.PyMaterialXCore.Element, geom: str = '') -> MaterialX_v1_38_8::StringResolver
'''
    ...
    def createValidChildName (self, *args, **kwargs):
      '''createValidChildName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getActiveColorSpace (self, *args, **kwargs):
      '''getActiveColorSpace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveFilePrefix (self, *args, **kwargs):
      '''getActiveFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveGeomPrefix (self, *args, **kwargs):
      '''getActiveGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveSourceUri (self, *args, **kwargs):
      '''getActiveSourceUri(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getAttribute (self, *args, **kwargs):
      '''getAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getAttributeNames (self, *args, **kwargs):
      '''getAttributeNames(self: MaterialX.PyMaterialXCore.Element) -> List[str]
'''
    ...
    def getCategory (self, *args, **kwargs):
      '''getCategory(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getChild (self, name):
      '''Return the child element, if any, with the given name.'''
    ...
    def getChildIndex (self, *args, **kwargs):
      '''getChildIndex(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> int
'''
    ...
    def getChildOfType (self, elementClass, name):
      '''Return the child element, if any, with the given name and subclass.'''
    ...
    def getChildren (self, *args, **kwargs):
      '''getChildren(self: MaterialX.PyMaterialXCore.Element) -> List[MaterialX.PyMaterialXCore.Element]
'''
    ...
    def getChildrenOfType (self, elementClass):
      '''Return a list of all child elements that are instances of the given type.
       The returned list maintains the order in which children were added.'''
    ...
    def getCollection (self, *args, **kwargs):
      '''getCollection(self: MaterialX.PyMaterialXCore.GeomElement) -> MaterialX_v1_38_8::Collection
'''
    ...
    def getCollectionString (self, *args, **kwargs):
      '''getCollectionString(self: MaterialX.PyMaterialXCore.GeomElement) -> str
'''
    ...
    def getColorSpace (self, *args, **kwargs):
      '''getColorSpace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getDescendant (self, *args, **kwargs):
      '''getDescendant(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getDocString (self, *args, **kwargs):
      '''getDocString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getDocument (self, *args, **kwargs):
      '''getDocument(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::Document
'''
    ...
    def getFilePrefix (self, *args, **kwargs):
      '''getFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getGeom (self, *args, **kwargs):
      '''getGeom(self: MaterialX.PyMaterialXCore.GeomElement) -> str
'''
    ...
    def getGeomPrefix (self, *args, **kwargs):
      '''getGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getInheritString (self, *args, **kwargs):
      '''getInheritString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getInheritsFrom (self, *args, **kwargs):
      '''getInheritsFrom(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getName (self, *args, **kwargs):
      '''getName(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getNamePath (self, *args, **kwargs):
      '''getNamePath(self: MaterialX.PyMaterialXCore.Element, relativeTo: MaterialX.PyMaterialXCore.Element = None) -> str
'''
    ...
    def getNamespace (self, *args, **kwargs):
      '''getNamespace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getParent (self, *args, **kwargs):
      '''getParent(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getPropertySet (self, *args, **kwargs):
      '''getPropertySet(self: MaterialX.PyMaterialXCore.PropertySetAssign) -> MaterialX.PyMaterialXCore.PropertySet
'''
    ...
    def getPropertySetString (self, *args, **kwargs):
      '''getPropertySetString(self: MaterialX.PyMaterialXCore.PropertySetAssign) -> str
'''
    ...
    def getQualifiedName (self, *args, **kwargs):
      '''getQualifiedName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getRoot (self, *args, **kwargs):
      '''getRoot(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getSelf (self, *args, **kwargs):
      '''getSelf(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getSourceUri (self, *args, **kwargs):
      '''getSourceUri(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getUpstreamEdge (self, *args, **kwargs):
      '''getUpstreamEdge(self: MaterialX.PyMaterialXCore.Element, index: int = 0) -> MaterialX_v1_38_8::Edge
'''
    ...
    def getUpstreamEdgeCount (self, *args, **kwargs):
      '''getUpstreamEdgeCount(self: MaterialX.PyMaterialXCore.Element) -> int
'''
    ...
    def getUpstreamElement (self, *args, **kwargs):
      '''getUpstreamElement(self: MaterialX.PyMaterialXCore.Element, index: int = 0) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def hasAttribute (self, *args, **kwargs):
      '''hasAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> bool
'''
    ...
    def hasCollectionString (self, *args, **kwargs):
      '''hasCollectionString(self: MaterialX.PyMaterialXCore.GeomElement) -> bool
'''
    ...
    def hasColorSpace (self, *args, **kwargs):
      '''hasColorSpace(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasFilePrefix (self, *args, **kwargs):
      '''hasFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasGeom (self, *args, **kwargs):
      '''hasGeom(self: MaterialX.PyMaterialXCore.GeomElement) -> bool
'''
    ...
    def hasGeomPrefix (self, *args, **kwargs):
      '''hasGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritString (self, *args, **kwargs):
      '''hasInheritString(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritanceCycle (self, *args, **kwargs):
      '''hasInheritanceCycle(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritedBase (self, *args, **kwargs):
      '''hasInheritedBase(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasNamespace (self, *args, **kwargs):
      '''hasNamespace(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasPropertySetString (self, *args, **kwargs):
      '''hasPropertySetString(self: MaterialX.PyMaterialXCore.PropertySetAssign) -> bool
'''
    ...
    def hasSourceUri (self, *args, **kwargs):
      '''hasSourceUri(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def isA (self, elementClass, category=''):
      '''Return True if this element is an instance of the given subclass.
       If a category string is specified, then both subclass and category
       matches are required.'''
    ...
    def removeAttribute (self, *args, **kwargs):
      '''removeAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def removeChild (self, *args, **kwargs):
      '''removeChild(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def removeChildOfType (self, elementClass, name):
      '''Remove the typed child element, if any, with the given name.'''
    ...
    def setAttribute (self, *args, **kwargs):
      '''setAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str, arg1: str) -> None
'''
    ...
    def setCategory (self, *args, **kwargs):
      '''setCategory(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setChildIndex (self, *args, **kwargs):
      '''setChildIndex(self: MaterialX.PyMaterialXCore.Element, arg0: str, arg1: int) -> None
'''
    ...
    def setCollection (self, *args, **kwargs):
      '''setCollection(self: MaterialX.PyMaterialXCore.GeomElement, arg0: MaterialX_v1_38_8::Collection) -> None
'''
    ...
    def setCollectionString (self, *args, **kwargs):
      '''setCollectionString(self: MaterialX.PyMaterialXCore.GeomElement, arg0: str) -> None
'''
    ...
    def setColorSpace (self, *args, **kwargs):
      '''setColorSpace(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setDocString (self, *args, **kwargs):
      '''setDocString(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setFilePrefix (self, *args, **kwargs):
      '''setFilePrefix(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setGeom (self, *args, **kwargs):
      '''setGeom(self: MaterialX.PyMaterialXCore.GeomElement, arg0: str) -> None
'''
    ...
    def setGeomPrefix (self, *args, **kwargs):
      '''setGeomPrefix(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setInheritString (self, *args, **kwargs):
      '''setInheritString(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setInheritsFrom (self, *args, **kwargs):
      '''setInheritsFrom(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def setName (self, *args, **kwargs):
      '''setName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setNamespace (self, *args, **kwargs):
      '''setNamespace(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setPropertySet (self, *args, **kwargs):
      '''setPropertySet(self: MaterialX.PyMaterialXCore.PropertySetAssign, arg0: MaterialX.PyMaterialXCore.PropertySet) -> None
'''
    ...
    def setPropertySetString (self, *args, **kwargs):
      '''setPropertySetString(self: MaterialX.PyMaterialXCore.PropertySetAssign, arg0: str) -> None
'''
    ...
    def setSourceUri (self, *args, **kwargs):
      '''setSourceUri(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def traverseGraph (self, *args, **kwargs):
      '''traverseGraph(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::GraphIterator
'''
    ...
    def traverseInheritance (self, *args, **kwargs):
      '''traverseInheritance(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::InheritanceIterator
'''
    ...
    def traverseTree (self, *args, **kwargs):
      '''traverseTree(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::TreeIterator
'''
    ...
    def validate (self, *args, **kwargs):
      '''validate(self: MaterialX.PyMaterialXCore.Element) -> Tuple[bool, str]
'''
    ...

def PyMaterialXCore (*args):
      '''

'''      
    ...

def PyMaterialXFormat (*args):
      '''

'''      
    ...

def STRING_TYPE_STRING (*args):
      '''

'''      
    ...

def SURFACE_MATERIAL_NODE_STRING (*args):
      '''

'''      
    ...

def SURFACE_SHADER_TYPE_STRING (*args):
      '''

'''      
    ...

def StringResolver (*args):
      '''

'''      
    ...

class StringResolver:
    def getFilePrefix (self, *args, **kwargs):
      '''getFilePrefix(self: MaterialX.PyMaterialXCore.StringResolver) -> str
'''
    ...
    def getFilenameSubstitutions (self, *args, **kwargs):
      '''getFilenameSubstitutions(self: MaterialX.PyMaterialXCore.StringResolver) -> Dict[str, str]
'''
    ...
    def getGeomNameSubstitutions (self, *args, **kwargs):
      '''getGeomNameSubstitutions(self: MaterialX.PyMaterialXCore.StringResolver) -> Dict[str, str]
'''
    ...
    def getGeomPrefix (self, *args, **kwargs):
      '''getGeomPrefix(self: MaterialX.PyMaterialXCore.StringResolver) -> str
'''
    ...
    def resolve (self, *args, **kwargs):
      '''resolve(self: MaterialX.PyMaterialXCore.StringResolver, arg0: str, arg1: str) -> str
'''
    ...
    def setFilePrefix (self, *args, **kwargs):
      '''setFilePrefix(self: MaterialX.PyMaterialXCore.StringResolver, arg0: str) -> None
'''
    ...
    def setFilenameSubstitution (self, *args, **kwargs):
      '''setFilenameSubstitution(self: MaterialX.PyMaterialXCore.StringResolver, arg0: str, arg1: str) -> None
'''
    ...
    def setGeomNameSubstitution (self, *args, **kwargs):
      '''setGeomNameSubstitution(self: MaterialX.PyMaterialXCore.StringResolver, arg0: str, arg1: str) -> None
'''
    ...
    def setGeomPrefix (self, *args, **kwargs):
      '''setGeomPrefix(self: MaterialX.PyMaterialXCore.StringResolver, arg0: str) -> None
'''
    ...
    def setUdimString (self, *args, **kwargs):
      '''setUdimString(self: MaterialX.PyMaterialXCore.StringResolver, arg0: str) -> None
'''
    ...
    def setUvTileString (self, *args, **kwargs):
      '''setUvTileString(self: MaterialX.PyMaterialXCore.StringResolver, arg0: str) -> None
'''
    ...

def TargetDef (*args):
      '''

'''      
    ...

class TargetDef:
    def CATEGORY (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def TYPE_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def _addChildCollection (self, *args, **kwargs):
      '''_addChildCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Collection
'''
    ...
    def _addChildDocument (self, *args, **kwargs):
      '''_addChildDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Document
'''
    ...
    def _addChildGeomInfo (self, *args, **kwargs):
      '''_addChildGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomInfo
'''
    ...
    def _addChildGeomProp (self, *args, **kwargs):
      '''_addChildGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def _addChildImplementation (self, *args, **kwargs):
      '''_addChildImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Implementation
'''
    ...
    def _addChildLook (self, *args, **kwargs):
      '''_addChildLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Look
'''
    ...
    def _addChildMaterialAssign (self, *args, **kwargs):
      '''_addChildMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::MaterialAssign
'''
    ...
    def _addChildNode (self, *args, **kwargs):
      '''_addChildNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Node
'''
    ...
    def _addChildNodeDef (self, *args, **kwargs):
      '''_addChildNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeDef
'''
    ...
    def _addChildNodeGraph (self, *args, **kwargs):
      '''_addChildNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeGraph
'''
    ...
    def _addChildProperty (self, *args, **kwargs):
      '''_addChildProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Property
'''
    ...
    def _addChildPropertySet (self, *args, **kwargs):
      '''_addChildPropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySet
'''
    ...
    def _addChildPropertySetAssign (self, *args, **kwargs):
      '''_addChildPropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySetAssign
'''
    ...
    def _addChildToken (self, *args, **kwargs):
      '''_addChildToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Token
'''
    ...
    def _addChildTypeDef (self, *args, **kwargs):
      '''_addChildTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def _addChildVisibility (self, *args, **kwargs):
      '''_addChildVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Visibility
'''
    ...
    def _getChild (self, *args, **kwargs):
      '''_getChild(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def _getChildOfTypeCollection (self, *args, **kwargs):
      '''_getChildOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Collection
'''
    ...
    def _getChildOfTypeDocument (self, *args, **kwargs):
      '''_getChildOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Document
'''
    ...
    def _getChildOfTypeGeomInfo (self, *args, **kwargs):
      '''_getChildOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomInfo
'''
    ...
    def _getChildOfTypeGeomProp (self, *args, **kwargs):
      '''_getChildOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def _getChildOfTypeImplementation (self, *args, **kwargs):
      '''_getChildOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Implementation
'''
    ...
    def _getChildOfTypeLook (self, *args, **kwargs):
      '''_getChildOfTypeLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Look
'''
    ...
    def _getChildOfTypeMaterialAssign (self, *args, **kwargs):
      '''_getChildOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::MaterialAssign
'''
    ...
    def _getChildOfTypeNode (self, *args, **kwargs):
      '''_getChildOfTypeNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Node
'''
    ...
    def _getChildOfTypeNodeDef (self, *args, **kwargs):
      '''_getChildOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeDef
'''
    ...
    def _getChildOfTypeNodeGraph (self, *args, **kwargs):
      '''_getChildOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeGraph
'''
    ...
    def _getChildOfTypeProperty (self, *args, **kwargs):
      '''_getChildOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Property
'''
    ...
    def _getChildOfTypePropertySet (self, *args, **kwargs):
      '''_getChildOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySet
'''
    ...
    def _getChildOfTypePropertySetAssign (self, *args, **kwargs):
      '''_getChildOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySetAssign
'''
    ...
    def _getChildOfTypeToken (self, *args, **kwargs):
      '''_getChildOfTypeToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Token
'''
    ...
    def _getChildOfTypeTypeDef (self, *args, **kwargs):
      '''_getChildOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def _getChildOfTypeVisibility (self, *args, **kwargs):
      '''_getChildOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Visibility
'''
    ...
    def _getChildrenOfTypeCollection (self, *args, **kwargs):
      '''_getChildrenOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Collection]
'''
    ...
    def _getChildrenOfTypeDocument (self, *args, **kwargs):
      '''_getChildrenOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Document]
'''
    ...
    def _getChildrenOfTypeGeomInfo (self, *args, **kwargs):
      '''_getChildrenOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::GeomInfo]
'''
    ...
    def _getChildrenOfTypeGeomProp (self, *args, **kwargs):
      '''_getChildrenOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::GeomProp]
'''
    ...
    def _getChildrenOfTypeImplementation (self, *args, **kwargs):
      '''_getChildrenOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Implementation]
'''
    ...
    def _getChildrenOfTypeLook (self, *args, **kwargs):
      '''_getChildrenOfTypeLook(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Look]
'''
    ...
    def _getChildrenOfTypeMaterialAssign (self, *args, **kwargs):
      '''_getChildrenOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::MaterialAssign]
'''
    ...
    def _getChildrenOfTypeNode (self, *args, **kwargs):
      '''_getChildrenOfTypeNode(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Node]
'''
    ...
    def _getChildrenOfTypeNodeDef (self, *args, **kwargs):
      '''_getChildrenOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::NodeDef]
'''
    ...
    def _getChildrenOfTypeNodeGraph (self, *args, **kwargs):
      '''_getChildrenOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::NodeGraph]
'''
    ...
    def _getChildrenOfTypeProperty (self, *args, **kwargs):
      '''_getChildrenOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Property]
'''
    ...
    def _getChildrenOfTypePropertySet (self, *args, **kwargs):
      '''_getChildrenOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::PropertySet]
'''
    ...
    def _getChildrenOfTypePropertySetAssign (self, *args, **kwargs):
      '''_getChildrenOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::PropertySetAssign]
'''
    ...
    def _getChildrenOfTypeToken (self, *args, **kwargs):
      '''_getChildrenOfTypeToken(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Token]
'''
    ...
    def _getChildrenOfTypeTypeDef (self, *args, **kwargs):
      '''_getChildrenOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::TypeDef]
'''
    ...
    def _getChildrenOfTypeVisibility (self, *args, **kwargs):
      '''_getChildrenOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Visibility]
'''
    ...
    def _removeChildOfTypeCollection (self, *args, **kwargs):
      '''_removeChildOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeDocument (self, *args, **kwargs):
      '''_removeChildOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeGeomInfo (self, *args, **kwargs):
      '''_removeChildOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeGeomProp (self, *args, **kwargs):
      '''_removeChildOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeImplementation (self, *args, **kwargs):
      '''_removeChildOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeLook (self, *args, **kwargs):
      '''_removeChildOfTypeLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeMaterialAssign (self, *args, **kwargs):
      '''_removeChildOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNode (self, *args, **kwargs):
      '''_removeChildOfTypeNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNodeDef (self, *args, **kwargs):
      '''_removeChildOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNodeGraph (self, *args, **kwargs):
      '''_removeChildOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeProperty (self, *args, **kwargs):
      '''_removeChildOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypePropertySet (self, *args, **kwargs):
      '''_removeChildOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypePropertySetAssign (self, *args, **kwargs):
      '''_removeChildOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeToken (self, *args, **kwargs):
      '''_removeChildOfTypeToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeTypeDef (self, *args, **kwargs):
      '''_removeChildOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeVisibility (self, *args, **kwargs):
      '''_removeChildOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def addChild (self, elementClass, name, typeString=''):
      '''Add a child element of the given subclass, name, and optional type string.'''
    ...
    def addChildOfCategory (self, *args, **kwargs):
      '''addChildOfCategory(self: MaterialX.PyMaterialXCore.Element, category: str, name: str = '') -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def asString (self, *args, **kwargs):
      '''asString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def changeChildCategory (self, *args, **kwargs):
      '''changeChildCategory(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element, arg1: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def clearContent (self, *args, **kwargs):
      '''clearContent(self: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def copyContentFrom (self, *args, **kwargs):
      '''copyContentFrom(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def createStringResolver (self, *args, **kwargs):
      '''createStringResolver(self: MaterialX.PyMaterialXCore.Element, geom: str = '') -> MaterialX_v1_38_8::StringResolver
'''
    ...
    def createValidChildName (self, *args, **kwargs):
      '''createValidChildName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getActiveColorSpace (self, *args, **kwargs):
      '''getActiveColorSpace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveFilePrefix (self, *args, **kwargs):
      '''getActiveFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveGeomPrefix (self, *args, **kwargs):
      '''getActiveGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveSourceUri (self, *args, **kwargs):
      '''getActiveSourceUri(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getAttribute (self, *args, **kwargs):
      '''getAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getAttributeNames (self, *args, **kwargs):
      '''getAttributeNames(self: MaterialX.PyMaterialXCore.Element) -> List[str]
'''
    ...
    def getCategory (self, *args, **kwargs):
      '''getCategory(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getChild (self, name):
      '''Return the child element, if any, with the given name.'''
    ...
    def getChildIndex (self, *args, **kwargs):
      '''getChildIndex(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> int
'''
    ...
    def getChildOfType (self, elementClass, name):
      '''Return the child element, if any, with the given name and subclass.'''
    ...
    def getChildren (self, *args, **kwargs):
      '''getChildren(self: MaterialX.PyMaterialXCore.Element) -> List[MaterialX.PyMaterialXCore.Element]
'''
    ...
    def getChildrenOfType (self, elementClass):
      '''Return a list of all child elements that are instances of the given type.
       The returned list maintains the order in which children were added.'''
    ...
    def getColorSpace (self, *args, **kwargs):
      '''getColorSpace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getDescendant (self, *args, **kwargs):
      '''getDescendant(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getDocString (self, *args, **kwargs):
      '''getDocString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getDocument (self, *args, **kwargs):
      '''getDocument(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::Document
'''
    ...
    def getFilePrefix (self, *args, **kwargs):
      '''getFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getGeomPrefix (self, *args, **kwargs):
      '''getGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getInheritString (self, *args, **kwargs):
      '''getInheritString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getInheritsFrom (self, *args, **kwargs):
      '''getInheritsFrom(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getMatchingTargets (self, *args, **kwargs):
      '''getMatchingTargets(self: MaterialX.PyMaterialXCore.TargetDef) -> List[str]
'''
    ...
    def getName (self, *args, **kwargs):
      '''getName(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getNamePath (self, *args, **kwargs):
      '''getNamePath(self: MaterialX.PyMaterialXCore.Element, relativeTo: MaterialX.PyMaterialXCore.Element = None) -> str
'''
    ...
    def getNamespace (self, *args, **kwargs):
      '''getNamespace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getParent (self, *args, **kwargs):
      '''getParent(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getQualifiedName (self, *args, **kwargs):
      '''getQualifiedName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getRoot (self, *args, **kwargs):
      '''getRoot(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getSelf (self, *args, **kwargs):
      '''getSelf(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getSourceUri (self, *args, **kwargs):
      '''getSourceUri(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getType (self, *args, **kwargs):
      '''getType(self: MaterialX.PyMaterialXCore.TypedElement) -> str
'''
    ...
    def getTypeDef (self, *args, **kwargs):
      '''getTypeDef(self: MaterialX.PyMaterialXCore.TypedElement) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def getUpstreamEdge (self, *args, **kwargs):
      '''getUpstreamEdge(self: MaterialX.PyMaterialXCore.Element, index: int = 0) -> MaterialX_v1_38_8::Edge
'''
    ...
    def getUpstreamEdgeCount (self, *args, **kwargs):
      '''getUpstreamEdgeCount(self: MaterialX.PyMaterialXCore.Element) -> int
'''
    ...
    def getUpstreamElement (self, *args, **kwargs):
      '''getUpstreamElement(self: MaterialX.PyMaterialXCore.Element, index: int = 0) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def hasAttribute (self, *args, **kwargs):
      '''hasAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> bool
'''
    ...
    def hasColorSpace (self, *args, **kwargs):
      '''hasColorSpace(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasFilePrefix (self, *args, **kwargs):
      '''hasFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasGeomPrefix (self, *args, **kwargs):
      '''hasGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritString (self, *args, **kwargs):
      '''hasInheritString(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritanceCycle (self, *args, **kwargs):
      '''hasInheritanceCycle(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritedBase (self, *args, **kwargs):
      '''hasInheritedBase(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasNamespace (self, *args, **kwargs):
      '''hasNamespace(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasSourceUri (self, *args, **kwargs):
      '''hasSourceUri(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasType (self, *args, **kwargs):
      '''hasType(self: MaterialX.PyMaterialXCore.TypedElement) -> bool
'''
    ...
    def isA (self, elementClass, category=''):
      '''Return True if this element is an instance of the given subclass.
       If a category string is specified, then both subclass and category
       matches are required.'''
    ...
    def isMultiOutputType (self, *args, **kwargs):
      '''isMultiOutputType(self: MaterialX.PyMaterialXCore.TypedElement) -> bool
'''
    ...
    def removeAttribute (self, *args, **kwargs):
      '''removeAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def removeChild (self, *args, **kwargs):
      '''removeChild(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def removeChildOfType (self, elementClass, name):
      '''Remove the typed child element, if any, with the given name.'''
    ...
    def setAttribute (self, *args, **kwargs):
      '''setAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str, arg1: str) -> None
'''
    ...
    def setCategory (self, *args, **kwargs):
      '''setCategory(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setChildIndex (self, *args, **kwargs):
      '''setChildIndex(self: MaterialX.PyMaterialXCore.Element, arg0: str, arg1: int) -> None
'''
    ...
    def setColorSpace (self, *args, **kwargs):
      '''setColorSpace(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setDocString (self, *args, **kwargs):
      '''setDocString(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setFilePrefix (self, *args, **kwargs):
      '''setFilePrefix(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setGeomPrefix (self, *args, **kwargs):
      '''setGeomPrefix(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setInheritString (self, *args, **kwargs):
      '''setInheritString(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setInheritsFrom (self, *args, **kwargs):
      '''setInheritsFrom(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def setName (self, *args, **kwargs):
      '''setName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setNamespace (self, *args, **kwargs):
      '''setNamespace(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setSourceUri (self, *args, **kwargs):
      '''setSourceUri(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setType (self, *args, **kwargs):
      '''setType(self: MaterialX.PyMaterialXCore.TypedElement, arg0: str) -> None
'''
    ...
    def traverseGraph (self, *args, **kwargs):
      '''traverseGraph(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::GraphIterator
'''
    ...
    def traverseInheritance (self, *args, **kwargs):
      '''traverseInheritance(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::InheritanceIterator
'''
    ...
    def traverseTree (self, *args, **kwargs):
      '''traverseTree(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::TreeIterator
'''
    ...
    def validate (self, *args, **kwargs):
      '''validate(self: MaterialX.PyMaterialXCore.Element) -> Tuple[bool, str]
'''
    ...

def Token (*args):
      '''

'''      
    ...

class Token:
    def CATEGORY (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def ENUM_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def ENUM_VALUES_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def IMPLEMENTATION_NAME_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def IMPLEMENTATION_TYPE_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def INTERFACE_NAME_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def TYPE_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def UI_ADVANCED_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def UI_FOLDER_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def UI_MAX_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def UI_MIN_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def UI_NAME_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def UI_SOFT_MAX_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def UI_SOFT_MIN_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def UI_STEP_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def UNIT_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def VALUE_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def _addChildCollection (self, *args, **kwargs):
      '''_addChildCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Collection
'''
    ...
    def _addChildDocument (self, *args, **kwargs):
      '''_addChildDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Document
'''
    ...
    def _addChildGeomInfo (self, *args, **kwargs):
      '''_addChildGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomInfo
'''
    ...
    def _addChildGeomProp (self, *args, **kwargs):
      '''_addChildGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def _addChildImplementation (self, *args, **kwargs):
      '''_addChildImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Implementation
'''
    ...
    def _addChildLook (self, *args, **kwargs):
      '''_addChildLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Look
'''
    ...
    def _addChildMaterialAssign (self, *args, **kwargs):
      '''_addChildMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::MaterialAssign
'''
    ...
    def _addChildNode (self, *args, **kwargs):
      '''_addChildNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Node
'''
    ...
    def _addChildNodeDef (self, *args, **kwargs):
      '''_addChildNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeDef
'''
    ...
    def _addChildNodeGraph (self, *args, **kwargs):
      '''_addChildNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeGraph
'''
    ...
    def _addChildProperty (self, *args, **kwargs):
      '''_addChildProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Property
'''
    ...
    def _addChildPropertySet (self, *args, **kwargs):
      '''_addChildPropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySet
'''
    ...
    def _addChildPropertySetAssign (self, *args, **kwargs):
      '''_addChildPropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySetAssign
'''
    ...
    def _addChildToken (self, *args, **kwargs):
      '''_addChildToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Token
'''
    ...
    def _addChildTypeDef (self, *args, **kwargs):
      '''_addChildTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def _addChildVisibility (self, *args, **kwargs):
      '''_addChildVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Visibility
'''
    ...
    def _getChild (self, *args, **kwargs):
      '''_getChild(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def _getChildOfTypeCollection (self, *args, **kwargs):
      '''_getChildOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Collection
'''
    ...
    def _getChildOfTypeDocument (self, *args, **kwargs):
      '''_getChildOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Document
'''
    ...
    def _getChildOfTypeGeomInfo (self, *args, **kwargs):
      '''_getChildOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomInfo
'''
    ...
    def _getChildOfTypeGeomProp (self, *args, **kwargs):
      '''_getChildOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def _getChildOfTypeImplementation (self, *args, **kwargs):
      '''_getChildOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Implementation
'''
    ...
    def _getChildOfTypeLook (self, *args, **kwargs):
      '''_getChildOfTypeLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Look
'''
    ...
    def _getChildOfTypeMaterialAssign (self, *args, **kwargs):
      '''_getChildOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::MaterialAssign
'''
    ...
    def _getChildOfTypeNode (self, *args, **kwargs):
      '''_getChildOfTypeNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Node
'''
    ...
    def _getChildOfTypeNodeDef (self, *args, **kwargs):
      '''_getChildOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeDef
'''
    ...
    def _getChildOfTypeNodeGraph (self, *args, **kwargs):
      '''_getChildOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeGraph
'''
    ...
    def _getChildOfTypeProperty (self, *args, **kwargs):
      '''_getChildOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Property
'''
    ...
    def _getChildOfTypePropertySet (self, *args, **kwargs):
      '''_getChildOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySet
'''
    ...
    def _getChildOfTypePropertySetAssign (self, *args, **kwargs):
      '''_getChildOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySetAssign
'''
    ...
    def _getChildOfTypeToken (self, *args, **kwargs):
      '''_getChildOfTypeToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Token
'''
    ...
    def _getChildOfTypeTypeDef (self, *args, **kwargs):
      '''_getChildOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def _getChildOfTypeVisibility (self, *args, **kwargs):
      '''_getChildOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Visibility
'''
    ...
    def _getChildrenOfTypeCollection (self, *args, **kwargs):
      '''_getChildrenOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Collection]
'''
    ...
    def _getChildrenOfTypeDocument (self, *args, **kwargs):
      '''_getChildrenOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Document]
'''
    ...
    def _getChildrenOfTypeGeomInfo (self, *args, **kwargs):
      '''_getChildrenOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::GeomInfo]
'''
    ...
    def _getChildrenOfTypeGeomProp (self, *args, **kwargs):
      '''_getChildrenOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::GeomProp]
'''
    ...
    def _getChildrenOfTypeImplementation (self, *args, **kwargs):
      '''_getChildrenOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Implementation]
'''
    ...
    def _getChildrenOfTypeLook (self, *args, **kwargs):
      '''_getChildrenOfTypeLook(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Look]
'''
    ...
    def _getChildrenOfTypeMaterialAssign (self, *args, **kwargs):
      '''_getChildrenOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::MaterialAssign]
'''
    ...
    def _getChildrenOfTypeNode (self, *args, **kwargs):
      '''_getChildrenOfTypeNode(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Node]
'''
    ...
    def _getChildrenOfTypeNodeDef (self, *args, **kwargs):
      '''_getChildrenOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::NodeDef]
'''
    ...
    def _getChildrenOfTypeNodeGraph (self, *args, **kwargs):
      '''_getChildrenOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::NodeGraph]
'''
    ...
    def _getChildrenOfTypeProperty (self, *args, **kwargs):
      '''_getChildrenOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Property]
'''
    ...
    def _getChildrenOfTypePropertySet (self, *args, **kwargs):
      '''_getChildrenOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::PropertySet]
'''
    ...
    def _getChildrenOfTypePropertySetAssign (self, *args, **kwargs):
      '''_getChildrenOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::PropertySetAssign]
'''
    ...
    def _getChildrenOfTypeToken (self, *args, **kwargs):
      '''_getChildrenOfTypeToken(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Token]
'''
    ...
    def _getChildrenOfTypeTypeDef (self, *args, **kwargs):
      '''_getChildrenOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::TypeDef]
'''
    ...
    def _getChildrenOfTypeVisibility (self, *args, **kwargs):
      '''_getChildrenOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Visibility]
'''
    ...
    def _getDefaultValue (self, *args, **kwargs):
      '''_getDefaultValue(self: MaterialX.PyMaterialXCore.ValueElement) -> MaterialX_v1_38_8::Value
'''
    ...
    def _getValue (self, *args, **kwargs):
      '''_getValue(self: MaterialX.PyMaterialXCore.ValueElement) -> MaterialX_v1_38_8::Value
'''
    ...
    def _removeChildOfTypeCollection (self, *args, **kwargs):
      '''_removeChildOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeDocument (self, *args, **kwargs):
      '''_removeChildOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeGeomInfo (self, *args, **kwargs):
      '''_removeChildOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeGeomProp (self, *args, **kwargs):
      '''_removeChildOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeImplementation (self, *args, **kwargs):
      '''_removeChildOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeLook (self, *args, **kwargs):
      '''_removeChildOfTypeLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeMaterialAssign (self, *args, **kwargs):
      '''_removeChildOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNode (self, *args, **kwargs):
      '''_removeChildOfTypeNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNodeDef (self, *args, **kwargs):
      '''_removeChildOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNodeGraph (self, *args, **kwargs):
      '''_removeChildOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeProperty (self, *args, **kwargs):
      '''_removeChildOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypePropertySet (self, *args, **kwargs):
      '''_removeChildOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypePropertySetAssign (self, *args, **kwargs):
      '''_removeChildOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeToken (self, *args, **kwargs):
      '''_removeChildOfTypeToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeTypeDef (self, *args, **kwargs):
      '''_removeChildOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeVisibility (self, *args, **kwargs):
      '''_removeChildOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _setValueboolean (self, *args, **kwargs):
      '''_setValueboolean(self: MaterialX.PyMaterialXCore.ValueElement, value: bool, type: str = '') -> None
'''
    ...
    def _setValuebooleanarray (self, *args, **kwargs):
      '''_setValuebooleanarray(self: MaterialX.PyMaterialXCore.ValueElement, value: List[bool], type: str = '') -> None
'''
    ...
    def _setValuecolor3 (self, *args, **kwargs):
      '''_setValuecolor3(self: MaterialX.PyMaterialXCore.ValueElement, value: MaterialX_v1_38_8::Color3, type: str = '') -> None
'''
    ...
    def _setValuecolor4 (self, *args, **kwargs):
      '''_setValuecolor4(self: MaterialX.PyMaterialXCore.ValueElement, value: MaterialX_v1_38_8::Color4, type: str = '') -> None
'''
    ...
    def _setValuefloat (self, *args, **kwargs):
      '''_setValuefloat(self: MaterialX.PyMaterialXCore.ValueElement, value: float, type: str = '') -> None
'''
    ...
    def _setValuefloatarray (self, *args, **kwargs):
      '''_setValuefloatarray(self: MaterialX.PyMaterialXCore.ValueElement, value: List[float], type: str = '') -> None
'''
    ...
    def _setValueinteger (self, *args, **kwargs):
      '''_setValueinteger(self: MaterialX.PyMaterialXCore.ValueElement, value: int, type: str = '') -> None
'''
    ...
    def _setValueintegerarray (self, *args, **kwargs):
      '''_setValueintegerarray(self: MaterialX.PyMaterialXCore.ValueElement, value: List[int], type: str = '') -> None
'''
    ...
    def _setValuematrix33 (self, *args, **kwargs):
      '''_setValuematrix33(self: MaterialX.PyMaterialXCore.ValueElement, value: MaterialX_v1_38_8::Matrix33, type: str = '') -> None
'''
    ...
    def _setValuematrix44 (self, *args, **kwargs):
      '''_setValuematrix44(self: MaterialX.PyMaterialXCore.ValueElement, value: MaterialX_v1_38_8::Matrix44, type: str = '') -> None
'''
    ...
    def _setValuestring (self, *args, **kwargs):
      '''_setValuestring(self: MaterialX.PyMaterialXCore.ValueElement, value: str, type: str = '') -> None
'''
    ...
    def _setValuestringarray (self, *args, **kwargs):
      '''_setValuestringarray(self: MaterialX.PyMaterialXCore.ValueElement, value: List[str], type: str = '') -> None
'''
    ...
    def _setValuevector2 (self, *args, **kwargs):
      '''_setValuevector2(self: MaterialX.PyMaterialXCore.ValueElement, value: MaterialX_v1_38_8::Vector2, type: str = '') -> None
'''
    ...
    def _setValuevector3 (self, *args, **kwargs):
      '''_setValuevector3(self: MaterialX.PyMaterialXCore.ValueElement, value: MaterialX_v1_38_8::Vector3, type: str = '') -> None
'''
    ...
    def _setValuevector4 (self, *args, **kwargs):
      '''_setValuevector4(self: MaterialX.PyMaterialXCore.ValueElement, value: MaterialX_v1_38_8::Vector4, type: str = '') -> None
'''
    ...
    def addChild (self, elementClass, name, typeString=''):
      '''Add a child element of the given subclass, name, and optional type string.'''
    ...
    def addChildOfCategory (self, *args, **kwargs):
      '''addChildOfCategory(self: MaterialX.PyMaterialXCore.Element, category: str, name: str = '') -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def asString (self, *args, **kwargs):
      '''asString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def changeChildCategory (self, *args, **kwargs):
      '''changeChildCategory(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element, arg1: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def clearContent (self, *args, **kwargs):
      '''clearContent(self: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def copyContentFrom (self, *args, **kwargs):
      '''copyContentFrom(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def createStringResolver (self, *args, **kwargs):
      '''createStringResolver(self: MaterialX.PyMaterialXCore.Element, geom: str = '') -> MaterialX_v1_38_8::StringResolver
'''
    ...
    def createValidChildName (self, *args, **kwargs):
      '''createValidChildName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getActiveColorSpace (self, *args, **kwargs):
      '''getActiveColorSpace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveFilePrefix (self, *args, **kwargs):
      '''getActiveFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveGeomPrefix (self, *args, **kwargs):
      '''getActiveGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveSourceUri (self, *args, **kwargs):
      '''getActiveSourceUri(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveUnit (self, *args, **kwargs):
      '''getActiveUnit(self: MaterialX.PyMaterialXCore.ValueElement) -> str
'''
    ...
    def getAttribute (self, *args, **kwargs):
      '''getAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getAttributeNames (self, *args, **kwargs):
      '''getAttributeNames(self: MaterialX.PyMaterialXCore.Element) -> List[str]
'''
    ...
    def getCategory (self, *args, **kwargs):
      '''getCategory(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getChild (self, name):
      '''Return the child element, if any, with the given name.'''
    ...
    def getChildIndex (self, *args, **kwargs):
      '''getChildIndex(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> int
'''
    ...
    def getChildOfType (self, elementClass, name):
      '''Return the child element, if any, with the given name and subclass.'''
    ...
    def getChildren (self, *args, **kwargs):
      '''getChildren(self: MaterialX.PyMaterialXCore.Element) -> List[MaterialX.PyMaterialXCore.Element]
'''
    ...
    def getChildrenOfType (self, elementClass):
      '''Return a list of all child elements that are instances of the given type.
       The returned list maintains the order in which children were added.'''
    ...
    def getColorSpace (self, *args, **kwargs):
      '''getColorSpace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getDefaultValue (self):
      '''Return the default value for this element.'''
    ...
    def getDescendant (self, *args, **kwargs):
      '''getDescendant(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getDocString (self, *args, **kwargs):
      '''getDocString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getDocument (self, *args, **kwargs):
      '''getDocument(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::Document
'''
    ...
    def getFilePrefix (self, *args, **kwargs):
      '''getFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getGeomPrefix (self, *args, **kwargs):
      '''getGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getImplementationName (self, *args, **kwargs):
      '''getImplementationName(self: MaterialX.PyMaterialXCore.ValueElement) -> str
'''
    ...
    def getInheritString (self, *args, **kwargs):
      '''getInheritString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getInheritsFrom (self, *args, **kwargs):
      '''getInheritsFrom(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getInterfaceName (self, *args, **kwargs):
      '''getInterfaceName(self: MaterialX.PyMaterialXCore.ValueElement) -> str
'''
    ...
    def getIsUniform (self, *args, **kwargs):
      '''getIsUniform(self: MaterialX.PyMaterialXCore.ValueElement) -> bool
'''
    ...
    def getName (self, *args, **kwargs):
      '''getName(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getNamePath (self, *args, **kwargs):
      '''getNamePath(self: MaterialX.PyMaterialXCore.Element, relativeTo: MaterialX.PyMaterialXCore.Element = None) -> str
'''
    ...
    def getNamespace (self, *args, **kwargs):
      '''getNamespace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getParent (self, *args, **kwargs):
      '''getParent(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getQualifiedName (self, *args, **kwargs):
      '''getQualifiedName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getResolvedValueString (self, *args, **kwargs):
      '''getResolvedValueString(self: MaterialX.PyMaterialXCore.ValueElement, resolver: MaterialX_v1_38_8::StringResolver = None) -> str
'''
    ...
    def getRoot (self, *args, **kwargs):
      '''getRoot(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getSelf (self, *args, **kwargs):
      '''getSelf(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getSourceUri (self, *args, **kwargs):
      '''getSourceUri(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getType (self, *args, **kwargs):
      '''getType(self: MaterialX.PyMaterialXCore.TypedElement) -> str
'''
    ...
    def getTypeDef (self, *args, **kwargs):
      '''getTypeDef(self: MaterialX.PyMaterialXCore.TypedElement) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def getUnit (self, *args, **kwargs):
      '''getUnit(self: MaterialX.PyMaterialXCore.ValueElement) -> str
'''
    ...
    def getUnitType (self, *args, **kwargs):
      '''getUnitType(self: MaterialX.PyMaterialXCore.ValueElement) -> str
'''
    ...
    def getUpstreamEdge (self, *args, **kwargs):
      '''getUpstreamEdge(self: MaterialX.PyMaterialXCore.Element, index: int = 0) -> MaterialX_v1_38_8::Edge
'''
    ...
    def getUpstreamEdgeCount (self, *args, **kwargs):
      '''getUpstreamEdgeCount(self: MaterialX.PyMaterialXCore.Element) -> int
'''
    ...
    def getUpstreamElement (self, *args, **kwargs):
      '''getUpstreamElement(self: MaterialX.PyMaterialXCore.Element, index: int = 0) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getValue (self):
      '''Return the typed value of an element.'''
    ...
    def getValueString (self, *args, **kwargs):
      '''getValueString(self: MaterialX.PyMaterialXCore.ValueElement) -> str
'''
    ...
    def hasAttribute (self, *args, **kwargs):
      '''hasAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> bool
'''
    ...
    def hasColorSpace (self, *args, **kwargs):
      '''hasColorSpace(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasFilePrefix (self, *args, **kwargs):
      '''hasFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasGeomPrefix (self, *args, **kwargs):
      '''hasGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasImplementationName (self, *args, **kwargs):
      '''hasImplementationName(self: MaterialX.PyMaterialXCore.ValueElement) -> bool
'''
    ...
    def hasInheritString (self, *args, **kwargs):
      '''hasInheritString(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritanceCycle (self, *args, **kwargs):
      '''hasInheritanceCycle(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritedBase (self, *args, **kwargs):
      '''hasInheritedBase(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInterfaceName (self, *args, **kwargs):
      '''hasInterfaceName(self: MaterialX.PyMaterialXCore.ValueElement) -> bool
'''
    ...
    def hasNamespace (self, *args, **kwargs):
      '''hasNamespace(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasSourceUri (self, *args, **kwargs):
      '''hasSourceUri(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasType (self, *args, **kwargs):
      '''hasType(self: MaterialX.PyMaterialXCore.TypedElement) -> bool
'''
    ...
    def hasUnit (self, *args, **kwargs):
      '''hasUnit(self: MaterialX.PyMaterialXCore.ValueElement) -> bool
'''
    ...
    def hasUnitType (self, *args, **kwargs):
      '''hasUnitType(self: MaterialX.PyMaterialXCore.ValueElement) -> bool
'''
    ...
    def hasValueString (self, *args, **kwargs):
      '''hasValueString(self: MaterialX.PyMaterialXCore.ValueElement) -> bool
'''
    ...
    def isA (self, elementClass, category=''):
      '''Return True if this element is an instance of the given subclass.
       If a category string is specified, then both subclass and category
       matches are required.'''
    ...
    def isMultiOutputType (self, *args, **kwargs):
      '''isMultiOutputType(self: MaterialX.PyMaterialXCore.TypedElement) -> bool
'''
    ...
    def removeAttribute (self, *args, **kwargs):
      '''removeAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def removeChild (self, *args, **kwargs):
      '''removeChild(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def removeChildOfType (self, elementClass, name):
      '''Remove the typed child element, if any, with the given name.'''
    ...
    def setAttribute (self, *args, **kwargs):
      '''setAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str, arg1: str) -> None
'''
    ...
    def setCategory (self, *args, **kwargs):
      '''setCategory(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setChildIndex (self, *args, **kwargs):
      '''setChildIndex(self: MaterialX.PyMaterialXCore.Element, arg0: str, arg1: int) -> None
'''
    ...
    def setColorSpace (self, *args, **kwargs):
      '''setColorSpace(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setDocString (self, *args, **kwargs):
      '''setDocString(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setFilePrefix (self, *args, **kwargs):
      '''setFilePrefix(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setGeomPrefix (self, *args, **kwargs):
      '''setGeomPrefix(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setImplementationName (self, *args, **kwargs):
      '''setImplementationName(self: MaterialX.PyMaterialXCore.ValueElement, arg0: str) -> None
'''
    ...
    def setInheritString (self, *args, **kwargs):
      '''setInheritString(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setInheritsFrom (self, *args, **kwargs):
      '''setInheritsFrom(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def setInterfaceName (self, *args, **kwargs):
      '''setInterfaceName(self: MaterialX.PyMaterialXCore.ValueElement, arg0: str) -> None
'''
    ...
    def setIsUniform (self, *args, **kwargs):
      '''setIsUniform(self: MaterialX.PyMaterialXCore.ValueElement, arg0: bool) -> None
'''
    ...
    def setName (self, *args, **kwargs):
      '''setName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setNamespace (self, *args, **kwargs):
      '''setNamespace(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setSourceUri (self, *args, **kwargs):
      '''setSourceUri(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setType (self, *args, **kwargs):
      '''setType(self: MaterialX.PyMaterialXCore.TypedElement, arg0: str) -> None
'''
    ...
    def setUnit (self, *args, **kwargs):
      '''setUnit(self: MaterialX.PyMaterialXCore.ValueElement, arg0: str) -> None
'''
    ...
    def setUnitType (self, *args, **kwargs):
      '''setUnitType(self: MaterialX.PyMaterialXCore.ValueElement, arg0: str) -> None
'''
    ...
    def setValue (self, value, typeString=''):
      '''Set the typed value of an element.'''
    ...
    def setValueString (self, *args, **kwargs):
      '''setValueString(self: MaterialX.PyMaterialXCore.ValueElement, arg0: str) -> None
'''
    ...
    def traverseGraph (self, *args, **kwargs):
      '''traverseGraph(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::GraphIterator
'''
    ...
    def traverseInheritance (self, *args, **kwargs):
      '''traverseInheritance(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::InheritanceIterator
'''
    ...
    def traverseTree (self, *args, **kwargs):
      '''traverseTree(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::TreeIterator
'''
    ...
    def validate (self, *args, **kwargs):
      '''validate(self: MaterialX.PyMaterialXCore.Element) -> Tuple[bool, str]
'''
    ...

def TreeIterator (*args):
      '''

'''      
    ...

class TreeIterator:
    def getElement (self, *args, **kwargs):
      '''getElement(self: MaterialX.PyMaterialXCore.TreeIterator) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getElementDepth (self, *args, **kwargs):
      '''getElementDepth(self: MaterialX.PyMaterialXCore.TreeIterator) -> int
'''
    ...
    def getPruneSubtree (self, *args, **kwargs):
      '''getPruneSubtree(self: MaterialX.PyMaterialXCore.TreeIterator) -> bool
'''
    ...
    def setPruneSubtree (self, *args, **kwargs):
      '''setPruneSubtree(self: MaterialX.PyMaterialXCore.TreeIterator, arg0: bool) -> None
'''
    ...

def Type (*args):
      '''

'''      
    ...

class Type:
    def TypeAbsolute (self, *args, **kwargs):
      '''Members:

  TypeRelative

  TypeAbsolute

  TypeNetwork'''
    ...
    def TypeNetwork (self, *args, **kwargs):
      '''Members:

  TypeRelative

  TypeAbsolute

  TypeNetwork'''
    ...
    def TypeRelative (self, *args, **kwargs):
      '''Members:

  TypeRelative

  TypeAbsolute

  TypeNetwork'''
    ...
    def name (self, *args, **kwargs):
      '''name(self: handle) -> str
'''
    ...
    def value (self, *args, **kwargs):
      ''''''
    ...

def TypeAbsolute (*args):
      '''

'''      
    ...

def TypeDef (*args):
      '''

'''      
    ...

class TypeDef:
    def CATEGORY (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def CONTEXT_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def SEMANTIC_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def _addChildCollection (self, *args, **kwargs):
      '''_addChildCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Collection
'''
    ...
    def _addChildDocument (self, *args, **kwargs):
      '''_addChildDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Document
'''
    ...
    def _addChildGeomInfo (self, *args, **kwargs):
      '''_addChildGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomInfo
'''
    ...
    def _addChildGeomProp (self, *args, **kwargs):
      '''_addChildGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def _addChildImplementation (self, *args, **kwargs):
      '''_addChildImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Implementation
'''
    ...
    def _addChildLook (self, *args, **kwargs):
      '''_addChildLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Look
'''
    ...
    def _addChildMaterialAssign (self, *args, **kwargs):
      '''_addChildMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::MaterialAssign
'''
    ...
    def _addChildNode (self, *args, **kwargs):
      '''_addChildNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Node
'''
    ...
    def _addChildNodeDef (self, *args, **kwargs):
      '''_addChildNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeDef
'''
    ...
    def _addChildNodeGraph (self, *args, **kwargs):
      '''_addChildNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeGraph
'''
    ...
    def _addChildProperty (self, *args, **kwargs):
      '''_addChildProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Property
'''
    ...
    def _addChildPropertySet (self, *args, **kwargs):
      '''_addChildPropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySet
'''
    ...
    def _addChildPropertySetAssign (self, *args, **kwargs):
      '''_addChildPropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySetAssign
'''
    ...
    def _addChildToken (self, *args, **kwargs):
      '''_addChildToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Token
'''
    ...
    def _addChildTypeDef (self, *args, **kwargs):
      '''_addChildTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def _addChildVisibility (self, *args, **kwargs):
      '''_addChildVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Visibility
'''
    ...
    def _getChild (self, *args, **kwargs):
      '''_getChild(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def _getChildOfTypeCollection (self, *args, **kwargs):
      '''_getChildOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Collection
'''
    ...
    def _getChildOfTypeDocument (self, *args, **kwargs):
      '''_getChildOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Document
'''
    ...
    def _getChildOfTypeGeomInfo (self, *args, **kwargs):
      '''_getChildOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomInfo
'''
    ...
    def _getChildOfTypeGeomProp (self, *args, **kwargs):
      '''_getChildOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def _getChildOfTypeImplementation (self, *args, **kwargs):
      '''_getChildOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Implementation
'''
    ...
    def _getChildOfTypeLook (self, *args, **kwargs):
      '''_getChildOfTypeLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Look
'''
    ...
    def _getChildOfTypeMaterialAssign (self, *args, **kwargs):
      '''_getChildOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::MaterialAssign
'''
    ...
    def _getChildOfTypeNode (self, *args, **kwargs):
      '''_getChildOfTypeNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Node
'''
    ...
    def _getChildOfTypeNodeDef (self, *args, **kwargs):
      '''_getChildOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeDef
'''
    ...
    def _getChildOfTypeNodeGraph (self, *args, **kwargs):
      '''_getChildOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeGraph
'''
    ...
    def _getChildOfTypeProperty (self, *args, **kwargs):
      '''_getChildOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Property
'''
    ...
    def _getChildOfTypePropertySet (self, *args, **kwargs):
      '''_getChildOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySet
'''
    ...
    def _getChildOfTypePropertySetAssign (self, *args, **kwargs):
      '''_getChildOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySetAssign
'''
    ...
    def _getChildOfTypeToken (self, *args, **kwargs):
      '''_getChildOfTypeToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Token
'''
    ...
    def _getChildOfTypeTypeDef (self, *args, **kwargs):
      '''_getChildOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def _getChildOfTypeVisibility (self, *args, **kwargs):
      '''_getChildOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Visibility
'''
    ...
    def _getChildrenOfTypeCollection (self, *args, **kwargs):
      '''_getChildrenOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Collection]
'''
    ...
    def _getChildrenOfTypeDocument (self, *args, **kwargs):
      '''_getChildrenOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Document]
'''
    ...
    def _getChildrenOfTypeGeomInfo (self, *args, **kwargs):
      '''_getChildrenOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::GeomInfo]
'''
    ...
    def _getChildrenOfTypeGeomProp (self, *args, **kwargs):
      '''_getChildrenOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::GeomProp]
'''
    ...
    def _getChildrenOfTypeImplementation (self, *args, **kwargs):
      '''_getChildrenOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Implementation]
'''
    ...
    def _getChildrenOfTypeLook (self, *args, **kwargs):
      '''_getChildrenOfTypeLook(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Look]
'''
    ...
    def _getChildrenOfTypeMaterialAssign (self, *args, **kwargs):
      '''_getChildrenOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::MaterialAssign]
'''
    ...
    def _getChildrenOfTypeNode (self, *args, **kwargs):
      '''_getChildrenOfTypeNode(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Node]
'''
    ...
    def _getChildrenOfTypeNodeDef (self, *args, **kwargs):
      '''_getChildrenOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::NodeDef]
'''
    ...
    def _getChildrenOfTypeNodeGraph (self, *args, **kwargs):
      '''_getChildrenOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::NodeGraph]
'''
    ...
    def _getChildrenOfTypeProperty (self, *args, **kwargs):
      '''_getChildrenOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Property]
'''
    ...
    def _getChildrenOfTypePropertySet (self, *args, **kwargs):
      '''_getChildrenOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::PropertySet]
'''
    ...
    def _getChildrenOfTypePropertySetAssign (self, *args, **kwargs):
      '''_getChildrenOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::PropertySetAssign]
'''
    ...
    def _getChildrenOfTypeToken (self, *args, **kwargs):
      '''_getChildrenOfTypeToken(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Token]
'''
    ...
    def _getChildrenOfTypeTypeDef (self, *args, **kwargs):
      '''_getChildrenOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::TypeDef]
'''
    ...
    def _getChildrenOfTypeVisibility (self, *args, **kwargs):
      '''_getChildrenOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Visibility]
'''
    ...
    def _removeChildOfTypeCollection (self, *args, **kwargs):
      '''_removeChildOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeDocument (self, *args, **kwargs):
      '''_removeChildOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeGeomInfo (self, *args, **kwargs):
      '''_removeChildOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeGeomProp (self, *args, **kwargs):
      '''_removeChildOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeImplementation (self, *args, **kwargs):
      '''_removeChildOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeLook (self, *args, **kwargs):
      '''_removeChildOfTypeLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeMaterialAssign (self, *args, **kwargs):
      '''_removeChildOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNode (self, *args, **kwargs):
      '''_removeChildOfTypeNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNodeDef (self, *args, **kwargs):
      '''_removeChildOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNodeGraph (self, *args, **kwargs):
      '''_removeChildOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeProperty (self, *args, **kwargs):
      '''_removeChildOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypePropertySet (self, *args, **kwargs):
      '''_removeChildOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypePropertySetAssign (self, *args, **kwargs):
      '''_removeChildOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeToken (self, *args, **kwargs):
      '''_removeChildOfTypeToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeTypeDef (self, *args, **kwargs):
      '''_removeChildOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeVisibility (self, *args, **kwargs):
      '''_removeChildOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def addChild (self, elementClass, name, typeString=''):
      '''Add a child element of the given subclass, name, and optional type string.'''
    ...
    def addChildOfCategory (self, *args, **kwargs):
      '''addChildOfCategory(self: MaterialX.PyMaterialXCore.Element, category: str, name: str = '') -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def addMember (self, *args, **kwargs):
      '''addMember(self: MaterialX.PyMaterialXCore.TypeDef, name: str = '') -> MaterialX_v1_38_8::Member
'''
    ...
    def asString (self, *args, **kwargs):
      '''asString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def changeChildCategory (self, *args, **kwargs):
      '''changeChildCategory(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element, arg1: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def clearContent (self, *args, **kwargs):
      '''clearContent(self: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def copyContentFrom (self, *args, **kwargs):
      '''copyContentFrom(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def createStringResolver (self, *args, **kwargs):
      '''createStringResolver(self: MaterialX.PyMaterialXCore.Element, geom: str = '') -> MaterialX_v1_38_8::StringResolver
'''
    ...
    def createValidChildName (self, *args, **kwargs):
      '''createValidChildName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getActiveColorSpace (self, *args, **kwargs):
      '''getActiveColorSpace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveFilePrefix (self, *args, **kwargs):
      '''getActiveFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveGeomPrefix (self, *args, **kwargs):
      '''getActiveGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveSourceUri (self, *args, **kwargs):
      '''getActiveSourceUri(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getAttribute (self, *args, **kwargs):
      '''getAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getAttributeNames (self, *args, **kwargs):
      '''getAttributeNames(self: MaterialX.PyMaterialXCore.Element) -> List[str]
'''
    ...
    def getCategory (self, *args, **kwargs):
      '''getCategory(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getChild (self, name):
      '''Return the child element, if any, with the given name.'''
    ...
    def getChildIndex (self, *args, **kwargs):
      '''getChildIndex(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> int
'''
    ...
    def getChildOfType (self, elementClass, name):
      '''Return the child element, if any, with the given name and subclass.'''
    ...
    def getChildren (self, *args, **kwargs):
      '''getChildren(self: MaterialX.PyMaterialXCore.Element) -> List[MaterialX.PyMaterialXCore.Element]
'''
    ...
    def getChildrenOfType (self, elementClass):
      '''Return a list of all child elements that are instances of the given type.
       The returned list maintains the order in which children were added.'''
    ...
    def getColorSpace (self, *args, **kwargs):
      '''getColorSpace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getContext (self, *args, **kwargs):
      '''getContext(self: MaterialX.PyMaterialXCore.TypeDef) -> str
'''
    ...
    def getDescendant (self, *args, **kwargs):
      '''getDescendant(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getDocString (self, *args, **kwargs):
      '''getDocString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getDocument (self, *args, **kwargs):
      '''getDocument(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::Document
'''
    ...
    def getFilePrefix (self, *args, **kwargs):
      '''getFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getGeomPrefix (self, *args, **kwargs):
      '''getGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getInheritString (self, *args, **kwargs):
      '''getInheritString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getInheritsFrom (self, *args, **kwargs):
      '''getInheritsFrom(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getMember (self, *args, **kwargs):
      '''getMember(self: MaterialX.PyMaterialXCore.TypeDef, arg0: str) -> MaterialX_v1_38_8::Member
'''
    ...
    def getMembers (self, *args, **kwargs):
      '''getMembers(self: MaterialX.PyMaterialXCore.TypeDef) -> List[MaterialX_v1_38_8::Member]
'''
    ...
    def getName (self, *args, **kwargs):
      '''getName(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getNamePath (self, *args, **kwargs):
      '''getNamePath(self: MaterialX.PyMaterialXCore.Element, relativeTo: MaterialX.PyMaterialXCore.Element = None) -> str
'''
    ...
    def getNamespace (self, *args, **kwargs):
      '''getNamespace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getParent (self, *args, **kwargs):
      '''getParent(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getQualifiedName (self, *args, **kwargs):
      '''getQualifiedName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getRoot (self, *args, **kwargs):
      '''getRoot(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getSelf (self, *args, **kwargs):
      '''getSelf(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getSemantic (self, *args, **kwargs):
      '''getSemantic(self: MaterialX.PyMaterialXCore.TypeDef) -> str
'''
    ...
    def getSourceUri (self, *args, **kwargs):
      '''getSourceUri(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getUpstreamEdge (self, *args, **kwargs):
      '''getUpstreamEdge(self: MaterialX.PyMaterialXCore.Element, index: int = 0) -> MaterialX_v1_38_8::Edge
'''
    ...
    def getUpstreamEdgeCount (self, *args, **kwargs):
      '''getUpstreamEdgeCount(self: MaterialX.PyMaterialXCore.Element) -> int
'''
    ...
    def getUpstreamElement (self, *args, **kwargs):
      '''getUpstreamElement(self: MaterialX.PyMaterialXCore.Element, index: int = 0) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def hasAttribute (self, *args, **kwargs):
      '''hasAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> bool
'''
    ...
    def hasColorSpace (self, *args, **kwargs):
      '''hasColorSpace(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasContext (self, *args, **kwargs):
      '''hasContext(self: MaterialX.PyMaterialXCore.TypeDef) -> bool
'''
    ...
    def hasFilePrefix (self, *args, **kwargs):
      '''hasFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasGeomPrefix (self, *args, **kwargs):
      '''hasGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritString (self, *args, **kwargs):
      '''hasInheritString(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritanceCycle (self, *args, **kwargs):
      '''hasInheritanceCycle(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritedBase (self, *args, **kwargs):
      '''hasInheritedBase(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasNamespace (self, *args, **kwargs):
      '''hasNamespace(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasSemantic (self, *args, **kwargs):
      '''hasSemantic(self: MaterialX.PyMaterialXCore.TypeDef) -> bool
'''
    ...
    def hasSourceUri (self, *args, **kwargs):
      '''hasSourceUri(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def isA (self, elementClass, category=''):
      '''Return True if this element is an instance of the given subclass.
       If a category string is specified, then both subclass and category
       matches are required.'''
    ...
    def removeAttribute (self, *args, **kwargs):
      '''removeAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def removeChild (self, *args, **kwargs):
      '''removeChild(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def removeChildOfType (self, elementClass, name):
      '''Remove the typed child element, if any, with the given name.'''
    ...
    def removeMember (self, *args, **kwargs):
      '''removeMember(self: MaterialX.PyMaterialXCore.TypeDef, arg0: str) -> None
'''
    ...
    def setAttribute (self, *args, **kwargs):
      '''setAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str, arg1: str) -> None
'''
    ...
    def setCategory (self, *args, **kwargs):
      '''setCategory(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setChildIndex (self, *args, **kwargs):
      '''setChildIndex(self: MaterialX.PyMaterialXCore.Element, arg0: str, arg1: int) -> None
'''
    ...
    def setColorSpace (self, *args, **kwargs):
      '''setColorSpace(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setContext (self, *args, **kwargs):
      '''setContext(self: MaterialX.PyMaterialXCore.TypeDef, arg0: str) -> None
'''
    ...
    def setDocString (self, *args, **kwargs):
      '''setDocString(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setFilePrefix (self, *args, **kwargs):
      '''setFilePrefix(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setGeomPrefix (self, *args, **kwargs):
      '''setGeomPrefix(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setInheritString (self, *args, **kwargs):
      '''setInheritString(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setInheritsFrom (self, *args, **kwargs):
      '''setInheritsFrom(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def setName (self, *args, **kwargs):
      '''setName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setNamespace (self, *args, **kwargs):
      '''setNamespace(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setSemantic (self, *args, **kwargs):
      '''setSemantic(self: MaterialX.PyMaterialXCore.TypeDef, arg0: str) -> None
'''
    ...
    def setSourceUri (self, *args, **kwargs):
      '''setSourceUri(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def traverseGraph (self, *args, **kwargs):
      '''traverseGraph(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::GraphIterator
'''
    ...
    def traverseInheritance (self, *args, **kwargs):
      '''traverseInheritance(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::InheritanceIterator
'''
    ...
    def traverseTree (self, *args, **kwargs):
      '''traverseTree(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::TreeIterator
'''
    ...
    def validate (self, *args, **kwargs):
      '''validate(self: MaterialX.PyMaterialXCore.Element) -> Tuple[bool, str]
'''
    ...

def TypeNetwork (*args):
      '''

'''      
    ...

def TypeRelative (*args):
      '''

'''      
    ...

def TypedElement (*args):
      '''

'''      
    ...

class TypedElement:
    def TYPE_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def _addChildCollection (self, *args, **kwargs):
      '''_addChildCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Collection
'''
    ...
    def _addChildDocument (self, *args, **kwargs):
      '''_addChildDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Document
'''
    ...
    def _addChildGeomInfo (self, *args, **kwargs):
      '''_addChildGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomInfo
'''
    ...
    def _addChildGeomProp (self, *args, **kwargs):
      '''_addChildGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def _addChildImplementation (self, *args, **kwargs):
      '''_addChildImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Implementation
'''
    ...
    def _addChildLook (self, *args, **kwargs):
      '''_addChildLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Look
'''
    ...
    def _addChildMaterialAssign (self, *args, **kwargs):
      '''_addChildMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::MaterialAssign
'''
    ...
    def _addChildNode (self, *args, **kwargs):
      '''_addChildNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Node
'''
    ...
    def _addChildNodeDef (self, *args, **kwargs):
      '''_addChildNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeDef
'''
    ...
    def _addChildNodeGraph (self, *args, **kwargs):
      '''_addChildNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeGraph
'''
    ...
    def _addChildProperty (self, *args, **kwargs):
      '''_addChildProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Property
'''
    ...
    def _addChildPropertySet (self, *args, **kwargs):
      '''_addChildPropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySet
'''
    ...
    def _addChildPropertySetAssign (self, *args, **kwargs):
      '''_addChildPropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySetAssign
'''
    ...
    def _addChildToken (self, *args, **kwargs):
      '''_addChildToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Token
'''
    ...
    def _addChildTypeDef (self, *args, **kwargs):
      '''_addChildTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def _addChildVisibility (self, *args, **kwargs):
      '''_addChildVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Visibility
'''
    ...
    def _getChild (self, *args, **kwargs):
      '''_getChild(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def _getChildOfTypeCollection (self, *args, **kwargs):
      '''_getChildOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Collection
'''
    ...
    def _getChildOfTypeDocument (self, *args, **kwargs):
      '''_getChildOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Document
'''
    ...
    def _getChildOfTypeGeomInfo (self, *args, **kwargs):
      '''_getChildOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomInfo
'''
    ...
    def _getChildOfTypeGeomProp (self, *args, **kwargs):
      '''_getChildOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def _getChildOfTypeImplementation (self, *args, **kwargs):
      '''_getChildOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Implementation
'''
    ...
    def _getChildOfTypeLook (self, *args, **kwargs):
      '''_getChildOfTypeLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Look
'''
    ...
    def _getChildOfTypeMaterialAssign (self, *args, **kwargs):
      '''_getChildOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::MaterialAssign
'''
    ...
    def _getChildOfTypeNode (self, *args, **kwargs):
      '''_getChildOfTypeNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Node
'''
    ...
    def _getChildOfTypeNodeDef (self, *args, **kwargs):
      '''_getChildOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeDef
'''
    ...
    def _getChildOfTypeNodeGraph (self, *args, **kwargs):
      '''_getChildOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeGraph
'''
    ...
    def _getChildOfTypeProperty (self, *args, **kwargs):
      '''_getChildOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Property
'''
    ...
    def _getChildOfTypePropertySet (self, *args, **kwargs):
      '''_getChildOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySet
'''
    ...
    def _getChildOfTypePropertySetAssign (self, *args, **kwargs):
      '''_getChildOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySetAssign
'''
    ...
    def _getChildOfTypeToken (self, *args, **kwargs):
      '''_getChildOfTypeToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Token
'''
    ...
    def _getChildOfTypeTypeDef (self, *args, **kwargs):
      '''_getChildOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def _getChildOfTypeVisibility (self, *args, **kwargs):
      '''_getChildOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Visibility
'''
    ...
    def _getChildrenOfTypeCollection (self, *args, **kwargs):
      '''_getChildrenOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Collection]
'''
    ...
    def _getChildrenOfTypeDocument (self, *args, **kwargs):
      '''_getChildrenOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Document]
'''
    ...
    def _getChildrenOfTypeGeomInfo (self, *args, **kwargs):
      '''_getChildrenOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::GeomInfo]
'''
    ...
    def _getChildrenOfTypeGeomProp (self, *args, **kwargs):
      '''_getChildrenOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::GeomProp]
'''
    ...
    def _getChildrenOfTypeImplementation (self, *args, **kwargs):
      '''_getChildrenOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Implementation]
'''
    ...
    def _getChildrenOfTypeLook (self, *args, **kwargs):
      '''_getChildrenOfTypeLook(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Look]
'''
    ...
    def _getChildrenOfTypeMaterialAssign (self, *args, **kwargs):
      '''_getChildrenOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::MaterialAssign]
'''
    ...
    def _getChildrenOfTypeNode (self, *args, **kwargs):
      '''_getChildrenOfTypeNode(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Node]
'''
    ...
    def _getChildrenOfTypeNodeDef (self, *args, **kwargs):
      '''_getChildrenOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::NodeDef]
'''
    ...
    def _getChildrenOfTypeNodeGraph (self, *args, **kwargs):
      '''_getChildrenOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::NodeGraph]
'''
    ...
    def _getChildrenOfTypeProperty (self, *args, **kwargs):
      '''_getChildrenOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Property]
'''
    ...
    def _getChildrenOfTypePropertySet (self, *args, **kwargs):
      '''_getChildrenOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::PropertySet]
'''
    ...
    def _getChildrenOfTypePropertySetAssign (self, *args, **kwargs):
      '''_getChildrenOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::PropertySetAssign]
'''
    ...
    def _getChildrenOfTypeToken (self, *args, **kwargs):
      '''_getChildrenOfTypeToken(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Token]
'''
    ...
    def _getChildrenOfTypeTypeDef (self, *args, **kwargs):
      '''_getChildrenOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::TypeDef]
'''
    ...
    def _getChildrenOfTypeVisibility (self, *args, **kwargs):
      '''_getChildrenOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Visibility]
'''
    ...
    def _removeChildOfTypeCollection (self, *args, **kwargs):
      '''_removeChildOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeDocument (self, *args, **kwargs):
      '''_removeChildOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeGeomInfo (self, *args, **kwargs):
      '''_removeChildOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeGeomProp (self, *args, **kwargs):
      '''_removeChildOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeImplementation (self, *args, **kwargs):
      '''_removeChildOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeLook (self, *args, **kwargs):
      '''_removeChildOfTypeLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeMaterialAssign (self, *args, **kwargs):
      '''_removeChildOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNode (self, *args, **kwargs):
      '''_removeChildOfTypeNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNodeDef (self, *args, **kwargs):
      '''_removeChildOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNodeGraph (self, *args, **kwargs):
      '''_removeChildOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeProperty (self, *args, **kwargs):
      '''_removeChildOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypePropertySet (self, *args, **kwargs):
      '''_removeChildOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypePropertySetAssign (self, *args, **kwargs):
      '''_removeChildOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeToken (self, *args, **kwargs):
      '''_removeChildOfTypeToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeTypeDef (self, *args, **kwargs):
      '''_removeChildOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeVisibility (self, *args, **kwargs):
      '''_removeChildOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def addChild (self, elementClass, name, typeString=''):
      '''Add a child element of the given subclass, name, and optional type string.'''
    ...
    def addChildOfCategory (self, *args, **kwargs):
      '''addChildOfCategory(self: MaterialX.PyMaterialXCore.Element, category: str, name: str = '') -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def asString (self, *args, **kwargs):
      '''asString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def changeChildCategory (self, *args, **kwargs):
      '''changeChildCategory(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element, arg1: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def clearContent (self, *args, **kwargs):
      '''clearContent(self: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def copyContentFrom (self, *args, **kwargs):
      '''copyContentFrom(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def createStringResolver (self, *args, **kwargs):
      '''createStringResolver(self: MaterialX.PyMaterialXCore.Element, geom: str = '') -> MaterialX_v1_38_8::StringResolver
'''
    ...
    def createValidChildName (self, *args, **kwargs):
      '''createValidChildName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getActiveColorSpace (self, *args, **kwargs):
      '''getActiveColorSpace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveFilePrefix (self, *args, **kwargs):
      '''getActiveFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveGeomPrefix (self, *args, **kwargs):
      '''getActiveGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveSourceUri (self, *args, **kwargs):
      '''getActiveSourceUri(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getAttribute (self, *args, **kwargs):
      '''getAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getAttributeNames (self, *args, **kwargs):
      '''getAttributeNames(self: MaterialX.PyMaterialXCore.Element) -> List[str]
'''
    ...
    def getCategory (self, *args, **kwargs):
      '''getCategory(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getChild (self, name):
      '''Return the child element, if any, with the given name.'''
    ...
    def getChildIndex (self, *args, **kwargs):
      '''getChildIndex(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> int
'''
    ...
    def getChildOfType (self, elementClass, name):
      '''Return the child element, if any, with the given name and subclass.'''
    ...
    def getChildren (self, *args, **kwargs):
      '''getChildren(self: MaterialX.PyMaterialXCore.Element) -> List[MaterialX.PyMaterialXCore.Element]
'''
    ...
    def getChildrenOfType (self, elementClass):
      '''Return a list of all child elements that are instances of the given type.
       The returned list maintains the order in which children were added.'''
    ...
    def getColorSpace (self, *args, **kwargs):
      '''getColorSpace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getDescendant (self, *args, **kwargs):
      '''getDescendant(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getDocString (self, *args, **kwargs):
      '''getDocString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getDocument (self, *args, **kwargs):
      '''getDocument(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::Document
'''
    ...
    def getFilePrefix (self, *args, **kwargs):
      '''getFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getGeomPrefix (self, *args, **kwargs):
      '''getGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getInheritString (self, *args, **kwargs):
      '''getInheritString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getInheritsFrom (self, *args, **kwargs):
      '''getInheritsFrom(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getName (self, *args, **kwargs):
      '''getName(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getNamePath (self, *args, **kwargs):
      '''getNamePath(self: MaterialX.PyMaterialXCore.Element, relativeTo: MaterialX.PyMaterialXCore.Element = None) -> str
'''
    ...
    def getNamespace (self, *args, **kwargs):
      '''getNamespace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getParent (self, *args, **kwargs):
      '''getParent(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getQualifiedName (self, *args, **kwargs):
      '''getQualifiedName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getRoot (self, *args, **kwargs):
      '''getRoot(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getSelf (self, *args, **kwargs):
      '''getSelf(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getSourceUri (self, *args, **kwargs):
      '''getSourceUri(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getType (self, *args, **kwargs):
      '''getType(self: MaterialX.PyMaterialXCore.TypedElement) -> str
'''
    ...
    def getTypeDef (self, *args, **kwargs):
      '''getTypeDef(self: MaterialX.PyMaterialXCore.TypedElement) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def getUpstreamEdge (self, *args, **kwargs):
      '''getUpstreamEdge(self: MaterialX.PyMaterialXCore.Element, index: int = 0) -> MaterialX_v1_38_8::Edge
'''
    ...
    def getUpstreamEdgeCount (self, *args, **kwargs):
      '''getUpstreamEdgeCount(self: MaterialX.PyMaterialXCore.Element) -> int
'''
    ...
    def getUpstreamElement (self, *args, **kwargs):
      '''getUpstreamElement(self: MaterialX.PyMaterialXCore.Element, index: int = 0) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def hasAttribute (self, *args, **kwargs):
      '''hasAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> bool
'''
    ...
    def hasColorSpace (self, *args, **kwargs):
      '''hasColorSpace(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasFilePrefix (self, *args, **kwargs):
      '''hasFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasGeomPrefix (self, *args, **kwargs):
      '''hasGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritString (self, *args, **kwargs):
      '''hasInheritString(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritanceCycle (self, *args, **kwargs):
      '''hasInheritanceCycle(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritedBase (self, *args, **kwargs):
      '''hasInheritedBase(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasNamespace (self, *args, **kwargs):
      '''hasNamespace(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasSourceUri (self, *args, **kwargs):
      '''hasSourceUri(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasType (self, *args, **kwargs):
      '''hasType(self: MaterialX.PyMaterialXCore.TypedElement) -> bool
'''
    ...
    def isA (self, elementClass, category=''):
      '''Return True if this element is an instance of the given subclass.
       If a category string is specified, then both subclass and category
       matches are required.'''
    ...
    def isMultiOutputType (self, *args, **kwargs):
      '''isMultiOutputType(self: MaterialX.PyMaterialXCore.TypedElement) -> bool
'''
    ...
    def removeAttribute (self, *args, **kwargs):
      '''removeAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def removeChild (self, *args, **kwargs):
      '''removeChild(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def removeChildOfType (self, elementClass, name):
      '''Remove the typed child element, if any, with the given name.'''
    ...
    def setAttribute (self, *args, **kwargs):
      '''setAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str, arg1: str) -> None
'''
    ...
    def setCategory (self, *args, **kwargs):
      '''setCategory(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setChildIndex (self, *args, **kwargs):
      '''setChildIndex(self: MaterialX.PyMaterialXCore.Element, arg0: str, arg1: int) -> None
'''
    ...
    def setColorSpace (self, *args, **kwargs):
      '''setColorSpace(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setDocString (self, *args, **kwargs):
      '''setDocString(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setFilePrefix (self, *args, **kwargs):
      '''setFilePrefix(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setGeomPrefix (self, *args, **kwargs):
      '''setGeomPrefix(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setInheritString (self, *args, **kwargs):
      '''setInheritString(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setInheritsFrom (self, *args, **kwargs):
      '''setInheritsFrom(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def setName (self, *args, **kwargs):
      '''setName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setNamespace (self, *args, **kwargs):
      '''setNamespace(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setSourceUri (self, *args, **kwargs):
      '''setSourceUri(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setType (self, *args, **kwargs):
      '''setType(self: MaterialX.PyMaterialXCore.TypedElement, arg0: str) -> None
'''
    ...
    def traverseGraph (self, *args, **kwargs):
      '''traverseGraph(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::GraphIterator
'''
    ...
    def traverseInheritance (self, *args, **kwargs):
      '''traverseInheritance(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::InheritanceIterator
'''
    ...
    def traverseTree (self, *args, **kwargs):
      '''traverseTree(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::TreeIterator
'''
    ...
    def validate (self, *args, **kwargs):
      '''validate(self: MaterialX.PyMaterialXCore.Element) -> Tuple[bool, str]
'''
    ...

def TypedValue_boolean (*args):
      '''

'''      
    ...

class TypedValue_boolean:
    def TYPE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def createValue (self, *args, **kwargs):
      '''createValue(arg0: bool) -> MaterialX.PyMaterialXCore.Value
'''
    ...
    def createValueFromStrings (self, *args, **kwargs):
      '''createValueFromStrings(arg0: str, arg1: str) -> MaterialX.PyMaterialXCore.Value
'''
    ...
    def getData (self, *args, **kwargs):
      '''getData(self: MaterialX.PyMaterialXCore.TypedValue_boolean) -> bool
'''
    ...
    def getTypeString (self, *args, **kwargs):
      '''getTypeString(self: MaterialX.PyMaterialXCore.Value) -> str
'''
    ...
    def getValueString (self, *args, **kwargs):
      '''getValueString(self: MaterialX.PyMaterialXCore.TypedValue_boolean) -> str
'''
    ...

def TypedValue_booleanarray (*args):
      '''

'''      
    ...

class TypedValue_booleanarray:
    def TYPE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def createValue (self, *args, **kwargs):
      '''createValue(arg0: List[bool]) -> MaterialX.PyMaterialXCore.Value
'''
    ...
    def createValueFromStrings (self, *args, **kwargs):
      '''createValueFromStrings(arg0: str, arg1: str) -> MaterialX.PyMaterialXCore.Value
'''
    ...
    def getData (self, *args, **kwargs):
      '''getData(self: MaterialX.PyMaterialXCore.TypedValue_booleanarray) -> List[bool]
'''
    ...
    def getTypeString (self, *args, **kwargs):
      '''getTypeString(self: MaterialX.PyMaterialXCore.Value) -> str
'''
    ...
    def getValueString (self, *args, **kwargs):
      '''getValueString(self: MaterialX.PyMaterialXCore.TypedValue_booleanarray) -> str
'''
    ...

def TypedValue_color3 (*args):
      '''

'''      
    ...

class TypedValue_color3:
    def TYPE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def createValue (self, *args, **kwargs):
      '''createValue(arg0: MaterialX_v1_38_8::Color3) -> MaterialX.PyMaterialXCore.Value
'''
    ...
    def createValueFromStrings (self, *args, **kwargs):
      '''createValueFromStrings(arg0: str, arg1: str) -> MaterialX.PyMaterialXCore.Value
'''
    ...
    def getData (self, *args, **kwargs):
      '''getData(self: MaterialX.PyMaterialXCore.TypedValue_color3) -> MaterialX_v1_38_8::Color3
'''
    ...
    def getTypeString (self, *args, **kwargs):
      '''getTypeString(self: MaterialX.PyMaterialXCore.Value) -> str
'''
    ...
    def getValueString (self, *args, **kwargs):
      '''getValueString(self: MaterialX.PyMaterialXCore.TypedValue_color3) -> str
'''
    ...

def TypedValue_color4 (*args):
      '''

'''      
    ...

class TypedValue_color4:
    def TYPE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def createValue (self, *args, **kwargs):
      '''createValue(arg0: MaterialX_v1_38_8::Color4) -> MaterialX.PyMaterialXCore.Value
'''
    ...
    def createValueFromStrings (self, *args, **kwargs):
      '''createValueFromStrings(arg0: str, arg1: str) -> MaterialX.PyMaterialXCore.Value
'''
    ...
    def getData (self, *args, **kwargs):
      '''getData(self: MaterialX.PyMaterialXCore.TypedValue_color4) -> MaterialX_v1_38_8::Color4
'''
    ...
    def getTypeString (self, *args, **kwargs):
      '''getTypeString(self: MaterialX.PyMaterialXCore.Value) -> str
'''
    ...
    def getValueString (self, *args, **kwargs):
      '''getValueString(self: MaterialX.PyMaterialXCore.TypedValue_color4) -> str
'''
    ...

def TypedValue_float (*args):
      '''

'''      
    ...

class TypedValue_float:
    def TYPE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def createValue (self, *args, **kwargs):
      '''createValue(arg0: float) -> MaterialX.PyMaterialXCore.Value
'''
    ...
    def createValueFromStrings (self, *args, **kwargs):
      '''createValueFromStrings(arg0: str, arg1: str) -> MaterialX.PyMaterialXCore.Value
'''
    ...
    def getData (self, *args, **kwargs):
      '''getData(self: MaterialX.PyMaterialXCore.TypedValue_float) -> float
'''
    ...
    def getTypeString (self, *args, **kwargs):
      '''getTypeString(self: MaterialX.PyMaterialXCore.Value) -> str
'''
    ...
    def getValueString (self, *args, **kwargs):
      '''getValueString(self: MaterialX.PyMaterialXCore.TypedValue_float) -> str
'''
    ...

def TypedValue_floatarray (*args):
      '''

'''      
    ...

class TypedValue_floatarray:
    def TYPE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def createValue (self, *args, **kwargs):
      '''createValue(arg0: List[float]) -> MaterialX.PyMaterialXCore.Value
'''
    ...
    def createValueFromStrings (self, *args, **kwargs):
      '''createValueFromStrings(arg0: str, arg1: str) -> MaterialX.PyMaterialXCore.Value
'''
    ...
    def getData (self, *args, **kwargs):
      '''getData(self: MaterialX.PyMaterialXCore.TypedValue_floatarray) -> List[float]
'''
    ...
    def getTypeString (self, *args, **kwargs):
      '''getTypeString(self: MaterialX.PyMaterialXCore.Value) -> str
'''
    ...
    def getValueString (self, *args, **kwargs):
      '''getValueString(self: MaterialX.PyMaterialXCore.TypedValue_floatarray) -> str
'''
    ...

def TypedValue_integer (*args):
      '''

'''      
    ...

class TypedValue_integer:
    def TYPE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def createValue (self, *args, **kwargs):
      '''createValue(arg0: int) -> MaterialX.PyMaterialXCore.Value
'''
    ...
    def createValueFromStrings (self, *args, **kwargs):
      '''createValueFromStrings(arg0: str, arg1: str) -> MaterialX.PyMaterialXCore.Value
'''
    ...
    def getData (self, *args, **kwargs):
      '''getData(self: MaterialX.PyMaterialXCore.TypedValue_integer) -> int
'''
    ...
    def getTypeString (self, *args, **kwargs):
      '''getTypeString(self: MaterialX.PyMaterialXCore.Value) -> str
'''
    ...
    def getValueString (self, *args, **kwargs):
      '''getValueString(self: MaterialX.PyMaterialXCore.TypedValue_integer) -> str
'''
    ...

def TypedValue_integerarray (*args):
      '''

'''      
    ...

class TypedValue_integerarray:
    def TYPE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def createValue (self, *args, **kwargs):
      '''createValue(arg0: List[int]) -> MaterialX.PyMaterialXCore.Value
'''
    ...
    def createValueFromStrings (self, *args, **kwargs):
      '''createValueFromStrings(arg0: str, arg1: str) -> MaterialX.PyMaterialXCore.Value
'''
    ...
    def getData (self, *args, **kwargs):
      '''getData(self: MaterialX.PyMaterialXCore.TypedValue_integerarray) -> List[int]
'''
    ...
    def getTypeString (self, *args, **kwargs):
      '''getTypeString(self: MaterialX.PyMaterialXCore.Value) -> str
'''
    ...
    def getValueString (self, *args, **kwargs):
      '''getValueString(self: MaterialX.PyMaterialXCore.TypedValue_integerarray) -> str
'''
    ...

def TypedValue_matrix33 (*args):
      '''

'''      
    ...

class TypedValue_matrix33:
    def TYPE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def createValue (self, *args, **kwargs):
      '''createValue(arg0: MaterialX_v1_38_8::Matrix33) -> MaterialX.PyMaterialXCore.Value
'''
    ...
    def createValueFromStrings (self, *args, **kwargs):
      '''createValueFromStrings(arg0: str, arg1: str) -> MaterialX.PyMaterialXCore.Value
'''
    ...
    def getData (self, *args, **kwargs):
      '''getData(self: MaterialX.PyMaterialXCore.TypedValue_matrix33) -> MaterialX_v1_38_8::Matrix33
'''
    ...
    def getTypeString (self, *args, **kwargs):
      '''getTypeString(self: MaterialX.PyMaterialXCore.Value) -> str
'''
    ...
    def getValueString (self, *args, **kwargs):
      '''getValueString(self: MaterialX.PyMaterialXCore.TypedValue_matrix33) -> str
'''
    ...

def TypedValue_matrix44 (*args):
      '''

'''      
    ...

class TypedValue_matrix44:
    def TYPE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def createValue (self, *args, **kwargs):
      '''createValue(arg0: MaterialX_v1_38_8::Matrix44) -> MaterialX.PyMaterialXCore.Value
'''
    ...
    def createValueFromStrings (self, *args, **kwargs):
      '''createValueFromStrings(arg0: str, arg1: str) -> MaterialX.PyMaterialXCore.Value
'''
    ...
    def getData (self, *args, **kwargs):
      '''getData(self: MaterialX.PyMaterialXCore.TypedValue_matrix44) -> MaterialX_v1_38_8::Matrix44
'''
    ...
    def getTypeString (self, *args, **kwargs):
      '''getTypeString(self: MaterialX.PyMaterialXCore.Value) -> str
'''
    ...
    def getValueString (self, *args, **kwargs):
      '''getValueString(self: MaterialX.PyMaterialXCore.TypedValue_matrix44) -> str
'''
    ...

def TypedValue_string (*args):
      '''

'''      
    ...

class TypedValue_string:
    def TYPE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def createValue (self, *args, **kwargs):
      '''createValue(arg0: str) -> MaterialX.PyMaterialXCore.Value
'''
    ...
    def createValueFromStrings (self, *args, **kwargs):
      '''createValueFromStrings(arg0: str, arg1: str) -> MaterialX.PyMaterialXCore.Value
'''
    ...
    def getData (self, *args, **kwargs):
      '''getData(self: MaterialX.PyMaterialXCore.TypedValue_string) -> str
'''
    ...
    def getTypeString (self, *args, **kwargs):
      '''getTypeString(self: MaterialX.PyMaterialXCore.Value) -> str
'''
    ...
    def getValueString (self, *args, **kwargs):
      '''getValueString(self: MaterialX.PyMaterialXCore.TypedValue_string) -> str
'''
    ...

def TypedValue_stringarray (*args):
      '''

'''      
    ...

class TypedValue_stringarray:
    def TYPE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def createValue (self, *args, **kwargs):
      '''createValue(arg0: List[str]) -> MaterialX.PyMaterialXCore.Value
'''
    ...
    def createValueFromStrings (self, *args, **kwargs):
      '''createValueFromStrings(arg0: str, arg1: str) -> MaterialX.PyMaterialXCore.Value
'''
    ...
    def getData (self, *args, **kwargs):
      '''getData(self: MaterialX.PyMaterialXCore.TypedValue_stringarray) -> List[str]
'''
    ...
    def getTypeString (self, *args, **kwargs):
      '''getTypeString(self: MaterialX.PyMaterialXCore.Value) -> str
'''
    ...
    def getValueString (self, *args, **kwargs):
      '''getValueString(self: MaterialX.PyMaterialXCore.TypedValue_stringarray) -> str
'''
    ...

def TypedValue_vector2 (*args):
      '''

'''      
    ...

class TypedValue_vector2:
    def TYPE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def createValue (self, *args, **kwargs):
      '''createValue(arg0: MaterialX_v1_38_8::Vector2) -> MaterialX.PyMaterialXCore.Value
'''
    ...
    def createValueFromStrings (self, *args, **kwargs):
      '''createValueFromStrings(arg0: str, arg1: str) -> MaterialX.PyMaterialXCore.Value
'''
    ...
    def getData (self, *args, **kwargs):
      '''getData(self: MaterialX.PyMaterialXCore.TypedValue_vector2) -> MaterialX_v1_38_8::Vector2
'''
    ...
    def getTypeString (self, *args, **kwargs):
      '''getTypeString(self: MaterialX.PyMaterialXCore.Value) -> str
'''
    ...
    def getValueString (self, *args, **kwargs):
      '''getValueString(self: MaterialX.PyMaterialXCore.TypedValue_vector2) -> str
'''
    ...

def TypedValue_vector3 (*args):
      '''

'''      
    ...

class TypedValue_vector3:
    def TYPE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def createValue (self, *args, **kwargs):
      '''createValue(arg0: MaterialX_v1_38_8::Vector3) -> MaterialX.PyMaterialXCore.Value
'''
    ...
    def createValueFromStrings (self, *args, **kwargs):
      '''createValueFromStrings(arg0: str, arg1: str) -> MaterialX.PyMaterialXCore.Value
'''
    ...
    def getData (self, *args, **kwargs):
      '''getData(self: MaterialX.PyMaterialXCore.TypedValue_vector3) -> MaterialX_v1_38_8::Vector3
'''
    ...
    def getTypeString (self, *args, **kwargs):
      '''getTypeString(self: MaterialX.PyMaterialXCore.Value) -> str
'''
    ...
    def getValueString (self, *args, **kwargs):
      '''getValueString(self: MaterialX.PyMaterialXCore.TypedValue_vector3) -> str
'''
    ...

def TypedValue_vector4 (*args):
      '''

'''      
    ...

class TypedValue_vector4:
    def TYPE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def createValue (self, *args, **kwargs):
      '''createValue(arg0: MaterialX_v1_38_8::Vector4) -> MaterialX.PyMaterialXCore.Value
'''
    ...
    def createValueFromStrings (self, *args, **kwargs):
      '''createValueFromStrings(arg0: str, arg1: str) -> MaterialX.PyMaterialXCore.Value
'''
    ...
    def getData (self, *args, **kwargs):
      '''getData(self: MaterialX.PyMaterialXCore.TypedValue_vector4) -> MaterialX_v1_38_8::Vector4
'''
    ...
    def getTypeString (self, *args, **kwargs):
      '''getTypeString(self: MaterialX.PyMaterialXCore.Value) -> str
'''
    ...
    def getValueString (self, *args, **kwargs):
      '''getValueString(self: MaterialX.PyMaterialXCore.TypedValue_vector4) -> str
'''
    ...

def UDIM_SET_PROPERTY (*args):
      '''

'''      
    ...

def UDIM_TOKEN (*args):
      '''

'''      
    ...

def UNIVERSAL_GEOM_NAME (*args):
      '''

'''      
    ...

def UV_TILE_TOKEN (*args):
      '''

'''      
    ...

def Unit (*args):
      '''

'''      
    ...

class Unit:
    def CATEGORY (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def _addChildCollection (self, *args, **kwargs):
      '''_addChildCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Collection
'''
    ...
    def _addChildDocument (self, *args, **kwargs):
      '''_addChildDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Document
'''
    ...
    def _addChildGeomInfo (self, *args, **kwargs):
      '''_addChildGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomInfo
'''
    ...
    def _addChildGeomProp (self, *args, **kwargs):
      '''_addChildGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def _addChildImplementation (self, *args, **kwargs):
      '''_addChildImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Implementation
'''
    ...
    def _addChildLook (self, *args, **kwargs):
      '''_addChildLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Look
'''
    ...
    def _addChildMaterialAssign (self, *args, **kwargs):
      '''_addChildMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::MaterialAssign
'''
    ...
    def _addChildNode (self, *args, **kwargs):
      '''_addChildNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Node
'''
    ...
    def _addChildNodeDef (self, *args, **kwargs):
      '''_addChildNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeDef
'''
    ...
    def _addChildNodeGraph (self, *args, **kwargs):
      '''_addChildNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeGraph
'''
    ...
    def _addChildProperty (self, *args, **kwargs):
      '''_addChildProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Property
'''
    ...
    def _addChildPropertySet (self, *args, **kwargs):
      '''_addChildPropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySet
'''
    ...
    def _addChildPropertySetAssign (self, *args, **kwargs):
      '''_addChildPropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySetAssign
'''
    ...
    def _addChildToken (self, *args, **kwargs):
      '''_addChildToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Token
'''
    ...
    def _addChildTypeDef (self, *args, **kwargs):
      '''_addChildTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def _addChildVisibility (self, *args, **kwargs):
      '''_addChildVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Visibility
'''
    ...
    def _getChild (self, *args, **kwargs):
      '''_getChild(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def _getChildOfTypeCollection (self, *args, **kwargs):
      '''_getChildOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Collection
'''
    ...
    def _getChildOfTypeDocument (self, *args, **kwargs):
      '''_getChildOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Document
'''
    ...
    def _getChildOfTypeGeomInfo (self, *args, **kwargs):
      '''_getChildOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomInfo
'''
    ...
    def _getChildOfTypeGeomProp (self, *args, **kwargs):
      '''_getChildOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def _getChildOfTypeImplementation (self, *args, **kwargs):
      '''_getChildOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Implementation
'''
    ...
    def _getChildOfTypeLook (self, *args, **kwargs):
      '''_getChildOfTypeLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Look
'''
    ...
    def _getChildOfTypeMaterialAssign (self, *args, **kwargs):
      '''_getChildOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::MaterialAssign
'''
    ...
    def _getChildOfTypeNode (self, *args, **kwargs):
      '''_getChildOfTypeNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Node
'''
    ...
    def _getChildOfTypeNodeDef (self, *args, **kwargs):
      '''_getChildOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeDef
'''
    ...
    def _getChildOfTypeNodeGraph (self, *args, **kwargs):
      '''_getChildOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeGraph
'''
    ...
    def _getChildOfTypeProperty (self, *args, **kwargs):
      '''_getChildOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Property
'''
    ...
    def _getChildOfTypePropertySet (self, *args, **kwargs):
      '''_getChildOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySet
'''
    ...
    def _getChildOfTypePropertySetAssign (self, *args, **kwargs):
      '''_getChildOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySetAssign
'''
    ...
    def _getChildOfTypeToken (self, *args, **kwargs):
      '''_getChildOfTypeToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Token
'''
    ...
    def _getChildOfTypeTypeDef (self, *args, **kwargs):
      '''_getChildOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def _getChildOfTypeVisibility (self, *args, **kwargs):
      '''_getChildOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Visibility
'''
    ...
    def _getChildrenOfTypeCollection (self, *args, **kwargs):
      '''_getChildrenOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Collection]
'''
    ...
    def _getChildrenOfTypeDocument (self, *args, **kwargs):
      '''_getChildrenOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Document]
'''
    ...
    def _getChildrenOfTypeGeomInfo (self, *args, **kwargs):
      '''_getChildrenOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::GeomInfo]
'''
    ...
    def _getChildrenOfTypeGeomProp (self, *args, **kwargs):
      '''_getChildrenOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::GeomProp]
'''
    ...
    def _getChildrenOfTypeImplementation (self, *args, **kwargs):
      '''_getChildrenOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Implementation]
'''
    ...
    def _getChildrenOfTypeLook (self, *args, **kwargs):
      '''_getChildrenOfTypeLook(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Look]
'''
    ...
    def _getChildrenOfTypeMaterialAssign (self, *args, **kwargs):
      '''_getChildrenOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::MaterialAssign]
'''
    ...
    def _getChildrenOfTypeNode (self, *args, **kwargs):
      '''_getChildrenOfTypeNode(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Node]
'''
    ...
    def _getChildrenOfTypeNodeDef (self, *args, **kwargs):
      '''_getChildrenOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::NodeDef]
'''
    ...
    def _getChildrenOfTypeNodeGraph (self, *args, **kwargs):
      '''_getChildrenOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::NodeGraph]
'''
    ...
    def _getChildrenOfTypeProperty (self, *args, **kwargs):
      '''_getChildrenOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Property]
'''
    ...
    def _getChildrenOfTypePropertySet (self, *args, **kwargs):
      '''_getChildrenOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::PropertySet]
'''
    ...
    def _getChildrenOfTypePropertySetAssign (self, *args, **kwargs):
      '''_getChildrenOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::PropertySetAssign]
'''
    ...
    def _getChildrenOfTypeToken (self, *args, **kwargs):
      '''_getChildrenOfTypeToken(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Token]
'''
    ...
    def _getChildrenOfTypeTypeDef (self, *args, **kwargs):
      '''_getChildrenOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::TypeDef]
'''
    ...
    def _getChildrenOfTypeVisibility (self, *args, **kwargs):
      '''_getChildrenOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Visibility]
'''
    ...
    def _removeChildOfTypeCollection (self, *args, **kwargs):
      '''_removeChildOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeDocument (self, *args, **kwargs):
      '''_removeChildOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeGeomInfo (self, *args, **kwargs):
      '''_removeChildOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeGeomProp (self, *args, **kwargs):
      '''_removeChildOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeImplementation (self, *args, **kwargs):
      '''_removeChildOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeLook (self, *args, **kwargs):
      '''_removeChildOfTypeLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeMaterialAssign (self, *args, **kwargs):
      '''_removeChildOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNode (self, *args, **kwargs):
      '''_removeChildOfTypeNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNodeDef (self, *args, **kwargs):
      '''_removeChildOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNodeGraph (self, *args, **kwargs):
      '''_removeChildOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeProperty (self, *args, **kwargs):
      '''_removeChildOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypePropertySet (self, *args, **kwargs):
      '''_removeChildOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypePropertySetAssign (self, *args, **kwargs):
      '''_removeChildOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeToken (self, *args, **kwargs):
      '''_removeChildOfTypeToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeTypeDef (self, *args, **kwargs):
      '''_removeChildOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeVisibility (self, *args, **kwargs):
      '''_removeChildOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def addChild (self, elementClass, name, typeString=''):
      '''Add a child element of the given subclass, name, and optional type string.'''
    ...
    def addChildOfCategory (self, *args, **kwargs):
      '''addChildOfCategory(self: MaterialX.PyMaterialXCore.Element, category: str, name: str = '') -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def asString (self, *args, **kwargs):
      '''asString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def changeChildCategory (self, *args, **kwargs):
      '''changeChildCategory(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element, arg1: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def clearContent (self, *args, **kwargs):
      '''clearContent(self: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def copyContentFrom (self, *args, **kwargs):
      '''copyContentFrom(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def createStringResolver (self, *args, **kwargs):
      '''createStringResolver(self: MaterialX.PyMaterialXCore.Element, geom: str = '') -> MaterialX_v1_38_8::StringResolver
'''
    ...
    def createValidChildName (self, *args, **kwargs):
      '''createValidChildName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getActiveColorSpace (self, *args, **kwargs):
      '''getActiveColorSpace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveFilePrefix (self, *args, **kwargs):
      '''getActiveFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveGeomPrefix (self, *args, **kwargs):
      '''getActiveGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveSourceUri (self, *args, **kwargs):
      '''getActiveSourceUri(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getAttribute (self, *args, **kwargs):
      '''getAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getAttributeNames (self, *args, **kwargs):
      '''getAttributeNames(self: MaterialX.PyMaterialXCore.Element) -> List[str]
'''
    ...
    def getCategory (self, *args, **kwargs):
      '''getCategory(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getChild (self, name):
      '''Return the child element, if any, with the given name.'''
    ...
    def getChildIndex (self, *args, **kwargs):
      '''getChildIndex(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> int
'''
    ...
    def getChildOfType (self, elementClass, name):
      '''Return the child element, if any, with the given name and subclass.'''
    ...
    def getChildren (self, *args, **kwargs):
      '''getChildren(self: MaterialX.PyMaterialXCore.Element) -> List[MaterialX.PyMaterialXCore.Element]
'''
    ...
    def getChildrenOfType (self, elementClass):
      '''Return a list of all child elements that are instances of the given type.
       The returned list maintains the order in which children were added.'''
    ...
    def getColorSpace (self, *args, **kwargs):
      '''getColorSpace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getDescendant (self, *args, **kwargs):
      '''getDescendant(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getDocString (self, *args, **kwargs):
      '''getDocString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getDocument (self, *args, **kwargs):
      '''getDocument(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::Document
'''
    ...
    def getFilePrefix (self, *args, **kwargs):
      '''getFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getGeomPrefix (self, *args, **kwargs):
      '''getGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getInheritString (self, *args, **kwargs):
      '''getInheritString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getInheritsFrom (self, *args, **kwargs):
      '''getInheritsFrom(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getName (self, *args, **kwargs):
      '''getName(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getNamePath (self, *args, **kwargs):
      '''getNamePath(self: MaterialX.PyMaterialXCore.Element, relativeTo: MaterialX.PyMaterialXCore.Element = None) -> str
'''
    ...
    def getNamespace (self, *args, **kwargs):
      '''getNamespace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getParent (self, *args, **kwargs):
      '''getParent(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getQualifiedName (self, *args, **kwargs):
      '''getQualifiedName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getRoot (self, *args, **kwargs):
      '''getRoot(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getSelf (self, *args, **kwargs):
      '''getSelf(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getSourceUri (self, *args, **kwargs):
      '''getSourceUri(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getUpstreamEdge (self, *args, **kwargs):
      '''getUpstreamEdge(self: MaterialX.PyMaterialXCore.Element, index: int = 0) -> MaterialX_v1_38_8::Edge
'''
    ...
    def getUpstreamEdgeCount (self, *args, **kwargs):
      '''getUpstreamEdgeCount(self: MaterialX.PyMaterialXCore.Element) -> int
'''
    ...
    def getUpstreamElement (self, *args, **kwargs):
      '''getUpstreamElement(self: MaterialX.PyMaterialXCore.Element, index: int = 0) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def hasAttribute (self, *args, **kwargs):
      '''hasAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> bool
'''
    ...
    def hasColorSpace (self, *args, **kwargs):
      '''hasColorSpace(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasFilePrefix (self, *args, **kwargs):
      '''hasFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasGeomPrefix (self, *args, **kwargs):
      '''hasGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritString (self, *args, **kwargs):
      '''hasInheritString(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritanceCycle (self, *args, **kwargs):
      '''hasInheritanceCycle(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritedBase (self, *args, **kwargs):
      '''hasInheritedBase(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasNamespace (self, *args, **kwargs):
      '''hasNamespace(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasSourceUri (self, *args, **kwargs):
      '''hasSourceUri(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def isA (self, elementClass, category=''):
      '''Return True if this element is an instance of the given subclass.
       If a category string is specified, then both subclass and category
       matches are required.'''
    ...
    def removeAttribute (self, *args, **kwargs):
      '''removeAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def removeChild (self, *args, **kwargs):
      '''removeChild(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def removeChildOfType (self, elementClass, name):
      '''Remove the typed child element, if any, with the given name.'''
    ...
    def setAttribute (self, *args, **kwargs):
      '''setAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str, arg1: str) -> None
'''
    ...
    def setCategory (self, *args, **kwargs):
      '''setCategory(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setChildIndex (self, *args, **kwargs):
      '''setChildIndex(self: MaterialX.PyMaterialXCore.Element, arg0: str, arg1: int) -> None
'''
    ...
    def setColorSpace (self, *args, **kwargs):
      '''setColorSpace(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setDocString (self, *args, **kwargs):
      '''setDocString(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setFilePrefix (self, *args, **kwargs):
      '''setFilePrefix(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setGeomPrefix (self, *args, **kwargs):
      '''setGeomPrefix(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setInheritString (self, *args, **kwargs):
      '''setInheritString(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setInheritsFrom (self, *args, **kwargs):
      '''setInheritsFrom(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def setName (self, *args, **kwargs):
      '''setName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setNamespace (self, *args, **kwargs):
      '''setNamespace(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setSourceUri (self, *args, **kwargs):
      '''setSourceUri(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def traverseGraph (self, *args, **kwargs):
      '''traverseGraph(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::GraphIterator
'''
    ...
    def traverseInheritance (self, *args, **kwargs):
      '''traverseInheritance(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::InheritanceIterator
'''
    ...
    def traverseTree (self, *args, **kwargs):
      '''traverseTree(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::TreeIterator
'''
    ...
    def validate (self, *args, **kwargs):
      '''validate(self: MaterialX.PyMaterialXCore.Element) -> Tuple[bool, str]
'''
    ...

def UnitConverter (*args):
      '''

'''      
    ...

class UnitConverter:
    def convert (self, *args, **kwargs):
      '''convert(*args, **kwargs)
Overloaded function.

1. convert(self: MaterialX.PyMaterialXCore.UnitConverter, arg0: float, arg1: str, arg2: str) -> float

2. convert(self: MaterialX.PyMaterialXCore.UnitConverter, arg0: MaterialX.PyMaterialXCore.Vector2, arg1: str, arg2: str) -> MaterialX.PyMaterialXCore.Vector2

3. convert(self: MaterialX.PyMaterialXCore.UnitConverter, arg0: MaterialX.PyMaterialXCore.Vector3, arg1: str, arg2: str) -> MaterialX.PyMaterialXCore.Vector3

4. convert(self: MaterialX.PyMaterialXCore.UnitConverter, arg0: MaterialX.PyMaterialXCore.Vector4, arg1: str, arg2: str) -> MaterialX.PyMaterialXCore.Vector4
'''
    ...
    def getUnitAsInteger (self, *args, **kwargs):
      '''getUnitAsInteger(self: MaterialX.PyMaterialXCore.UnitConverter, arg0: str) -> int
'''
    ...
    def getUnitFromInteger (self, *args, **kwargs):
      '''getUnitFromInteger(self: MaterialX.PyMaterialXCore.UnitConverter, arg0: int) -> str
'''
    ...

def UnitConverterRegistry (*args):
      '''

'''      
    ...

class UnitConverterRegistry:
    def addUnitConverter (self, *args, **kwargs):
      '''addUnitConverter(self: MaterialX.PyMaterialXCore.UnitConverterRegistry, arg0: MaterialX.PyMaterialXCore.UnitTypeDef, arg1: MaterialX.PyMaterialXCore.UnitConverter) -> bool
'''
    ...
    def clearUnitConverters (self, *args, **kwargs):
      '''clearUnitConverters(self: MaterialX.PyMaterialXCore.UnitConverterRegistry) -> None
'''
    ...
    def create (self, *args, **kwargs):
      '''create() -> MaterialX.PyMaterialXCore.UnitConverterRegistry
'''
    ...
    def getUnitConverter (self, *args, **kwargs):
      '''getUnitConverter(self: MaterialX.PyMaterialXCore.UnitConverterRegistry, arg0: MaterialX.PyMaterialXCore.UnitTypeDef) -> MaterialX.PyMaterialXCore.UnitConverter
'''
    ...
    def removeUnitConverter (self, *args, **kwargs):
      '''removeUnitConverter(self: MaterialX.PyMaterialXCore.UnitConverterRegistry, arg0: MaterialX.PyMaterialXCore.UnitTypeDef) -> bool
'''
    ...

def UnitDef (*args):
      '''

'''      
    ...

class UnitDef:
    def CATEGORY (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def UNITTYPE_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def _addChildCollection (self, *args, **kwargs):
      '''_addChildCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Collection
'''
    ...
    def _addChildDocument (self, *args, **kwargs):
      '''_addChildDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Document
'''
    ...
    def _addChildGeomInfo (self, *args, **kwargs):
      '''_addChildGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomInfo
'''
    ...
    def _addChildGeomProp (self, *args, **kwargs):
      '''_addChildGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def _addChildImplementation (self, *args, **kwargs):
      '''_addChildImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Implementation
'''
    ...
    def _addChildLook (self, *args, **kwargs):
      '''_addChildLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Look
'''
    ...
    def _addChildMaterialAssign (self, *args, **kwargs):
      '''_addChildMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::MaterialAssign
'''
    ...
    def _addChildNode (self, *args, **kwargs):
      '''_addChildNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Node
'''
    ...
    def _addChildNodeDef (self, *args, **kwargs):
      '''_addChildNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeDef
'''
    ...
    def _addChildNodeGraph (self, *args, **kwargs):
      '''_addChildNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeGraph
'''
    ...
    def _addChildProperty (self, *args, **kwargs):
      '''_addChildProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Property
'''
    ...
    def _addChildPropertySet (self, *args, **kwargs):
      '''_addChildPropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySet
'''
    ...
    def _addChildPropertySetAssign (self, *args, **kwargs):
      '''_addChildPropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySetAssign
'''
    ...
    def _addChildToken (self, *args, **kwargs):
      '''_addChildToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Token
'''
    ...
    def _addChildTypeDef (self, *args, **kwargs):
      '''_addChildTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def _addChildVisibility (self, *args, **kwargs):
      '''_addChildVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Visibility
'''
    ...
    def _getChild (self, *args, **kwargs):
      '''_getChild(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def _getChildOfTypeCollection (self, *args, **kwargs):
      '''_getChildOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Collection
'''
    ...
    def _getChildOfTypeDocument (self, *args, **kwargs):
      '''_getChildOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Document
'''
    ...
    def _getChildOfTypeGeomInfo (self, *args, **kwargs):
      '''_getChildOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomInfo
'''
    ...
    def _getChildOfTypeGeomProp (self, *args, **kwargs):
      '''_getChildOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def _getChildOfTypeImplementation (self, *args, **kwargs):
      '''_getChildOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Implementation
'''
    ...
    def _getChildOfTypeLook (self, *args, **kwargs):
      '''_getChildOfTypeLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Look
'''
    ...
    def _getChildOfTypeMaterialAssign (self, *args, **kwargs):
      '''_getChildOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::MaterialAssign
'''
    ...
    def _getChildOfTypeNode (self, *args, **kwargs):
      '''_getChildOfTypeNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Node
'''
    ...
    def _getChildOfTypeNodeDef (self, *args, **kwargs):
      '''_getChildOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeDef
'''
    ...
    def _getChildOfTypeNodeGraph (self, *args, **kwargs):
      '''_getChildOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeGraph
'''
    ...
    def _getChildOfTypeProperty (self, *args, **kwargs):
      '''_getChildOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Property
'''
    ...
    def _getChildOfTypePropertySet (self, *args, **kwargs):
      '''_getChildOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySet
'''
    ...
    def _getChildOfTypePropertySetAssign (self, *args, **kwargs):
      '''_getChildOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySetAssign
'''
    ...
    def _getChildOfTypeToken (self, *args, **kwargs):
      '''_getChildOfTypeToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Token
'''
    ...
    def _getChildOfTypeTypeDef (self, *args, **kwargs):
      '''_getChildOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def _getChildOfTypeVisibility (self, *args, **kwargs):
      '''_getChildOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Visibility
'''
    ...
    def _getChildrenOfTypeCollection (self, *args, **kwargs):
      '''_getChildrenOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Collection]
'''
    ...
    def _getChildrenOfTypeDocument (self, *args, **kwargs):
      '''_getChildrenOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Document]
'''
    ...
    def _getChildrenOfTypeGeomInfo (self, *args, **kwargs):
      '''_getChildrenOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::GeomInfo]
'''
    ...
    def _getChildrenOfTypeGeomProp (self, *args, **kwargs):
      '''_getChildrenOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::GeomProp]
'''
    ...
    def _getChildrenOfTypeImplementation (self, *args, **kwargs):
      '''_getChildrenOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Implementation]
'''
    ...
    def _getChildrenOfTypeLook (self, *args, **kwargs):
      '''_getChildrenOfTypeLook(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Look]
'''
    ...
    def _getChildrenOfTypeMaterialAssign (self, *args, **kwargs):
      '''_getChildrenOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::MaterialAssign]
'''
    ...
    def _getChildrenOfTypeNode (self, *args, **kwargs):
      '''_getChildrenOfTypeNode(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Node]
'''
    ...
    def _getChildrenOfTypeNodeDef (self, *args, **kwargs):
      '''_getChildrenOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::NodeDef]
'''
    ...
    def _getChildrenOfTypeNodeGraph (self, *args, **kwargs):
      '''_getChildrenOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::NodeGraph]
'''
    ...
    def _getChildrenOfTypeProperty (self, *args, **kwargs):
      '''_getChildrenOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Property]
'''
    ...
    def _getChildrenOfTypePropertySet (self, *args, **kwargs):
      '''_getChildrenOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::PropertySet]
'''
    ...
    def _getChildrenOfTypePropertySetAssign (self, *args, **kwargs):
      '''_getChildrenOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::PropertySetAssign]
'''
    ...
    def _getChildrenOfTypeToken (self, *args, **kwargs):
      '''_getChildrenOfTypeToken(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Token]
'''
    ...
    def _getChildrenOfTypeTypeDef (self, *args, **kwargs):
      '''_getChildrenOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::TypeDef]
'''
    ...
    def _getChildrenOfTypeVisibility (self, *args, **kwargs):
      '''_getChildrenOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Visibility]
'''
    ...
    def _removeChildOfTypeCollection (self, *args, **kwargs):
      '''_removeChildOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeDocument (self, *args, **kwargs):
      '''_removeChildOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeGeomInfo (self, *args, **kwargs):
      '''_removeChildOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeGeomProp (self, *args, **kwargs):
      '''_removeChildOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeImplementation (self, *args, **kwargs):
      '''_removeChildOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeLook (self, *args, **kwargs):
      '''_removeChildOfTypeLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeMaterialAssign (self, *args, **kwargs):
      '''_removeChildOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNode (self, *args, **kwargs):
      '''_removeChildOfTypeNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNodeDef (self, *args, **kwargs):
      '''_removeChildOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNodeGraph (self, *args, **kwargs):
      '''_removeChildOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeProperty (self, *args, **kwargs):
      '''_removeChildOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypePropertySet (self, *args, **kwargs):
      '''_removeChildOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypePropertySetAssign (self, *args, **kwargs):
      '''_removeChildOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeToken (self, *args, **kwargs):
      '''_removeChildOfTypeToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeTypeDef (self, *args, **kwargs):
      '''_removeChildOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeVisibility (self, *args, **kwargs):
      '''_removeChildOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def addChild (self, elementClass, name, typeString=''):
      '''Add a child element of the given subclass, name, and optional type string.'''
    ...
    def addChildOfCategory (self, *args, **kwargs):
      '''addChildOfCategory(self: MaterialX.PyMaterialXCore.Element, category: str, name: str = '') -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def addUnit (self, *args, **kwargs):
      '''addUnit(self: MaterialX.PyMaterialXCore.UnitDef, arg0: str) -> MaterialX.PyMaterialXCore.Unit
'''
    ...
    def asString (self, *args, **kwargs):
      '''asString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def changeChildCategory (self, *args, **kwargs):
      '''changeChildCategory(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element, arg1: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def clearContent (self, *args, **kwargs):
      '''clearContent(self: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def copyContentFrom (self, *args, **kwargs):
      '''copyContentFrom(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def createStringResolver (self, *args, **kwargs):
      '''createStringResolver(self: MaterialX.PyMaterialXCore.Element, geom: str = '') -> MaterialX_v1_38_8::StringResolver
'''
    ...
    def createValidChildName (self, *args, **kwargs):
      '''createValidChildName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getActiveColorSpace (self, *args, **kwargs):
      '''getActiveColorSpace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveFilePrefix (self, *args, **kwargs):
      '''getActiveFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveGeomPrefix (self, *args, **kwargs):
      '''getActiveGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveSourceUri (self, *args, **kwargs):
      '''getActiveSourceUri(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getAttribute (self, *args, **kwargs):
      '''getAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getAttributeNames (self, *args, **kwargs):
      '''getAttributeNames(self: MaterialX.PyMaterialXCore.Element) -> List[str]
'''
    ...
    def getCategory (self, *args, **kwargs):
      '''getCategory(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getChild (self, name):
      '''Return the child element, if any, with the given name.'''
    ...
    def getChildIndex (self, *args, **kwargs):
      '''getChildIndex(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> int
'''
    ...
    def getChildOfType (self, elementClass, name):
      '''Return the child element, if any, with the given name and subclass.'''
    ...
    def getChildren (self, *args, **kwargs):
      '''getChildren(self: MaterialX.PyMaterialXCore.Element) -> List[MaterialX.PyMaterialXCore.Element]
'''
    ...
    def getChildrenOfType (self, elementClass):
      '''Return a list of all child elements that are instances of the given type.
       The returned list maintains the order in which children were added.'''
    ...
    def getColorSpace (self, *args, **kwargs):
      '''getColorSpace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getDescendant (self, *args, **kwargs):
      '''getDescendant(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getDocString (self, *args, **kwargs):
      '''getDocString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getDocument (self, *args, **kwargs):
      '''getDocument(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::Document
'''
    ...
    def getFilePrefix (self, *args, **kwargs):
      '''getFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getGeomPrefix (self, *args, **kwargs):
      '''getGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getInheritString (self, *args, **kwargs):
      '''getInheritString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getInheritsFrom (self, *args, **kwargs):
      '''getInheritsFrom(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getName (self, *args, **kwargs):
      '''getName(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getNamePath (self, *args, **kwargs):
      '''getNamePath(self: MaterialX.PyMaterialXCore.Element, relativeTo: MaterialX.PyMaterialXCore.Element = None) -> str
'''
    ...
    def getNamespace (self, *args, **kwargs):
      '''getNamespace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getParent (self, *args, **kwargs):
      '''getParent(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getQualifiedName (self, *args, **kwargs):
      '''getQualifiedName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getRoot (self, *args, **kwargs):
      '''getRoot(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getSelf (self, *args, **kwargs):
      '''getSelf(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getSourceUri (self, *args, **kwargs):
      '''getSourceUri(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getUnit (self, *args, **kwargs):
      '''getUnit(self: MaterialX.PyMaterialXCore.UnitDef, arg0: str) -> MaterialX.PyMaterialXCore.Unit
'''
    ...
    def getUnitType (self, *args, **kwargs):
      '''getUnitType(self: MaterialX.PyMaterialXCore.UnitDef) -> str
'''
    ...
    def getUnits (self, *args, **kwargs):
      '''getUnits(self: MaterialX.PyMaterialXCore.UnitDef) -> List[MaterialX.PyMaterialXCore.Unit]
'''
    ...
    def getUpstreamEdge (self, *args, **kwargs):
      '''getUpstreamEdge(self: MaterialX.PyMaterialXCore.Element, index: int = 0) -> MaterialX_v1_38_8::Edge
'''
    ...
    def getUpstreamEdgeCount (self, *args, **kwargs):
      '''getUpstreamEdgeCount(self: MaterialX.PyMaterialXCore.Element) -> int
'''
    ...
    def getUpstreamElement (self, *args, **kwargs):
      '''getUpstreamElement(self: MaterialX.PyMaterialXCore.Element, index: int = 0) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def hasAttribute (self, *args, **kwargs):
      '''hasAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> bool
'''
    ...
    def hasColorSpace (self, *args, **kwargs):
      '''hasColorSpace(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasFilePrefix (self, *args, **kwargs):
      '''hasFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasGeomPrefix (self, *args, **kwargs):
      '''hasGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritString (self, *args, **kwargs):
      '''hasInheritString(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritanceCycle (self, *args, **kwargs):
      '''hasInheritanceCycle(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritedBase (self, *args, **kwargs):
      '''hasInheritedBase(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasNamespace (self, *args, **kwargs):
      '''hasNamespace(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasSourceUri (self, *args, **kwargs):
      '''hasSourceUri(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasUnitType (self, *args, **kwargs):
      '''hasUnitType(self: MaterialX.PyMaterialXCore.UnitDef) -> bool
'''
    ...
    def isA (self, elementClass, category=''):
      '''Return True if this element is an instance of the given subclass.
       If a category string is specified, then both subclass and category
       matches are required.'''
    ...
    def removeAttribute (self, *args, **kwargs):
      '''removeAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def removeChild (self, *args, **kwargs):
      '''removeChild(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def removeChildOfType (self, elementClass, name):
      '''Remove the typed child element, if any, with the given name.'''
    ...
    def setAttribute (self, *args, **kwargs):
      '''setAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str, arg1: str) -> None
'''
    ...
    def setCategory (self, *args, **kwargs):
      '''setCategory(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setChildIndex (self, *args, **kwargs):
      '''setChildIndex(self: MaterialX.PyMaterialXCore.Element, arg0: str, arg1: int) -> None
'''
    ...
    def setColorSpace (self, *args, **kwargs):
      '''setColorSpace(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setDocString (self, *args, **kwargs):
      '''setDocString(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setFilePrefix (self, *args, **kwargs):
      '''setFilePrefix(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setGeomPrefix (self, *args, **kwargs):
      '''setGeomPrefix(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setInheritString (self, *args, **kwargs):
      '''setInheritString(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setInheritsFrom (self, *args, **kwargs):
      '''setInheritsFrom(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def setName (self, *args, **kwargs):
      '''setName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setNamespace (self, *args, **kwargs):
      '''setNamespace(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setSourceUri (self, *args, **kwargs):
      '''setSourceUri(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setUnitType (self, *args, **kwargs):
      '''setUnitType(self: MaterialX.PyMaterialXCore.UnitDef) -> bool
'''
    ...
    def traverseGraph (self, *args, **kwargs):
      '''traverseGraph(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::GraphIterator
'''
    ...
    def traverseInheritance (self, *args, **kwargs):
      '''traverseInheritance(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::InheritanceIterator
'''
    ...
    def traverseTree (self, *args, **kwargs):
      '''traverseTree(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::TreeIterator
'''
    ...
    def validate (self, *args, **kwargs):
      '''validate(self: MaterialX.PyMaterialXCore.Element) -> Tuple[bool, str]
'''
    ...

def UnitTypeDef (*args):
      '''

'''      
    ...

class UnitTypeDef:
    def CATEGORY (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def _addChildCollection (self, *args, **kwargs):
      '''_addChildCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Collection
'''
    ...
    def _addChildDocument (self, *args, **kwargs):
      '''_addChildDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Document
'''
    ...
    def _addChildGeomInfo (self, *args, **kwargs):
      '''_addChildGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomInfo
'''
    ...
    def _addChildGeomProp (self, *args, **kwargs):
      '''_addChildGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def _addChildImplementation (self, *args, **kwargs):
      '''_addChildImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Implementation
'''
    ...
    def _addChildLook (self, *args, **kwargs):
      '''_addChildLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Look
'''
    ...
    def _addChildMaterialAssign (self, *args, **kwargs):
      '''_addChildMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::MaterialAssign
'''
    ...
    def _addChildNode (self, *args, **kwargs):
      '''_addChildNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Node
'''
    ...
    def _addChildNodeDef (self, *args, **kwargs):
      '''_addChildNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeDef
'''
    ...
    def _addChildNodeGraph (self, *args, **kwargs):
      '''_addChildNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeGraph
'''
    ...
    def _addChildProperty (self, *args, **kwargs):
      '''_addChildProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Property
'''
    ...
    def _addChildPropertySet (self, *args, **kwargs):
      '''_addChildPropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySet
'''
    ...
    def _addChildPropertySetAssign (self, *args, **kwargs):
      '''_addChildPropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySetAssign
'''
    ...
    def _addChildToken (self, *args, **kwargs):
      '''_addChildToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Token
'''
    ...
    def _addChildTypeDef (self, *args, **kwargs):
      '''_addChildTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def _addChildVisibility (self, *args, **kwargs):
      '''_addChildVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Visibility
'''
    ...
    def _getChild (self, *args, **kwargs):
      '''_getChild(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def _getChildOfTypeCollection (self, *args, **kwargs):
      '''_getChildOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Collection
'''
    ...
    def _getChildOfTypeDocument (self, *args, **kwargs):
      '''_getChildOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Document
'''
    ...
    def _getChildOfTypeGeomInfo (self, *args, **kwargs):
      '''_getChildOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomInfo
'''
    ...
    def _getChildOfTypeGeomProp (self, *args, **kwargs):
      '''_getChildOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def _getChildOfTypeImplementation (self, *args, **kwargs):
      '''_getChildOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Implementation
'''
    ...
    def _getChildOfTypeLook (self, *args, **kwargs):
      '''_getChildOfTypeLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Look
'''
    ...
    def _getChildOfTypeMaterialAssign (self, *args, **kwargs):
      '''_getChildOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::MaterialAssign
'''
    ...
    def _getChildOfTypeNode (self, *args, **kwargs):
      '''_getChildOfTypeNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Node
'''
    ...
    def _getChildOfTypeNodeDef (self, *args, **kwargs):
      '''_getChildOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeDef
'''
    ...
    def _getChildOfTypeNodeGraph (self, *args, **kwargs):
      '''_getChildOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeGraph
'''
    ...
    def _getChildOfTypeProperty (self, *args, **kwargs):
      '''_getChildOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Property
'''
    ...
    def _getChildOfTypePropertySet (self, *args, **kwargs):
      '''_getChildOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySet
'''
    ...
    def _getChildOfTypePropertySetAssign (self, *args, **kwargs):
      '''_getChildOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySetAssign
'''
    ...
    def _getChildOfTypeToken (self, *args, **kwargs):
      '''_getChildOfTypeToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Token
'''
    ...
    def _getChildOfTypeTypeDef (self, *args, **kwargs):
      '''_getChildOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def _getChildOfTypeVisibility (self, *args, **kwargs):
      '''_getChildOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Visibility
'''
    ...
    def _getChildrenOfTypeCollection (self, *args, **kwargs):
      '''_getChildrenOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Collection]
'''
    ...
    def _getChildrenOfTypeDocument (self, *args, **kwargs):
      '''_getChildrenOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Document]
'''
    ...
    def _getChildrenOfTypeGeomInfo (self, *args, **kwargs):
      '''_getChildrenOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::GeomInfo]
'''
    ...
    def _getChildrenOfTypeGeomProp (self, *args, **kwargs):
      '''_getChildrenOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::GeomProp]
'''
    ...
    def _getChildrenOfTypeImplementation (self, *args, **kwargs):
      '''_getChildrenOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Implementation]
'''
    ...
    def _getChildrenOfTypeLook (self, *args, **kwargs):
      '''_getChildrenOfTypeLook(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Look]
'''
    ...
    def _getChildrenOfTypeMaterialAssign (self, *args, **kwargs):
      '''_getChildrenOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::MaterialAssign]
'''
    ...
    def _getChildrenOfTypeNode (self, *args, **kwargs):
      '''_getChildrenOfTypeNode(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Node]
'''
    ...
    def _getChildrenOfTypeNodeDef (self, *args, **kwargs):
      '''_getChildrenOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::NodeDef]
'''
    ...
    def _getChildrenOfTypeNodeGraph (self, *args, **kwargs):
      '''_getChildrenOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::NodeGraph]
'''
    ...
    def _getChildrenOfTypeProperty (self, *args, **kwargs):
      '''_getChildrenOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Property]
'''
    ...
    def _getChildrenOfTypePropertySet (self, *args, **kwargs):
      '''_getChildrenOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::PropertySet]
'''
    ...
    def _getChildrenOfTypePropertySetAssign (self, *args, **kwargs):
      '''_getChildrenOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::PropertySetAssign]
'''
    ...
    def _getChildrenOfTypeToken (self, *args, **kwargs):
      '''_getChildrenOfTypeToken(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Token]
'''
    ...
    def _getChildrenOfTypeTypeDef (self, *args, **kwargs):
      '''_getChildrenOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::TypeDef]
'''
    ...
    def _getChildrenOfTypeVisibility (self, *args, **kwargs):
      '''_getChildrenOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Visibility]
'''
    ...
    def _removeChildOfTypeCollection (self, *args, **kwargs):
      '''_removeChildOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeDocument (self, *args, **kwargs):
      '''_removeChildOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeGeomInfo (self, *args, **kwargs):
      '''_removeChildOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeGeomProp (self, *args, **kwargs):
      '''_removeChildOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeImplementation (self, *args, **kwargs):
      '''_removeChildOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeLook (self, *args, **kwargs):
      '''_removeChildOfTypeLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeMaterialAssign (self, *args, **kwargs):
      '''_removeChildOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNode (self, *args, **kwargs):
      '''_removeChildOfTypeNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNodeDef (self, *args, **kwargs):
      '''_removeChildOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNodeGraph (self, *args, **kwargs):
      '''_removeChildOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeProperty (self, *args, **kwargs):
      '''_removeChildOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypePropertySet (self, *args, **kwargs):
      '''_removeChildOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypePropertySetAssign (self, *args, **kwargs):
      '''_removeChildOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeToken (self, *args, **kwargs):
      '''_removeChildOfTypeToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeTypeDef (self, *args, **kwargs):
      '''_removeChildOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeVisibility (self, *args, **kwargs):
      '''_removeChildOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def addChild (self, elementClass, name, typeString=''):
      '''Add a child element of the given subclass, name, and optional type string.'''
    ...
    def addChildOfCategory (self, *args, **kwargs):
      '''addChildOfCategory(self: MaterialX.PyMaterialXCore.Element, category: str, name: str = '') -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def asString (self, *args, **kwargs):
      '''asString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def changeChildCategory (self, *args, **kwargs):
      '''changeChildCategory(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element, arg1: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def clearContent (self, *args, **kwargs):
      '''clearContent(self: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def copyContentFrom (self, *args, **kwargs):
      '''copyContentFrom(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def createStringResolver (self, *args, **kwargs):
      '''createStringResolver(self: MaterialX.PyMaterialXCore.Element, geom: str = '') -> MaterialX_v1_38_8::StringResolver
'''
    ...
    def createValidChildName (self, *args, **kwargs):
      '''createValidChildName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getActiveColorSpace (self, *args, **kwargs):
      '''getActiveColorSpace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveFilePrefix (self, *args, **kwargs):
      '''getActiveFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveGeomPrefix (self, *args, **kwargs):
      '''getActiveGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveSourceUri (self, *args, **kwargs):
      '''getActiveSourceUri(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getAttribute (self, *args, **kwargs):
      '''getAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getAttributeNames (self, *args, **kwargs):
      '''getAttributeNames(self: MaterialX.PyMaterialXCore.Element) -> List[str]
'''
    ...
    def getCategory (self, *args, **kwargs):
      '''getCategory(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getChild (self, name):
      '''Return the child element, if any, with the given name.'''
    ...
    def getChildIndex (self, *args, **kwargs):
      '''getChildIndex(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> int
'''
    ...
    def getChildOfType (self, elementClass, name):
      '''Return the child element, if any, with the given name and subclass.'''
    ...
    def getChildren (self, *args, **kwargs):
      '''getChildren(self: MaterialX.PyMaterialXCore.Element) -> List[MaterialX.PyMaterialXCore.Element]
'''
    ...
    def getChildrenOfType (self, elementClass):
      '''Return a list of all child elements that are instances of the given type.
       The returned list maintains the order in which children were added.'''
    ...
    def getColorSpace (self, *args, **kwargs):
      '''getColorSpace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getDescendant (self, *args, **kwargs):
      '''getDescendant(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getDocString (self, *args, **kwargs):
      '''getDocString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getDocument (self, *args, **kwargs):
      '''getDocument(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::Document
'''
    ...
    def getFilePrefix (self, *args, **kwargs):
      '''getFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getGeomPrefix (self, *args, **kwargs):
      '''getGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getInheritString (self, *args, **kwargs):
      '''getInheritString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getInheritsFrom (self, *args, **kwargs):
      '''getInheritsFrom(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getName (self, *args, **kwargs):
      '''getName(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getNamePath (self, *args, **kwargs):
      '''getNamePath(self: MaterialX.PyMaterialXCore.Element, relativeTo: MaterialX.PyMaterialXCore.Element = None) -> str
'''
    ...
    def getNamespace (self, *args, **kwargs):
      '''getNamespace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getParent (self, *args, **kwargs):
      '''getParent(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getQualifiedName (self, *args, **kwargs):
      '''getQualifiedName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getRoot (self, *args, **kwargs):
      '''getRoot(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getSelf (self, *args, **kwargs):
      '''getSelf(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getSourceUri (self, *args, **kwargs):
      '''getSourceUri(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getUnitDefs (self, *args, **kwargs):
      '''getUnitDefs(self: MaterialX.PyMaterialXCore.UnitTypeDef) -> List[MaterialX.PyMaterialXCore.UnitDef]
'''
    ...
    def getUpstreamEdge (self, *args, **kwargs):
      '''getUpstreamEdge(self: MaterialX.PyMaterialXCore.Element, index: int = 0) -> MaterialX_v1_38_8::Edge
'''
    ...
    def getUpstreamEdgeCount (self, *args, **kwargs):
      '''getUpstreamEdgeCount(self: MaterialX.PyMaterialXCore.Element) -> int
'''
    ...
    def getUpstreamElement (self, *args, **kwargs):
      '''getUpstreamElement(self: MaterialX.PyMaterialXCore.Element, index: int = 0) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def hasAttribute (self, *args, **kwargs):
      '''hasAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> bool
'''
    ...
    def hasColorSpace (self, *args, **kwargs):
      '''hasColorSpace(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasFilePrefix (self, *args, **kwargs):
      '''hasFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasGeomPrefix (self, *args, **kwargs):
      '''hasGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritString (self, *args, **kwargs):
      '''hasInheritString(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritanceCycle (self, *args, **kwargs):
      '''hasInheritanceCycle(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritedBase (self, *args, **kwargs):
      '''hasInheritedBase(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasNamespace (self, *args, **kwargs):
      '''hasNamespace(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasSourceUri (self, *args, **kwargs):
      '''hasSourceUri(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def isA (self, elementClass, category=''):
      '''Return True if this element is an instance of the given subclass.
       If a category string is specified, then both subclass and category
       matches are required.'''
    ...
    def removeAttribute (self, *args, **kwargs):
      '''removeAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def removeChild (self, *args, **kwargs):
      '''removeChild(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def removeChildOfType (self, elementClass, name):
      '''Remove the typed child element, if any, with the given name.'''
    ...
    def setAttribute (self, *args, **kwargs):
      '''setAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str, arg1: str) -> None
'''
    ...
    def setCategory (self, *args, **kwargs):
      '''setCategory(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setChildIndex (self, *args, **kwargs):
      '''setChildIndex(self: MaterialX.PyMaterialXCore.Element, arg0: str, arg1: int) -> None
'''
    ...
    def setColorSpace (self, *args, **kwargs):
      '''setColorSpace(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setDocString (self, *args, **kwargs):
      '''setDocString(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setFilePrefix (self, *args, **kwargs):
      '''setFilePrefix(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setGeomPrefix (self, *args, **kwargs):
      '''setGeomPrefix(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setInheritString (self, *args, **kwargs):
      '''setInheritString(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setInheritsFrom (self, *args, **kwargs):
      '''setInheritsFrom(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def setName (self, *args, **kwargs):
      '''setName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setNamespace (self, *args, **kwargs):
      '''setNamespace(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setSourceUri (self, *args, **kwargs):
      '''setSourceUri(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def traverseGraph (self, *args, **kwargs):
      '''traverseGraph(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::GraphIterator
'''
    ...
    def traverseInheritance (self, *args, **kwargs):
      '''traverseInheritance(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::InheritanceIterator
'''
    ...
    def traverseTree (self, *args, **kwargs):
      '''traverseTree(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::TreeIterator
'''
    ...
    def validate (self, *args, **kwargs):
      '''validate(self: MaterialX.PyMaterialXCore.Element) -> Tuple[bool, str]
'''
    ...

def VALUE_STRING_FALSE (*args):
      '''

'''      
    ...

def VALUE_STRING_TRUE (*args):
      '''

'''      
    ...

def VDF_TYPE_STRING (*args):
      '''

'''      
    ...

def VOLUME_MATERIAL_NODE_STRING (*args):
      '''

'''      
    ...

def VOLUME_SHADER_TYPE_STRING (*args):
      '''

'''      
    ...

def Value (*args):
      '''

'''      
    ...

class Value:
    def createValueFromStrings (self, *args, **kwargs):
      '''createValueFromStrings(arg0: str, arg1: str) -> MaterialX.PyMaterialXCore.Value
'''
    ...
    def getTypeString (self, *args, **kwargs):
      '''getTypeString(self: MaterialX.PyMaterialXCore.Value) -> str
'''
    ...
    def getValueString (self, *args, **kwargs):
      '''getValueString(self: MaterialX.PyMaterialXCore.Value) -> str
'''
    ...

def ValueElement (*args):
      '''

'''      
    ...

class ValueElement:
    def ENUM_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def ENUM_VALUES_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def IMPLEMENTATION_NAME_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def IMPLEMENTATION_TYPE_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def INTERFACE_NAME_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def TYPE_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def UI_ADVANCED_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def UI_FOLDER_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def UI_MAX_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def UI_MIN_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def UI_NAME_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def UI_SOFT_MAX_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def UI_SOFT_MIN_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def UI_STEP_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def UNIT_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def VALUE_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def _addChildCollection (self, *args, **kwargs):
      '''_addChildCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Collection
'''
    ...
    def _addChildDocument (self, *args, **kwargs):
      '''_addChildDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Document
'''
    ...
    def _addChildGeomInfo (self, *args, **kwargs):
      '''_addChildGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomInfo
'''
    ...
    def _addChildGeomProp (self, *args, **kwargs):
      '''_addChildGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def _addChildImplementation (self, *args, **kwargs):
      '''_addChildImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Implementation
'''
    ...
    def _addChildLook (self, *args, **kwargs):
      '''_addChildLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Look
'''
    ...
    def _addChildMaterialAssign (self, *args, **kwargs):
      '''_addChildMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::MaterialAssign
'''
    ...
    def _addChildNode (self, *args, **kwargs):
      '''_addChildNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Node
'''
    ...
    def _addChildNodeDef (self, *args, **kwargs):
      '''_addChildNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeDef
'''
    ...
    def _addChildNodeGraph (self, *args, **kwargs):
      '''_addChildNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeGraph
'''
    ...
    def _addChildProperty (self, *args, **kwargs):
      '''_addChildProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Property
'''
    ...
    def _addChildPropertySet (self, *args, **kwargs):
      '''_addChildPropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySet
'''
    ...
    def _addChildPropertySetAssign (self, *args, **kwargs):
      '''_addChildPropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySetAssign
'''
    ...
    def _addChildToken (self, *args, **kwargs):
      '''_addChildToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Token
'''
    ...
    def _addChildTypeDef (self, *args, **kwargs):
      '''_addChildTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def _addChildVisibility (self, *args, **kwargs):
      '''_addChildVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Visibility
'''
    ...
    def _getChild (self, *args, **kwargs):
      '''_getChild(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def _getChildOfTypeCollection (self, *args, **kwargs):
      '''_getChildOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Collection
'''
    ...
    def _getChildOfTypeDocument (self, *args, **kwargs):
      '''_getChildOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Document
'''
    ...
    def _getChildOfTypeGeomInfo (self, *args, **kwargs):
      '''_getChildOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomInfo
'''
    ...
    def _getChildOfTypeGeomProp (self, *args, **kwargs):
      '''_getChildOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def _getChildOfTypeImplementation (self, *args, **kwargs):
      '''_getChildOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Implementation
'''
    ...
    def _getChildOfTypeLook (self, *args, **kwargs):
      '''_getChildOfTypeLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Look
'''
    ...
    def _getChildOfTypeMaterialAssign (self, *args, **kwargs):
      '''_getChildOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::MaterialAssign
'''
    ...
    def _getChildOfTypeNode (self, *args, **kwargs):
      '''_getChildOfTypeNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Node
'''
    ...
    def _getChildOfTypeNodeDef (self, *args, **kwargs):
      '''_getChildOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeDef
'''
    ...
    def _getChildOfTypeNodeGraph (self, *args, **kwargs):
      '''_getChildOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeGraph
'''
    ...
    def _getChildOfTypeProperty (self, *args, **kwargs):
      '''_getChildOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Property
'''
    ...
    def _getChildOfTypePropertySet (self, *args, **kwargs):
      '''_getChildOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySet
'''
    ...
    def _getChildOfTypePropertySetAssign (self, *args, **kwargs):
      '''_getChildOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySetAssign
'''
    ...
    def _getChildOfTypeToken (self, *args, **kwargs):
      '''_getChildOfTypeToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Token
'''
    ...
    def _getChildOfTypeTypeDef (self, *args, **kwargs):
      '''_getChildOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def _getChildOfTypeVisibility (self, *args, **kwargs):
      '''_getChildOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Visibility
'''
    ...
    def _getChildrenOfTypeCollection (self, *args, **kwargs):
      '''_getChildrenOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Collection]
'''
    ...
    def _getChildrenOfTypeDocument (self, *args, **kwargs):
      '''_getChildrenOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Document]
'''
    ...
    def _getChildrenOfTypeGeomInfo (self, *args, **kwargs):
      '''_getChildrenOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::GeomInfo]
'''
    ...
    def _getChildrenOfTypeGeomProp (self, *args, **kwargs):
      '''_getChildrenOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::GeomProp]
'''
    ...
    def _getChildrenOfTypeImplementation (self, *args, **kwargs):
      '''_getChildrenOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Implementation]
'''
    ...
    def _getChildrenOfTypeLook (self, *args, **kwargs):
      '''_getChildrenOfTypeLook(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Look]
'''
    ...
    def _getChildrenOfTypeMaterialAssign (self, *args, **kwargs):
      '''_getChildrenOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::MaterialAssign]
'''
    ...
    def _getChildrenOfTypeNode (self, *args, **kwargs):
      '''_getChildrenOfTypeNode(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Node]
'''
    ...
    def _getChildrenOfTypeNodeDef (self, *args, **kwargs):
      '''_getChildrenOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::NodeDef]
'''
    ...
    def _getChildrenOfTypeNodeGraph (self, *args, **kwargs):
      '''_getChildrenOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::NodeGraph]
'''
    ...
    def _getChildrenOfTypeProperty (self, *args, **kwargs):
      '''_getChildrenOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Property]
'''
    ...
    def _getChildrenOfTypePropertySet (self, *args, **kwargs):
      '''_getChildrenOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::PropertySet]
'''
    ...
    def _getChildrenOfTypePropertySetAssign (self, *args, **kwargs):
      '''_getChildrenOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::PropertySetAssign]
'''
    ...
    def _getChildrenOfTypeToken (self, *args, **kwargs):
      '''_getChildrenOfTypeToken(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Token]
'''
    ...
    def _getChildrenOfTypeTypeDef (self, *args, **kwargs):
      '''_getChildrenOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::TypeDef]
'''
    ...
    def _getChildrenOfTypeVisibility (self, *args, **kwargs):
      '''_getChildrenOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Visibility]
'''
    ...
    def _getDefaultValue (self, *args, **kwargs):
      '''_getDefaultValue(self: MaterialX.PyMaterialXCore.ValueElement) -> MaterialX_v1_38_8::Value
'''
    ...
    def _getValue (self, *args, **kwargs):
      '''_getValue(self: MaterialX.PyMaterialXCore.ValueElement) -> MaterialX_v1_38_8::Value
'''
    ...
    def _removeChildOfTypeCollection (self, *args, **kwargs):
      '''_removeChildOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeDocument (self, *args, **kwargs):
      '''_removeChildOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeGeomInfo (self, *args, **kwargs):
      '''_removeChildOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeGeomProp (self, *args, **kwargs):
      '''_removeChildOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeImplementation (self, *args, **kwargs):
      '''_removeChildOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeLook (self, *args, **kwargs):
      '''_removeChildOfTypeLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeMaterialAssign (self, *args, **kwargs):
      '''_removeChildOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNode (self, *args, **kwargs):
      '''_removeChildOfTypeNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNodeDef (self, *args, **kwargs):
      '''_removeChildOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNodeGraph (self, *args, **kwargs):
      '''_removeChildOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeProperty (self, *args, **kwargs):
      '''_removeChildOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypePropertySet (self, *args, **kwargs):
      '''_removeChildOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypePropertySetAssign (self, *args, **kwargs):
      '''_removeChildOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeToken (self, *args, **kwargs):
      '''_removeChildOfTypeToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeTypeDef (self, *args, **kwargs):
      '''_removeChildOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeVisibility (self, *args, **kwargs):
      '''_removeChildOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _setValueboolean (self, *args, **kwargs):
      '''_setValueboolean(self: MaterialX.PyMaterialXCore.ValueElement, value: bool, type: str = '') -> None
'''
    ...
    def _setValuebooleanarray (self, *args, **kwargs):
      '''_setValuebooleanarray(self: MaterialX.PyMaterialXCore.ValueElement, value: List[bool], type: str = '') -> None
'''
    ...
    def _setValuecolor3 (self, *args, **kwargs):
      '''_setValuecolor3(self: MaterialX.PyMaterialXCore.ValueElement, value: MaterialX_v1_38_8::Color3, type: str = '') -> None
'''
    ...
    def _setValuecolor4 (self, *args, **kwargs):
      '''_setValuecolor4(self: MaterialX.PyMaterialXCore.ValueElement, value: MaterialX_v1_38_8::Color4, type: str = '') -> None
'''
    ...
    def _setValuefloat (self, *args, **kwargs):
      '''_setValuefloat(self: MaterialX.PyMaterialXCore.ValueElement, value: float, type: str = '') -> None
'''
    ...
    def _setValuefloatarray (self, *args, **kwargs):
      '''_setValuefloatarray(self: MaterialX.PyMaterialXCore.ValueElement, value: List[float], type: str = '') -> None
'''
    ...
    def _setValueinteger (self, *args, **kwargs):
      '''_setValueinteger(self: MaterialX.PyMaterialXCore.ValueElement, value: int, type: str = '') -> None
'''
    ...
    def _setValueintegerarray (self, *args, **kwargs):
      '''_setValueintegerarray(self: MaterialX.PyMaterialXCore.ValueElement, value: List[int], type: str = '') -> None
'''
    ...
    def _setValuematrix33 (self, *args, **kwargs):
      '''_setValuematrix33(self: MaterialX.PyMaterialXCore.ValueElement, value: MaterialX_v1_38_8::Matrix33, type: str = '') -> None
'''
    ...
    def _setValuematrix44 (self, *args, **kwargs):
      '''_setValuematrix44(self: MaterialX.PyMaterialXCore.ValueElement, value: MaterialX_v1_38_8::Matrix44, type: str = '') -> None
'''
    ...
    def _setValuestring (self, *args, **kwargs):
      '''_setValuestring(self: MaterialX.PyMaterialXCore.ValueElement, value: str, type: str = '') -> None
'''
    ...
    def _setValuestringarray (self, *args, **kwargs):
      '''_setValuestringarray(self: MaterialX.PyMaterialXCore.ValueElement, value: List[str], type: str = '') -> None
'''
    ...
    def _setValuevector2 (self, *args, **kwargs):
      '''_setValuevector2(self: MaterialX.PyMaterialXCore.ValueElement, value: MaterialX_v1_38_8::Vector2, type: str = '') -> None
'''
    ...
    def _setValuevector3 (self, *args, **kwargs):
      '''_setValuevector3(self: MaterialX.PyMaterialXCore.ValueElement, value: MaterialX_v1_38_8::Vector3, type: str = '') -> None
'''
    ...
    def _setValuevector4 (self, *args, **kwargs):
      '''_setValuevector4(self: MaterialX.PyMaterialXCore.ValueElement, value: MaterialX_v1_38_8::Vector4, type: str = '') -> None
'''
    ...
    def addChild (self, elementClass, name, typeString=''):
      '''Add a child element of the given subclass, name, and optional type string.'''
    ...
    def addChildOfCategory (self, *args, **kwargs):
      '''addChildOfCategory(self: MaterialX.PyMaterialXCore.Element, category: str, name: str = '') -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def asString (self, *args, **kwargs):
      '''asString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def changeChildCategory (self, *args, **kwargs):
      '''changeChildCategory(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element, arg1: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def clearContent (self, *args, **kwargs):
      '''clearContent(self: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def copyContentFrom (self, *args, **kwargs):
      '''copyContentFrom(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def createStringResolver (self, *args, **kwargs):
      '''createStringResolver(self: MaterialX.PyMaterialXCore.Element, geom: str = '') -> MaterialX_v1_38_8::StringResolver
'''
    ...
    def createValidChildName (self, *args, **kwargs):
      '''createValidChildName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getActiveColorSpace (self, *args, **kwargs):
      '''getActiveColorSpace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveFilePrefix (self, *args, **kwargs):
      '''getActiveFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveGeomPrefix (self, *args, **kwargs):
      '''getActiveGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveSourceUri (self, *args, **kwargs):
      '''getActiveSourceUri(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveUnit (self, *args, **kwargs):
      '''getActiveUnit(self: MaterialX.PyMaterialXCore.ValueElement) -> str
'''
    ...
    def getAttribute (self, *args, **kwargs):
      '''getAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getAttributeNames (self, *args, **kwargs):
      '''getAttributeNames(self: MaterialX.PyMaterialXCore.Element) -> List[str]
'''
    ...
    def getCategory (self, *args, **kwargs):
      '''getCategory(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getChild (self, name):
      '''Return the child element, if any, with the given name.'''
    ...
    def getChildIndex (self, *args, **kwargs):
      '''getChildIndex(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> int
'''
    ...
    def getChildOfType (self, elementClass, name):
      '''Return the child element, if any, with the given name and subclass.'''
    ...
    def getChildren (self, *args, **kwargs):
      '''getChildren(self: MaterialX.PyMaterialXCore.Element) -> List[MaterialX.PyMaterialXCore.Element]
'''
    ...
    def getChildrenOfType (self, elementClass):
      '''Return a list of all child elements that are instances of the given type.
       The returned list maintains the order in which children were added.'''
    ...
    def getColorSpace (self, *args, **kwargs):
      '''getColorSpace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getDefaultValue (self):
      '''Return the default value for this element.'''
    ...
    def getDescendant (self, *args, **kwargs):
      '''getDescendant(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getDocString (self, *args, **kwargs):
      '''getDocString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getDocument (self, *args, **kwargs):
      '''getDocument(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::Document
'''
    ...
    def getFilePrefix (self, *args, **kwargs):
      '''getFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getGeomPrefix (self, *args, **kwargs):
      '''getGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getImplementationName (self, *args, **kwargs):
      '''getImplementationName(self: MaterialX.PyMaterialXCore.ValueElement) -> str
'''
    ...
    def getInheritString (self, *args, **kwargs):
      '''getInheritString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getInheritsFrom (self, *args, **kwargs):
      '''getInheritsFrom(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getInterfaceName (self, *args, **kwargs):
      '''getInterfaceName(self: MaterialX.PyMaterialXCore.ValueElement) -> str
'''
    ...
    def getIsUniform (self, *args, **kwargs):
      '''getIsUniform(self: MaterialX.PyMaterialXCore.ValueElement) -> bool
'''
    ...
    def getName (self, *args, **kwargs):
      '''getName(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getNamePath (self, *args, **kwargs):
      '''getNamePath(self: MaterialX.PyMaterialXCore.Element, relativeTo: MaterialX.PyMaterialXCore.Element = None) -> str
'''
    ...
    def getNamespace (self, *args, **kwargs):
      '''getNamespace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getParent (self, *args, **kwargs):
      '''getParent(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getQualifiedName (self, *args, **kwargs):
      '''getQualifiedName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getResolvedValueString (self, *args, **kwargs):
      '''getResolvedValueString(self: MaterialX.PyMaterialXCore.ValueElement, resolver: MaterialX_v1_38_8::StringResolver = None) -> str
'''
    ...
    def getRoot (self, *args, **kwargs):
      '''getRoot(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getSelf (self, *args, **kwargs):
      '''getSelf(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getSourceUri (self, *args, **kwargs):
      '''getSourceUri(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getType (self, *args, **kwargs):
      '''getType(self: MaterialX.PyMaterialXCore.TypedElement) -> str
'''
    ...
    def getTypeDef (self, *args, **kwargs):
      '''getTypeDef(self: MaterialX.PyMaterialXCore.TypedElement) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def getUnit (self, *args, **kwargs):
      '''getUnit(self: MaterialX.PyMaterialXCore.ValueElement) -> str
'''
    ...
    def getUnitType (self, *args, **kwargs):
      '''getUnitType(self: MaterialX.PyMaterialXCore.ValueElement) -> str
'''
    ...
    def getUpstreamEdge (self, *args, **kwargs):
      '''getUpstreamEdge(self: MaterialX.PyMaterialXCore.Element, index: int = 0) -> MaterialX_v1_38_8::Edge
'''
    ...
    def getUpstreamEdgeCount (self, *args, **kwargs):
      '''getUpstreamEdgeCount(self: MaterialX.PyMaterialXCore.Element) -> int
'''
    ...
    def getUpstreamElement (self, *args, **kwargs):
      '''getUpstreamElement(self: MaterialX.PyMaterialXCore.Element, index: int = 0) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getValue (self):
      '''Return the typed value of an element.'''
    ...
    def getValueString (self, *args, **kwargs):
      '''getValueString(self: MaterialX.PyMaterialXCore.ValueElement) -> str
'''
    ...
    def hasAttribute (self, *args, **kwargs):
      '''hasAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> bool
'''
    ...
    def hasColorSpace (self, *args, **kwargs):
      '''hasColorSpace(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasFilePrefix (self, *args, **kwargs):
      '''hasFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasGeomPrefix (self, *args, **kwargs):
      '''hasGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasImplementationName (self, *args, **kwargs):
      '''hasImplementationName(self: MaterialX.PyMaterialXCore.ValueElement) -> bool
'''
    ...
    def hasInheritString (self, *args, **kwargs):
      '''hasInheritString(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritanceCycle (self, *args, **kwargs):
      '''hasInheritanceCycle(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritedBase (self, *args, **kwargs):
      '''hasInheritedBase(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInterfaceName (self, *args, **kwargs):
      '''hasInterfaceName(self: MaterialX.PyMaterialXCore.ValueElement) -> bool
'''
    ...
    def hasNamespace (self, *args, **kwargs):
      '''hasNamespace(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasSourceUri (self, *args, **kwargs):
      '''hasSourceUri(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasType (self, *args, **kwargs):
      '''hasType(self: MaterialX.PyMaterialXCore.TypedElement) -> bool
'''
    ...
    def hasUnit (self, *args, **kwargs):
      '''hasUnit(self: MaterialX.PyMaterialXCore.ValueElement) -> bool
'''
    ...
    def hasUnitType (self, *args, **kwargs):
      '''hasUnitType(self: MaterialX.PyMaterialXCore.ValueElement) -> bool
'''
    ...
    def hasValueString (self, *args, **kwargs):
      '''hasValueString(self: MaterialX.PyMaterialXCore.ValueElement) -> bool
'''
    ...
    def isA (self, elementClass, category=''):
      '''Return True if this element is an instance of the given subclass.
       If a category string is specified, then both subclass and category
       matches are required.'''
    ...
    def isMultiOutputType (self, *args, **kwargs):
      '''isMultiOutputType(self: MaterialX.PyMaterialXCore.TypedElement) -> bool
'''
    ...
    def removeAttribute (self, *args, **kwargs):
      '''removeAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def removeChild (self, *args, **kwargs):
      '''removeChild(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def removeChildOfType (self, elementClass, name):
      '''Remove the typed child element, if any, with the given name.'''
    ...
    def setAttribute (self, *args, **kwargs):
      '''setAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str, arg1: str) -> None
'''
    ...
    def setCategory (self, *args, **kwargs):
      '''setCategory(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setChildIndex (self, *args, **kwargs):
      '''setChildIndex(self: MaterialX.PyMaterialXCore.Element, arg0: str, arg1: int) -> None
'''
    ...
    def setColorSpace (self, *args, **kwargs):
      '''setColorSpace(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setDocString (self, *args, **kwargs):
      '''setDocString(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setFilePrefix (self, *args, **kwargs):
      '''setFilePrefix(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setGeomPrefix (self, *args, **kwargs):
      '''setGeomPrefix(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setImplementationName (self, *args, **kwargs):
      '''setImplementationName(self: MaterialX.PyMaterialXCore.ValueElement, arg0: str) -> None
'''
    ...
    def setInheritString (self, *args, **kwargs):
      '''setInheritString(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setInheritsFrom (self, *args, **kwargs):
      '''setInheritsFrom(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def setInterfaceName (self, *args, **kwargs):
      '''setInterfaceName(self: MaterialX.PyMaterialXCore.ValueElement, arg0: str) -> None
'''
    ...
    def setIsUniform (self, *args, **kwargs):
      '''setIsUniform(self: MaterialX.PyMaterialXCore.ValueElement, arg0: bool) -> None
'''
    ...
    def setName (self, *args, **kwargs):
      '''setName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setNamespace (self, *args, **kwargs):
      '''setNamespace(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setSourceUri (self, *args, **kwargs):
      '''setSourceUri(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setType (self, *args, **kwargs):
      '''setType(self: MaterialX.PyMaterialXCore.TypedElement, arg0: str) -> None
'''
    ...
    def setUnit (self, *args, **kwargs):
      '''setUnit(self: MaterialX.PyMaterialXCore.ValueElement, arg0: str) -> None
'''
    ...
    def setUnitType (self, *args, **kwargs):
      '''setUnitType(self: MaterialX.PyMaterialXCore.ValueElement, arg0: str) -> None
'''
    ...
    def setValue (self, value, typeString=''):
      '''Set the typed value of an element.'''
    ...
    def setValueString (self, *args, **kwargs):
      '''setValueString(self: MaterialX.PyMaterialXCore.ValueElement, arg0: str) -> None
'''
    ...
    def traverseGraph (self, *args, **kwargs):
      '''traverseGraph(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::GraphIterator
'''
    ...
    def traverseInheritance (self, *args, **kwargs):
      '''traverseInheritance(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::InheritanceIterator
'''
    ...
    def traverseTree (self, *args, **kwargs):
      '''traverseTree(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::TreeIterator
'''
    ...
    def validate (self, *args, **kwargs):
      '''validate(self: MaterialX.PyMaterialXCore.Element) -> Tuple[bool, str]
'''
    ...

def Variant (*args):
      '''

'''      
    ...

class Variant:
    def CATEGORY (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def NODE_DEF_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def TYPE_ATTRIBUTE (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def _addChildCollection (self, *args, **kwargs):
      '''_addChildCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Collection
'''
    ...
    def _addChildDocument (self, *args, **kwargs):
      '''_addChildDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Document
'''
    ...
    def _addChildGeomInfo (self, *args, **kwargs):
      '''_addChildGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomInfo
'''
    ...
    def _addChildGeomProp (self, *args, **kwargs):
      '''_addChildGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def _addChildImplementation (self, *args, **kwargs):
      '''_addChildImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Implementation
'''
    ...
    def _addChildLook (self, *args, **kwargs):
      '''_addChildLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Look
'''
    ...
    def _addChildMaterialAssign (self, *args, **kwargs):
      '''_addChildMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::MaterialAssign
'''
    ...
    def _addChildNode (self, *args, **kwargs):
      '''_addChildNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Node
'''
    ...
    def _addChildNodeDef (self, *args, **kwargs):
      '''_addChildNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeDef
'''
    ...
    def _addChildNodeGraph (self, *args, **kwargs):
      '''_addChildNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeGraph
'''
    ...
    def _addChildProperty (self, *args, **kwargs):
      '''_addChildProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Property
'''
    ...
    def _addChildPropertySet (self, *args, **kwargs):
      '''_addChildPropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySet
'''
    ...
    def _addChildPropertySetAssign (self, *args, **kwargs):
      '''_addChildPropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySetAssign
'''
    ...
    def _addChildToken (self, *args, **kwargs):
      '''_addChildToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Token
'''
    ...
    def _addChildTypeDef (self, *args, **kwargs):
      '''_addChildTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def _addChildVisibility (self, *args, **kwargs):
      '''_addChildVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Visibility
'''
    ...
    def _getChild (self, *args, **kwargs):
      '''_getChild(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def _getChildOfTypeCollection (self, *args, **kwargs):
      '''_getChildOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Collection
'''
    ...
    def _getChildOfTypeDocument (self, *args, **kwargs):
      '''_getChildOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Document
'''
    ...
    def _getChildOfTypeGeomInfo (self, *args, **kwargs):
      '''_getChildOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomInfo
'''
    ...
    def _getChildOfTypeGeomProp (self, *args, **kwargs):
      '''_getChildOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def _getChildOfTypeImplementation (self, *args, **kwargs):
      '''_getChildOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Implementation
'''
    ...
    def _getChildOfTypeLook (self, *args, **kwargs):
      '''_getChildOfTypeLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Look
'''
    ...
    def _getChildOfTypeMaterialAssign (self, *args, **kwargs):
      '''_getChildOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::MaterialAssign
'''
    ...
    def _getChildOfTypeNode (self, *args, **kwargs):
      '''_getChildOfTypeNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Node
'''
    ...
    def _getChildOfTypeNodeDef (self, *args, **kwargs):
      '''_getChildOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeDef
'''
    ...
    def _getChildOfTypeNodeGraph (self, *args, **kwargs):
      '''_getChildOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeGraph
'''
    ...
    def _getChildOfTypeProperty (self, *args, **kwargs):
      '''_getChildOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Property
'''
    ...
    def _getChildOfTypePropertySet (self, *args, **kwargs):
      '''_getChildOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySet
'''
    ...
    def _getChildOfTypePropertySetAssign (self, *args, **kwargs):
      '''_getChildOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySetAssign
'''
    ...
    def _getChildOfTypeToken (self, *args, **kwargs):
      '''_getChildOfTypeToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Token
'''
    ...
    def _getChildOfTypeTypeDef (self, *args, **kwargs):
      '''_getChildOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def _getChildOfTypeVisibility (self, *args, **kwargs):
      '''_getChildOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Visibility
'''
    ...
    def _getChildrenOfTypeCollection (self, *args, **kwargs):
      '''_getChildrenOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Collection]
'''
    ...
    def _getChildrenOfTypeDocument (self, *args, **kwargs):
      '''_getChildrenOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Document]
'''
    ...
    def _getChildrenOfTypeGeomInfo (self, *args, **kwargs):
      '''_getChildrenOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::GeomInfo]
'''
    ...
    def _getChildrenOfTypeGeomProp (self, *args, **kwargs):
      '''_getChildrenOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::GeomProp]
'''
    ...
    def _getChildrenOfTypeImplementation (self, *args, **kwargs):
      '''_getChildrenOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Implementation]
'''
    ...
    def _getChildrenOfTypeLook (self, *args, **kwargs):
      '''_getChildrenOfTypeLook(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Look]
'''
    ...
    def _getChildrenOfTypeMaterialAssign (self, *args, **kwargs):
      '''_getChildrenOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::MaterialAssign]
'''
    ...
    def _getChildrenOfTypeNode (self, *args, **kwargs):
      '''_getChildrenOfTypeNode(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Node]
'''
    ...
    def _getChildrenOfTypeNodeDef (self, *args, **kwargs):
      '''_getChildrenOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::NodeDef]
'''
    ...
    def _getChildrenOfTypeNodeGraph (self, *args, **kwargs):
      '''_getChildrenOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::NodeGraph]
'''
    ...
    def _getChildrenOfTypeProperty (self, *args, **kwargs):
      '''_getChildrenOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Property]
'''
    ...
    def _getChildrenOfTypePropertySet (self, *args, **kwargs):
      '''_getChildrenOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::PropertySet]
'''
    ...
    def _getChildrenOfTypePropertySetAssign (self, *args, **kwargs):
      '''_getChildrenOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::PropertySetAssign]
'''
    ...
    def _getChildrenOfTypeToken (self, *args, **kwargs):
      '''_getChildrenOfTypeToken(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Token]
'''
    ...
    def _getChildrenOfTypeTypeDef (self, *args, **kwargs):
      '''_getChildrenOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::TypeDef]
'''
    ...
    def _getChildrenOfTypeVisibility (self, *args, **kwargs):
      '''_getChildrenOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Visibility]
'''
    ...
    def _getInputValue (self, *args, **kwargs):
      '''_getInputValue(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str, arg1: str) -> MaterialX_v1_38_8::Value
'''
    ...
    def _removeChildOfTypeCollection (self, *args, **kwargs):
      '''_removeChildOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeDocument (self, *args, **kwargs):
      '''_removeChildOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeGeomInfo (self, *args, **kwargs):
      '''_removeChildOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeGeomProp (self, *args, **kwargs):
      '''_removeChildOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeImplementation (self, *args, **kwargs):
      '''_removeChildOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeLook (self, *args, **kwargs):
      '''_removeChildOfTypeLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeMaterialAssign (self, *args, **kwargs):
      '''_removeChildOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNode (self, *args, **kwargs):
      '''_removeChildOfTypeNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNodeDef (self, *args, **kwargs):
      '''_removeChildOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNodeGraph (self, *args, **kwargs):
      '''_removeChildOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeProperty (self, *args, **kwargs):
      '''_removeChildOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypePropertySet (self, *args, **kwargs):
      '''_removeChildOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypePropertySetAssign (self, *args, **kwargs):
      '''_removeChildOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeToken (self, *args, **kwargs):
      '''_removeChildOfTypeToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeTypeDef (self, *args, **kwargs):
      '''_removeChildOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeVisibility (self, *args, **kwargs):
      '''_removeChildOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _setInputValueboolean (self, *args, **kwargs):
      '''_setInputValueboolean(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: bool, type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValuebooleanarray (self, *args, **kwargs):
      '''_setInputValuebooleanarray(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: List[bool], type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValuecolor3 (self, *args, **kwargs):
      '''_setInputValuecolor3(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: MaterialX_v1_38_8::Color3, type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValuecolor4 (self, *args, **kwargs):
      '''_setInputValuecolor4(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: MaterialX_v1_38_8::Color4, type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValuefloat (self, *args, **kwargs):
      '''_setInputValuefloat(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: float, type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValuefloatarray (self, *args, **kwargs):
      '''_setInputValuefloatarray(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: List[float], type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValueinteger (self, *args, **kwargs):
      '''_setInputValueinteger(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: int, type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValueintegerarray (self, *args, **kwargs):
      '''_setInputValueintegerarray(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: List[int], type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValuematrix33 (self, *args, **kwargs):
      '''_setInputValuematrix33(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: MaterialX_v1_38_8::Matrix33, type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValuematrix44 (self, *args, **kwargs):
      '''_setInputValuematrix44(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: MaterialX_v1_38_8::Matrix44, type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValuestring (self, *args, **kwargs):
      '''_setInputValuestring(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: str, type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValuestringarray (self, *args, **kwargs):
      '''_setInputValuestringarray(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: List[str], type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValuevector2 (self, *args, **kwargs):
      '''_setInputValuevector2(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: MaterialX_v1_38_8::Vector2, type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValuevector3 (self, *args, **kwargs):
      '''_setInputValuevector3(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: MaterialX_v1_38_8::Vector3, type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def _setInputValuevector4 (self, *args, **kwargs):
      '''_setInputValuevector4(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str, value: MaterialX_v1_38_8::Vector4, type: str = '') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def addBindInput (self, name, type='color3'):
      '''(Deprecated) Add a BindInput to this shader reference.'''
    ...
    def addBindParam (self, name, type='color3'):
      '''(Deprecated) Add a BindParam to this shader reference.'''
    ...
    def addChild (self, elementClass, name, typeString=''):
      '''Add a child element of the given subclass, name, and optional type string.'''
    ...
    def addChildOfCategory (self, *args, **kwargs):
      '''addChildOfCategory(self: MaterialX.PyMaterialXCore.Element, category: str, name: str = '') -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def addInput (self, *args, **kwargs):
      '''addInput(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str = '', type: str = 'color3') -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def addOutput (self, *args, **kwargs):
      '''addOutput(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str = '', type: str = 'color3') -> MaterialX.PyMaterialXCore.Output
'''
    ...
    def addParameter (self, name):
      '''(Deprecated) Add a Parameter to this interface.'''
    ...
    def addToken (self, *args, **kwargs):
      '''addToken(self: MaterialX.PyMaterialXCore.InterfaceElement, name: str = 'color3') -> MaterialX.PyMaterialXCore.Token
'''
    ...
    def asString (self, *args, **kwargs):
      '''asString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def changeChildCategory (self, *args, **kwargs):
      '''changeChildCategory(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element, arg1: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def clearContent (self, *args, **kwargs):
      '''clearContent(self: MaterialX.PyMaterialXCore.InterfaceElement) -> None
'''
    ...
    def copyContentFrom (self, *args, **kwargs):
      '''copyContentFrom(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def createStringResolver (self, *args, **kwargs):
      '''createStringResolver(self: MaterialX.PyMaterialXCore.Element, geom: str = '') -> MaterialX_v1_38_8::StringResolver
'''
    ...
    def createValidChildName (self, *args, **kwargs):
      '''createValidChildName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getActiveColorSpace (self, *args, **kwargs):
      '''getActiveColorSpace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveFilePrefix (self, *args, **kwargs):
      '''getActiveFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveGeomPrefix (self, *args, **kwargs):
      '''getActiveGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveInput (self, *args, **kwargs):
      '''getActiveInput(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def getActiveInputs (self, *args, **kwargs):
      '''getActiveInputs(self: MaterialX.PyMaterialXCore.InterfaceElement) -> List[MaterialX.PyMaterialXCore.Input]
'''
    ...
    def getActiveOutput (self, *args, **kwargs):
      '''getActiveOutput(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> MaterialX.PyMaterialXCore.Output
'''
    ...
    def getActiveOutputs (self, *args, **kwargs):
      '''getActiveOutputs(self: MaterialX.PyMaterialXCore.InterfaceElement) -> List[MaterialX.PyMaterialXCore.Output]
'''
    ...
    def getActiveParameters (self):
      '''(Deprecated) Return a vector of all parameters belonging to this interface, taking inheritance into account.'''
    ...
    def getActiveSourceUri (self, *args, **kwargs):
      '''getActiveSourceUri(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveToken (self, *args, **kwargs):
      '''getActiveToken(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> MaterialX.PyMaterialXCore.Token
'''
    ...
    def getActiveTokens (self, *args, **kwargs):
      '''getActiveTokens(self: MaterialX.PyMaterialXCore.InterfaceElement) -> List[MaterialX.PyMaterialXCore.Token]
'''
    ...
    def getActiveValueElement (self, *args, **kwargs):
      '''getActiveValueElement(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> MaterialX.PyMaterialXCore.ValueElement
'''
    ...
    def getActiveValueElements (self, *args, **kwargs):
      '''getActiveValueElements(self: MaterialX.PyMaterialXCore.InterfaceElement) -> List[MaterialX.PyMaterialXCore.ValueElement]
'''
    ...
    def getAttribute (self, *args, **kwargs):
      '''getAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getAttributeNames (self, *args, **kwargs):
      '''getAttributeNames(self: MaterialX.PyMaterialXCore.Element) -> List[str]
'''
    ...
    def getBindInputs (self):
      '''(Deprecated) Return a vector of all BindInput elements in this shader reference.'''
    ...
    def getBindParams (self):
      '''(Deprecated) Return a vector of all BindParam elements in this shader reference.'''
    ...
    def getBindTokens (self):
      '''(Deprecated) Return a vector of all BindToken elements in this shader reference.'''
    ...
    def getCategory (self, *args, **kwargs):
      '''getCategory(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getChild (self, name):
      '''Return the child element, if any, with the given name.'''
    ...
    def getChildIndex (self, *args, **kwargs):
      '''getChildIndex(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> int
'''
    ...
    def getChildOfType (self, elementClass, name):
      '''Return the child element, if any, with the given name and subclass.'''
    ...
    def getChildren (self, *args, **kwargs):
      '''getChildren(self: MaterialX.PyMaterialXCore.Element) -> List[MaterialX.PyMaterialXCore.Element]
'''
    ...
    def getChildrenOfType (self, elementClass):
      '''Return a list of all child elements that are instances of the given type.
       The returned list maintains the order in which children were added.'''
    ...
    def getColorSpace (self, *args, **kwargs):
      '''getColorSpace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getConnectedOutput (self, *args, **kwargs):
      '''getConnectedOutput(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> MaterialX.PyMaterialXCore.Output
'''
    ...
    def getDeclaration (self, *args, **kwargs):
      '''getDeclaration(self: MaterialX.PyMaterialXCore.InterfaceElement, target: str = '') -> MaterialX.PyMaterialXCore.InterfaceElement
'''
    ...
    def getDefaultVersion (self, *args, **kwargs):
      '''getDefaultVersion(self: MaterialX.PyMaterialXCore.InterfaceElement) -> bool
'''
    ...
    def getDescendant (self, *args, **kwargs):
      '''getDescendant(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getDocString (self, *args, **kwargs):
      '''getDocString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getDocument (self, *args, **kwargs):
      '''getDocument(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::Document
'''
    ...
    def getFilePrefix (self, *args, **kwargs):
      '''getFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getGeomPrefix (self, *args, **kwargs):
      '''getGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getInheritString (self, *args, **kwargs):
      '''getInheritString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getInheritsFrom (self, *args, **kwargs):
      '''getInheritsFrom(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getInput (self, *args, **kwargs):
      '''getInput(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> MaterialX.PyMaterialXCore.Input
'''
    ...
    def getInputCount (self, *args, **kwargs):
      '''getInputCount(self: MaterialX.PyMaterialXCore.InterfaceElement) -> int
'''
    ...
    def getInputValue (self, name, target=''):
      '''Return the typed value of an input by its name, taking both the
       calling element and its declaration into account.  If the given
       input is not found, then None is returned.'''
    ...
    def getInputs (self, *args, **kwargs):
      '''getInputs(self: MaterialX.PyMaterialXCore.InterfaceElement) -> List[MaterialX.PyMaterialXCore.Input]
'''
    ...
    def getName (self, *args, **kwargs):
      '''getName(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getNamePath (self, *args, **kwargs):
      '''getNamePath(self: MaterialX.PyMaterialXCore.Element, relativeTo: MaterialX.PyMaterialXCore.Element = None) -> str
'''
    ...
    def getNamespace (self, *args, **kwargs):
      '''getNamespace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getNodeDefString (self, *args, **kwargs):
      '''getNodeDefString(self: MaterialX.PyMaterialXCore.InterfaceElement) -> str
'''
    ...
    def getOutput (self, *args, **kwargs):
      '''getOutput(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> MaterialX.PyMaterialXCore.Output
'''
    ...
    def getOutputCount (self, *args, **kwargs):
      '''getOutputCount(self: MaterialX.PyMaterialXCore.InterfaceElement) -> int
'''
    ...
    def getOutputs (self, *args, **kwargs):
      '''getOutputs(self: MaterialX.PyMaterialXCore.InterfaceElement) -> List[MaterialX.PyMaterialXCore.Output]
'''
    ...
    def getParameterValue (self, name, target=''):
      '''(Deprecated) Return the typed value of a parameter by its name.'''
    ...
    def getParameterValueString (self, name):
      '''(Deprecated) Return the value string of a parameter by its name.'''
    ...
    def getParameters (self):
      '''(Deprecated) Return a vector of all Parameter elements.'''
    ...
    def getParent (self, *args, **kwargs):
      '''getParent(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getQualifiedName (self, *args, **kwargs):
      '''getQualifiedName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getRoot (self, *args, **kwargs):
      '''getRoot(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getSelf (self, *args, **kwargs):
      '''getSelf(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getSourceUri (self, *args, **kwargs):
      '''getSourceUri(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getTarget (self, *args, **kwargs):
      '''getTarget(self: MaterialX.PyMaterialXCore.InterfaceElement) -> str
'''
    ...
    def getToken (self, *args, **kwargs):
      '''getToken(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> MaterialX.PyMaterialXCore.Token
'''
    ...
    def getTokenValue (self, *args, **kwargs):
      '''getTokenValue(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> str
'''
    ...
    def getTokens (self, *args, **kwargs):
      '''getTokens(self: MaterialX.PyMaterialXCore.InterfaceElement) -> List[MaterialX.PyMaterialXCore.Token]
'''
    ...
    def getType (self, *args, **kwargs):
      '''getType(self: MaterialX.PyMaterialXCore.TypedElement) -> str
'''
    ...
    def getTypeDef (self, *args, **kwargs):
      '''getTypeDef(self: MaterialX.PyMaterialXCore.TypedElement) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def getUpstreamEdge (self, *args, **kwargs):
      '''getUpstreamEdge(self: MaterialX.PyMaterialXCore.Element, index: int = 0) -> MaterialX_v1_38_8::Edge
'''
    ...
    def getUpstreamEdgeCount (self, *args, **kwargs):
      '''getUpstreamEdgeCount(self: MaterialX.PyMaterialXCore.Element) -> int
'''
    ...
    def getUpstreamElement (self, *args, **kwargs):
      '''getUpstreamElement(self: MaterialX.PyMaterialXCore.Element, index: int = 0) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getVersionIntegers (self, *args, **kwargs):
      '''getVersionIntegers(self: MaterialX.PyMaterialXCore.InterfaceElement) -> Tuple[int, int]
'''
    ...
    def getVersionString (self, *args, **kwargs):
      '''getVersionString(self: MaterialX.PyMaterialXCore.InterfaceElement) -> str
'''
    ...
    def hasAttribute (self, *args, **kwargs):
      '''hasAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> bool
'''
    ...
    def hasColorSpace (self, *args, **kwargs):
      '''hasColorSpace(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasExactInputMatch (self, *args, **kwargs):
      '''hasExactInputMatch(self: MaterialX.PyMaterialXCore.InterfaceElement, declaration: MaterialX.PyMaterialXCore.InterfaceElement, message: str = None) -> bool
'''
    ...
    def hasFilePrefix (self, *args, **kwargs):
      '''hasFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasGeomPrefix (self, *args, **kwargs):
      '''hasGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritString (self, *args, **kwargs):
      '''hasInheritString(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritanceCycle (self, *args, **kwargs):
      '''hasInheritanceCycle(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritedBase (self, *args, **kwargs):
      '''hasInheritedBase(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasNamespace (self, *args, **kwargs):
      '''hasNamespace(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasNodeDefString (self, *args, **kwargs):
      '''hasNodeDefString(self: MaterialX.PyMaterialXCore.InterfaceElement) -> bool
'''
    ...
    def hasSourceUri (self, *args, **kwargs):
      '''hasSourceUri(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasTarget (self, *args, **kwargs):
      '''hasTarget(self: MaterialX.PyMaterialXCore.InterfaceElement) -> bool
'''
    ...
    def hasType (self, *args, **kwargs):
      '''hasType(self: MaterialX.PyMaterialXCore.TypedElement) -> bool
'''
    ...
    def hasVersionString (self, *args, **kwargs):
      '''hasVersionString(self: MaterialX.PyMaterialXCore.InterfaceElement) -> bool
'''
    ...
    def isA (self, elementClass, category=''):
      '''Return True if this element is an instance of the given subclass.
       If a category string is specified, then both subclass and category
       matches are required.'''
    ...
    def isMultiOutputType (self, *args, **kwargs):
      '''isMultiOutputType(self: MaterialX.PyMaterialXCore.TypedElement) -> bool
'''
    ...
    def removeAttribute (self, *args, **kwargs):
      '''removeAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def removeChild (self, *args, **kwargs):
      '''removeChild(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def removeChildOfType (self, elementClass, name):
      '''Remove the typed child element, if any, with the given name.'''
    ...
    def removeInput (self, *args, **kwargs):
      '''removeInput(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> None
'''
    ...
    def removeOutput (self, *args, **kwargs):
      '''removeOutput(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> None
'''
    ...
    def removeToken (self, *args, **kwargs):
      '''removeToken(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> None
'''
    ...
    def setAttribute (self, *args, **kwargs):
      '''setAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str, arg1: str) -> None
'''
    ...
    def setCategory (self, *args, **kwargs):
      '''setCategory(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setChildIndex (self, *args, **kwargs):
      '''setChildIndex(self: MaterialX.PyMaterialXCore.Element, arg0: str, arg1: int) -> None
'''
    ...
    def setColorSpace (self, *args, **kwargs):
      '''setColorSpace(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setConnectedOutput (self, *args, **kwargs):
      '''setConnectedOutput(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str, arg1: MaterialX.PyMaterialXCore.Output) -> None
'''
    ...
    def setDefaultVersion (self, *args, **kwargs):
      '''setDefaultVersion(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: bool) -> None
'''
    ...
    def setDocString (self, *args, **kwargs):
      '''setDocString(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setFilePrefix (self, *args, **kwargs):
      '''setFilePrefix(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setGeomPrefix (self, *args, **kwargs):
      '''setGeomPrefix(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setInheritString (self, *args, **kwargs):
      '''setInheritString(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setInheritsFrom (self, *args, **kwargs):
      '''setInheritsFrom(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def setInputValue (self, name, value, typeString=''):
      '''Set the typed value of an input by its name, creating a child element
       to hold the input if needed.'''
    ...
    def setName (self, *args, **kwargs):
      '''setName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setNamespace (self, *args, **kwargs):
      '''setNamespace(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setNodeDefString (self, *args, **kwargs):
      '''setNodeDefString(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> None
'''
    ...
    def setParameterValue (self, name, value, typeString=''):
      '''(Deprecated) Set the typed value of a parameter by its name.'''
    ...
    def setSourceUri (self, *args, **kwargs):
      '''setSourceUri(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setTarget (self, *args, **kwargs):
      '''setTarget(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> None
'''
    ...
    def setTokenValue (self, *args, **kwargs):
      '''setTokenValue(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str, arg1: str) -> MaterialX.PyMaterialXCore.Token
'''
    ...
    def setType (self, *args, **kwargs):
      '''setType(self: MaterialX.PyMaterialXCore.TypedElement, arg0: str) -> None
'''
    ...
    def setVersionIntegers (self, *args, **kwargs):
      '''setVersionIntegers(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: int, arg1: int) -> None
'''
    ...
    def setVersionString (self, *args, **kwargs):
      '''setVersionString(self: MaterialX.PyMaterialXCore.InterfaceElement, arg0: str) -> None
'''
    ...
    def traverseGraph (self, *args, **kwargs):
      '''traverseGraph(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::GraphIterator
'''
    ...
    def traverseInheritance (self, *args, **kwargs):
      '''traverseInheritance(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::InheritanceIterator
'''
    ...
    def traverseTree (self, *args, **kwargs):
      '''traverseTree(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::TreeIterator
'''
    ...
    def validate (self, *args, **kwargs):
      '''validate(self: MaterialX.PyMaterialXCore.Element) -> Tuple[bool, str]
'''
    ...

def VariantAssign (*args):
      '''

'''      
    ...

class VariantAssign:
    def CATEGORY (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def _addChildCollection (self, *args, **kwargs):
      '''_addChildCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Collection
'''
    ...
    def _addChildDocument (self, *args, **kwargs):
      '''_addChildDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Document
'''
    ...
    def _addChildGeomInfo (self, *args, **kwargs):
      '''_addChildGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomInfo
'''
    ...
    def _addChildGeomProp (self, *args, **kwargs):
      '''_addChildGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def _addChildImplementation (self, *args, **kwargs):
      '''_addChildImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Implementation
'''
    ...
    def _addChildLook (self, *args, **kwargs):
      '''_addChildLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Look
'''
    ...
    def _addChildMaterialAssign (self, *args, **kwargs):
      '''_addChildMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::MaterialAssign
'''
    ...
    def _addChildNode (self, *args, **kwargs):
      '''_addChildNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Node
'''
    ...
    def _addChildNodeDef (self, *args, **kwargs):
      '''_addChildNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeDef
'''
    ...
    def _addChildNodeGraph (self, *args, **kwargs):
      '''_addChildNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeGraph
'''
    ...
    def _addChildProperty (self, *args, **kwargs):
      '''_addChildProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Property
'''
    ...
    def _addChildPropertySet (self, *args, **kwargs):
      '''_addChildPropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySet
'''
    ...
    def _addChildPropertySetAssign (self, *args, **kwargs):
      '''_addChildPropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySetAssign
'''
    ...
    def _addChildToken (self, *args, **kwargs):
      '''_addChildToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Token
'''
    ...
    def _addChildTypeDef (self, *args, **kwargs):
      '''_addChildTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def _addChildVisibility (self, *args, **kwargs):
      '''_addChildVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Visibility
'''
    ...
    def _getChild (self, *args, **kwargs):
      '''_getChild(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def _getChildOfTypeCollection (self, *args, **kwargs):
      '''_getChildOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Collection
'''
    ...
    def _getChildOfTypeDocument (self, *args, **kwargs):
      '''_getChildOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Document
'''
    ...
    def _getChildOfTypeGeomInfo (self, *args, **kwargs):
      '''_getChildOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomInfo
'''
    ...
    def _getChildOfTypeGeomProp (self, *args, **kwargs):
      '''_getChildOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def _getChildOfTypeImplementation (self, *args, **kwargs):
      '''_getChildOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Implementation
'''
    ...
    def _getChildOfTypeLook (self, *args, **kwargs):
      '''_getChildOfTypeLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Look
'''
    ...
    def _getChildOfTypeMaterialAssign (self, *args, **kwargs):
      '''_getChildOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::MaterialAssign
'''
    ...
    def _getChildOfTypeNode (self, *args, **kwargs):
      '''_getChildOfTypeNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Node
'''
    ...
    def _getChildOfTypeNodeDef (self, *args, **kwargs):
      '''_getChildOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeDef
'''
    ...
    def _getChildOfTypeNodeGraph (self, *args, **kwargs):
      '''_getChildOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeGraph
'''
    ...
    def _getChildOfTypeProperty (self, *args, **kwargs):
      '''_getChildOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Property
'''
    ...
    def _getChildOfTypePropertySet (self, *args, **kwargs):
      '''_getChildOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySet
'''
    ...
    def _getChildOfTypePropertySetAssign (self, *args, **kwargs):
      '''_getChildOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySetAssign
'''
    ...
    def _getChildOfTypeToken (self, *args, **kwargs):
      '''_getChildOfTypeToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Token
'''
    ...
    def _getChildOfTypeTypeDef (self, *args, **kwargs):
      '''_getChildOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def _getChildOfTypeVisibility (self, *args, **kwargs):
      '''_getChildOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Visibility
'''
    ...
    def _getChildrenOfTypeCollection (self, *args, **kwargs):
      '''_getChildrenOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Collection]
'''
    ...
    def _getChildrenOfTypeDocument (self, *args, **kwargs):
      '''_getChildrenOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Document]
'''
    ...
    def _getChildrenOfTypeGeomInfo (self, *args, **kwargs):
      '''_getChildrenOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::GeomInfo]
'''
    ...
    def _getChildrenOfTypeGeomProp (self, *args, **kwargs):
      '''_getChildrenOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::GeomProp]
'''
    ...
    def _getChildrenOfTypeImplementation (self, *args, **kwargs):
      '''_getChildrenOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Implementation]
'''
    ...
    def _getChildrenOfTypeLook (self, *args, **kwargs):
      '''_getChildrenOfTypeLook(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Look]
'''
    ...
    def _getChildrenOfTypeMaterialAssign (self, *args, **kwargs):
      '''_getChildrenOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::MaterialAssign]
'''
    ...
    def _getChildrenOfTypeNode (self, *args, **kwargs):
      '''_getChildrenOfTypeNode(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Node]
'''
    ...
    def _getChildrenOfTypeNodeDef (self, *args, **kwargs):
      '''_getChildrenOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::NodeDef]
'''
    ...
    def _getChildrenOfTypeNodeGraph (self, *args, **kwargs):
      '''_getChildrenOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::NodeGraph]
'''
    ...
    def _getChildrenOfTypeProperty (self, *args, **kwargs):
      '''_getChildrenOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Property]
'''
    ...
    def _getChildrenOfTypePropertySet (self, *args, **kwargs):
      '''_getChildrenOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::PropertySet]
'''
    ...
    def _getChildrenOfTypePropertySetAssign (self, *args, **kwargs):
      '''_getChildrenOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::PropertySetAssign]
'''
    ...
    def _getChildrenOfTypeToken (self, *args, **kwargs):
      '''_getChildrenOfTypeToken(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Token]
'''
    ...
    def _getChildrenOfTypeTypeDef (self, *args, **kwargs):
      '''_getChildrenOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::TypeDef]
'''
    ...
    def _getChildrenOfTypeVisibility (self, *args, **kwargs):
      '''_getChildrenOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Visibility]
'''
    ...
    def _removeChildOfTypeCollection (self, *args, **kwargs):
      '''_removeChildOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeDocument (self, *args, **kwargs):
      '''_removeChildOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeGeomInfo (self, *args, **kwargs):
      '''_removeChildOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeGeomProp (self, *args, **kwargs):
      '''_removeChildOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeImplementation (self, *args, **kwargs):
      '''_removeChildOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeLook (self, *args, **kwargs):
      '''_removeChildOfTypeLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeMaterialAssign (self, *args, **kwargs):
      '''_removeChildOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNode (self, *args, **kwargs):
      '''_removeChildOfTypeNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNodeDef (self, *args, **kwargs):
      '''_removeChildOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNodeGraph (self, *args, **kwargs):
      '''_removeChildOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeProperty (self, *args, **kwargs):
      '''_removeChildOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypePropertySet (self, *args, **kwargs):
      '''_removeChildOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypePropertySetAssign (self, *args, **kwargs):
      '''_removeChildOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeToken (self, *args, **kwargs):
      '''_removeChildOfTypeToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeTypeDef (self, *args, **kwargs):
      '''_removeChildOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeVisibility (self, *args, **kwargs):
      '''_removeChildOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def addChild (self, elementClass, name, typeString=''):
      '''Add a child element of the given subclass, name, and optional type string.'''
    ...
    def addChildOfCategory (self, *args, **kwargs):
      '''addChildOfCategory(self: MaterialX.PyMaterialXCore.Element, category: str, name: str = '') -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def asString (self, *args, **kwargs):
      '''asString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def changeChildCategory (self, *args, **kwargs):
      '''changeChildCategory(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element, arg1: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def clearContent (self, *args, **kwargs):
      '''clearContent(self: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def copyContentFrom (self, *args, **kwargs):
      '''copyContentFrom(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def createStringResolver (self, *args, **kwargs):
      '''createStringResolver(self: MaterialX.PyMaterialXCore.Element, geom: str = '') -> MaterialX_v1_38_8::StringResolver
'''
    ...
    def createValidChildName (self, *args, **kwargs):
      '''createValidChildName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getActiveColorSpace (self, *args, **kwargs):
      '''getActiveColorSpace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveFilePrefix (self, *args, **kwargs):
      '''getActiveFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveGeomPrefix (self, *args, **kwargs):
      '''getActiveGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveSourceUri (self, *args, **kwargs):
      '''getActiveSourceUri(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getAttribute (self, *args, **kwargs):
      '''getAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getAttributeNames (self, *args, **kwargs):
      '''getAttributeNames(self: MaterialX.PyMaterialXCore.Element) -> List[str]
'''
    ...
    def getCategory (self, *args, **kwargs):
      '''getCategory(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getChild (self, name):
      '''Return the child element, if any, with the given name.'''
    ...
    def getChildIndex (self, *args, **kwargs):
      '''getChildIndex(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> int
'''
    ...
    def getChildOfType (self, elementClass, name):
      '''Return the child element, if any, with the given name and subclass.'''
    ...
    def getChildren (self, *args, **kwargs):
      '''getChildren(self: MaterialX.PyMaterialXCore.Element) -> List[MaterialX.PyMaterialXCore.Element]
'''
    ...
    def getChildrenOfType (self, elementClass):
      '''Return a list of all child elements that are instances of the given type.
       The returned list maintains the order in which children were added.'''
    ...
    def getColorSpace (self, *args, **kwargs):
      '''getColorSpace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getDescendant (self, *args, **kwargs):
      '''getDescendant(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getDocString (self, *args, **kwargs):
      '''getDocString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getDocument (self, *args, **kwargs):
      '''getDocument(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::Document
'''
    ...
    def getFilePrefix (self, *args, **kwargs):
      '''getFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getGeomPrefix (self, *args, **kwargs):
      '''getGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getInheritString (self, *args, **kwargs):
      '''getInheritString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getInheritsFrom (self, *args, **kwargs):
      '''getInheritsFrom(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getName (self, *args, **kwargs):
      '''getName(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getNamePath (self, *args, **kwargs):
      '''getNamePath(self: MaterialX.PyMaterialXCore.Element, relativeTo: MaterialX.PyMaterialXCore.Element = None) -> str
'''
    ...
    def getNamespace (self, *args, **kwargs):
      '''getNamespace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getParent (self, *args, **kwargs):
      '''getParent(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getQualifiedName (self, *args, **kwargs):
      '''getQualifiedName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getRoot (self, *args, **kwargs):
      '''getRoot(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getSelf (self, *args, **kwargs):
      '''getSelf(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getSourceUri (self, *args, **kwargs):
      '''getSourceUri(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getUpstreamEdge (self, *args, **kwargs):
      '''getUpstreamEdge(self: MaterialX.PyMaterialXCore.Element, index: int = 0) -> MaterialX_v1_38_8::Edge
'''
    ...
    def getUpstreamEdgeCount (self, *args, **kwargs):
      '''getUpstreamEdgeCount(self: MaterialX.PyMaterialXCore.Element) -> int
'''
    ...
    def getUpstreamElement (self, *args, **kwargs):
      '''getUpstreamElement(self: MaterialX.PyMaterialXCore.Element, index: int = 0) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getVariantSetString (self, *args, **kwargs):
      '''getVariantSetString(self: MaterialX.PyMaterialXCore.VariantAssign) -> str
'''
    ...
    def getVariantString (self, *args, **kwargs):
      '''getVariantString(self: MaterialX.PyMaterialXCore.VariantAssign) -> str
'''
    ...
    def hasAttribute (self, *args, **kwargs):
      '''hasAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> bool
'''
    ...
    def hasColorSpace (self, *args, **kwargs):
      '''hasColorSpace(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasFilePrefix (self, *args, **kwargs):
      '''hasFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasGeomPrefix (self, *args, **kwargs):
      '''hasGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritString (self, *args, **kwargs):
      '''hasInheritString(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritanceCycle (self, *args, **kwargs):
      '''hasInheritanceCycle(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritedBase (self, *args, **kwargs):
      '''hasInheritedBase(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasNamespace (self, *args, **kwargs):
      '''hasNamespace(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasSourceUri (self, *args, **kwargs):
      '''hasSourceUri(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasVariantSetString (self, *args, **kwargs):
      '''hasVariantSetString(self: MaterialX.PyMaterialXCore.VariantAssign) -> bool
'''
    ...
    def hasVariantString (self, *args, **kwargs):
      '''hasVariantString(self: MaterialX.PyMaterialXCore.VariantAssign) -> bool
'''
    ...
    def isA (self, elementClass, category=''):
      '''Return True if this element is an instance of the given subclass.
       If a category string is specified, then both subclass and category
       matches are required.'''
    ...
    def removeAttribute (self, *args, **kwargs):
      '''removeAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def removeChild (self, *args, **kwargs):
      '''removeChild(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def removeChildOfType (self, elementClass, name):
      '''Remove the typed child element, if any, with the given name.'''
    ...
    def setAttribute (self, *args, **kwargs):
      '''setAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str, arg1: str) -> None
'''
    ...
    def setCategory (self, *args, **kwargs):
      '''setCategory(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setChildIndex (self, *args, **kwargs):
      '''setChildIndex(self: MaterialX.PyMaterialXCore.Element, arg0: str, arg1: int) -> None
'''
    ...
    def setColorSpace (self, *args, **kwargs):
      '''setColorSpace(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setDocString (self, *args, **kwargs):
      '''setDocString(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setFilePrefix (self, *args, **kwargs):
      '''setFilePrefix(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setGeomPrefix (self, *args, **kwargs):
      '''setGeomPrefix(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setInheritString (self, *args, **kwargs):
      '''setInheritString(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setInheritsFrom (self, *args, **kwargs):
      '''setInheritsFrom(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def setName (self, *args, **kwargs):
      '''setName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setNamespace (self, *args, **kwargs):
      '''setNamespace(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setSourceUri (self, *args, **kwargs):
      '''setSourceUri(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setVariantSetString (self, *args, **kwargs):
      '''setVariantSetString(self: MaterialX.PyMaterialXCore.VariantAssign, arg0: str) -> None
'''
    ...
    def setVariantString (self, *args, **kwargs):
      '''setVariantString(self: MaterialX.PyMaterialXCore.VariantAssign, arg0: str) -> None
'''
    ...
    def traverseGraph (self, *args, **kwargs):
      '''traverseGraph(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::GraphIterator
'''
    ...
    def traverseInheritance (self, *args, **kwargs):
      '''traverseInheritance(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::InheritanceIterator
'''
    ...
    def traverseTree (self, *args, **kwargs):
      '''traverseTree(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::TreeIterator
'''
    ...
    def validate (self, *args, **kwargs):
      '''validate(self: MaterialX.PyMaterialXCore.Element) -> Tuple[bool, str]
'''
    ...

def VariantSet (*args):
      '''

'''      
    ...

class VariantSet:
    def CATEGORY (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def _addChildCollection (self, *args, **kwargs):
      '''_addChildCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Collection
'''
    ...
    def _addChildDocument (self, *args, **kwargs):
      '''_addChildDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Document
'''
    ...
    def _addChildGeomInfo (self, *args, **kwargs):
      '''_addChildGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomInfo
'''
    ...
    def _addChildGeomProp (self, *args, **kwargs):
      '''_addChildGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def _addChildImplementation (self, *args, **kwargs):
      '''_addChildImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Implementation
'''
    ...
    def _addChildLook (self, *args, **kwargs):
      '''_addChildLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Look
'''
    ...
    def _addChildMaterialAssign (self, *args, **kwargs):
      '''_addChildMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::MaterialAssign
'''
    ...
    def _addChildNode (self, *args, **kwargs):
      '''_addChildNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Node
'''
    ...
    def _addChildNodeDef (self, *args, **kwargs):
      '''_addChildNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeDef
'''
    ...
    def _addChildNodeGraph (self, *args, **kwargs):
      '''_addChildNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeGraph
'''
    ...
    def _addChildProperty (self, *args, **kwargs):
      '''_addChildProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Property
'''
    ...
    def _addChildPropertySet (self, *args, **kwargs):
      '''_addChildPropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySet
'''
    ...
    def _addChildPropertySetAssign (self, *args, **kwargs):
      '''_addChildPropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySetAssign
'''
    ...
    def _addChildToken (self, *args, **kwargs):
      '''_addChildToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Token
'''
    ...
    def _addChildTypeDef (self, *args, **kwargs):
      '''_addChildTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def _addChildVisibility (self, *args, **kwargs):
      '''_addChildVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Visibility
'''
    ...
    def _getChild (self, *args, **kwargs):
      '''_getChild(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def _getChildOfTypeCollection (self, *args, **kwargs):
      '''_getChildOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Collection
'''
    ...
    def _getChildOfTypeDocument (self, *args, **kwargs):
      '''_getChildOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Document
'''
    ...
    def _getChildOfTypeGeomInfo (self, *args, **kwargs):
      '''_getChildOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomInfo
'''
    ...
    def _getChildOfTypeGeomProp (self, *args, **kwargs):
      '''_getChildOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def _getChildOfTypeImplementation (self, *args, **kwargs):
      '''_getChildOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Implementation
'''
    ...
    def _getChildOfTypeLook (self, *args, **kwargs):
      '''_getChildOfTypeLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Look
'''
    ...
    def _getChildOfTypeMaterialAssign (self, *args, **kwargs):
      '''_getChildOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::MaterialAssign
'''
    ...
    def _getChildOfTypeNode (self, *args, **kwargs):
      '''_getChildOfTypeNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Node
'''
    ...
    def _getChildOfTypeNodeDef (self, *args, **kwargs):
      '''_getChildOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeDef
'''
    ...
    def _getChildOfTypeNodeGraph (self, *args, **kwargs):
      '''_getChildOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeGraph
'''
    ...
    def _getChildOfTypeProperty (self, *args, **kwargs):
      '''_getChildOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Property
'''
    ...
    def _getChildOfTypePropertySet (self, *args, **kwargs):
      '''_getChildOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySet
'''
    ...
    def _getChildOfTypePropertySetAssign (self, *args, **kwargs):
      '''_getChildOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySetAssign
'''
    ...
    def _getChildOfTypeToken (self, *args, **kwargs):
      '''_getChildOfTypeToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Token
'''
    ...
    def _getChildOfTypeTypeDef (self, *args, **kwargs):
      '''_getChildOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def _getChildOfTypeVisibility (self, *args, **kwargs):
      '''_getChildOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Visibility
'''
    ...
    def _getChildrenOfTypeCollection (self, *args, **kwargs):
      '''_getChildrenOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Collection]
'''
    ...
    def _getChildrenOfTypeDocument (self, *args, **kwargs):
      '''_getChildrenOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Document]
'''
    ...
    def _getChildrenOfTypeGeomInfo (self, *args, **kwargs):
      '''_getChildrenOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::GeomInfo]
'''
    ...
    def _getChildrenOfTypeGeomProp (self, *args, **kwargs):
      '''_getChildrenOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::GeomProp]
'''
    ...
    def _getChildrenOfTypeImplementation (self, *args, **kwargs):
      '''_getChildrenOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Implementation]
'''
    ...
    def _getChildrenOfTypeLook (self, *args, **kwargs):
      '''_getChildrenOfTypeLook(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Look]
'''
    ...
    def _getChildrenOfTypeMaterialAssign (self, *args, **kwargs):
      '''_getChildrenOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::MaterialAssign]
'''
    ...
    def _getChildrenOfTypeNode (self, *args, **kwargs):
      '''_getChildrenOfTypeNode(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Node]
'''
    ...
    def _getChildrenOfTypeNodeDef (self, *args, **kwargs):
      '''_getChildrenOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::NodeDef]
'''
    ...
    def _getChildrenOfTypeNodeGraph (self, *args, **kwargs):
      '''_getChildrenOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::NodeGraph]
'''
    ...
    def _getChildrenOfTypeProperty (self, *args, **kwargs):
      '''_getChildrenOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Property]
'''
    ...
    def _getChildrenOfTypePropertySet (self, *args, **kwargs):
      '''_getChildrenOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::PropertySet]
'''
    ...
    def _getChildrenOfTypePropertySetAssign (self, *args, **kwargs):
      '''_getChildrenOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::PropertySetAssign]
'''
    ...
    def _getChildrenOfTypeToken (self, *args, **kwargs):
      '''_getChildrenOfTypeToken(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Token]
'''
    ...
    def _getChildrenOfTypeTypeDef (self, *args, **kwargs):
      '''_getChildrenOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::TypeDef]
'''
    ...
    def _getChildrenOfTypeVisibility (self, *args, **kwargs):
      '''_getChildrenOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Visibility]
'''
    ...
    def _removeChildOfTypeCollection (self, *args, **kwargs):
      '''_removeChildOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeDocument (self, *args, **kwargs):
      '''_removeChildOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeGeomInfo (self, *args, **kwargs):
      '''_removeChildOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeGeomProp (self, *args, **kwargs):
      '''_removeChildOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeImplementation (self, *args, **kwargs):
      '''_removeChildOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeLook (self, *args, **kwargs):
      '''_removeChildOfTypeLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeMaterialAssign (self, *args, **kwargs):
      '''_removeChildOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNode (self, *args, **kwargs):
      '''_removeChildOfTypeNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNodeDef (self, *args, **kwargs):
      '''_removeChildOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNodeGraph (self, *args, **kwargs):
      '''_removeChildOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeProperty (self, *args, **kwargs):
      '''_removeChildOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypePropertySet (self, *args, **kwargs):
      '''_removeChildOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypePropertySetAssign (self, *args, **kwargs):
      '''_removeChildOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeToken (self, *args, **kwargs):
      '''_removeChildOfTypeToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeTypeDef (self, *args, **kwargs):
      '''_removeChildOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeVisibility (self, *args, **kwargs):
      '''_removeChildOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def addChild (self, elementClass, name, typeString=''):
      '''Add a child element of the given subclass, name, and optional type string.'''
    ...
    def addChildOfCategory (self, *args, **kwargs):
      '''addChildOfCategory(self: MaterialX.PyMaterialXCore.Element, category: str, name: str = '') -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def addVariant (self, *args, **kwargs):
      '''addVariant(self: MaterialX.PyMaterialXCore.VariantSet, name: str = '') -> MaterialX.PyMaterialXCore.Variant
'''
    ...
    def asString (self, *args, **kwargs):
      '''asString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def changeChildCategory (self, *args, **kwargs):
      '''changeChildCategory(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element, arg1: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def clearContent (self, *args, **kwargs):
      '''clearContent(self: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def copyContentFrom (self, *args, **kwargs):
      '''copyContentFrom(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def createStringResolver (self, *args, **kwargs):
      '''createStringResolver(self: MaterialX.PyMaterialXCore.Element, geom: str = '') -> MaterialX_v1_38_8::StringResolver
'''
    ...
    def createValidChildName (self, *args, **kwargs):
      '''createValidChildName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getActiveColorSpace (self, *args, **kwargs):
      '''getActiveColorSpace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveFilePrefix (self, *args, **kwargs):
      '''getActiveFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveGeomPrefix (self, *args, **kwargs):
      '''getActiveGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveSourceUri (self, *args, **kwargs):
      '''getActiveSourceUri(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getAttribute (self, *args, **kwargs):
      '''getAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getAttributeNames (self, *args, **kwargs):
      '''getAttributeNames(self: MaterialX.PyMaterialXCore.Element) -> List[str]
'''
    ...
    def getCategory (self, *args, **kwargs):
      '''getCategory(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getChild (self, name):
      '''Return the child element, if any, with the given name.'''
    ...
    def getChildIndex (self, *args, **kwargs):
      '''getChildIndex(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> int
'''
    ...
    def getChildOfType (self, elementClass, name):
      '''Return the child element, if any, with the given name and subclass.'''
    ...
    def getChildren (self, *args, **kwargs):
      '''getChildren(self: MaterialX.PyMaterialXCore.Element) -> List[MaterialX.PyMaterialXCore.Element]
'''
    ...
    def getChildrenOfType (self, elementClass):
      '''Return a list of all child elements that are instances of the given type.
       The returned list maintains the order in which children were added.'''
    ...
    def getColorSpace (self, *args, **kwargs):
      '''getColorSpace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getDescendant (self, *args, **kwargs):
      '''getDescendant(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getDocString (self, *args, **kwargs):
      '''getDocString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getDocument (self, *args, **kwargs):
      '''getDocument(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::Document
'''
    ...
    def getFilePrefix (self, *args, **kwargs):
      '''getFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getGeomPrefix (self, *args, **kwargs):
      '''getGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getInheritString (self, *args, **kwargs):
      '''getInheritString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getInheritsFrom (self, *args, **kwargs):
      '''getInheritsFrom(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getName (self, *args, **kwargs):
      '''getName(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getNamePath (self, *args, **kwargs):
      '''getNamePath(self: MaterialX.PyMaterialXCore.Element, relativeTo: MaterialX.PyMaterialXCore.Element = None) -> str
'''
    ...
    def getNamespace (self, *args, **kwargs):
      '''getNamespace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getParent (self, *args, **kwargs):
      '''getParent(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getQualifiedName (self, *args, **kwargs):
      '''getQualifiedName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getRoot (self, *args, **kwargs):
      '''getRoot(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getSelf (self, *args, **kwargs):
      '''getSelf(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getSourceUri (self, *args, **kwargs):
      '''getSourceUri(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getUpstreamEdge (self, *args, **kwargs):
      '''getUpstreamEdge(self: MaterialX.PyMaterialXCore.Element, index: int = 0) -> MaterialX_v1_38_8::Edge
'''
    ...
    def getUpstreamEdgeCount (self, *args, **kwargs):
      '''getUpstreamEdgeCount(self: MaterialX.PyMaterialXCore.Element) -> int
'''
    ...
    def getUpstreamElement (self, *args, **kwargs):
      '''getUpstreamElement(self: MaterialX.PyMaterialXCore.Element, index: int = 0) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getVariant (self, *args, **kwargs):
      '''getVariant(self: MaterialX.PyMaterialXCore.VariantSet, arg0: str) -> MaterialX.PyMaterialXCore.Variant
'''
    ...
    def getVariants (self, *args, **kwargs):
      '''getVariants(self: MaterialX.PyMaterialXCore.VariantSet) -> List[MaterialX.PyMaterialXCore.Variant]
'''
    ...
    def hasAttribute (self, *args, **kwargs):
      '''hasAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> bool
'''
    ...
    def hasColorSpace (self, *args, **kwargs):
      '''hasColorSpace(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasFilePrefix (self, *args, **kwargs):
      '''hasFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasGeomPrefix (self, *args, **kwargs):
      '''hasGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritString (self, *args, **kwargs):
      '''hasInheritString(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritanceCycle (self, *args, **kwargs):
      '''hasInheritanceCycle(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritedBase (self, *args, **kwargs):
      '''hasInheritedBase(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasNamespace (self, *args, **kwargs):
      '''hasNamespace(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasSourceUri (self, *args, **kwargs):
      '''hasSourceUri(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def isA (self, elementClass, category=''):
      '''Return True if this element is an instance of the given subclass.
       If a category string is specified, then both subclass and category
       matches are required.'''
    ...
    def removeAttribute (self, *args, **kwargs):
      '''removeAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def removeChild (self, *args, **kwargs):
      '''removeChild(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def removeChildOfType (self, elementClass, name):
      '''Remove the typed child element, if any, with the given name.'''
    ...
    def removeVariant (self, *args, **kwargs):
      '''removeVariant(self: MaterialX.PyMaterialXCore.VariantSet, arg0: str) -> None
'''
    ...
    def setAttribute (self, *args, **kwargs):
      '''setAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str, arg1: str) -> None
'''
    ...
    def setCategory (self, *args, **kwargs):
      '''setCategory(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setChildIndex (self, *args, **kwargs):
      '''setChildIndex(self: MaterialX.PyMaterialXCore.Element, arg0: str, arg1: int) -> None
'''
    ...
    def setColorSpace (self, *args, **kwargs):
      '''setColorSpace(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setDocString (self, *args, **kwargs):
      '''setDocString(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setFilePrefix (self, *args, **kwargs):
      '''setFilePrefix(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setGeomPrefix (self, *args, **kwargs):
      '''setGeomPrefix(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setInheritString (self, *args, **kwargs):
      '''setInheritString(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setInheritsFrom (self, *args, **kwargs):
      '''setInheritsFrom(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def setName (self, *args, **kwargs):
      '''setName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setNamespace (self, *args, **kwargs):
      '''setNamespace(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setSourceUri (self, *args, **kwargs):
      '''setSourceUri(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def traverseGraph (self, *args, **kwargs):
      '''traverseGraph(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::GraphIterator
'''
    ...
    def traverseInheritance (self, *args, **kwargs):
      '''traverseInheritance(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::InheritanceIterator
'''
    ...
    def traverseTree (self, *args, **kwargs):
      '''traverseTree(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::TreeIterator
'''
    ...
    def validate (self, *args, **kwargs):
      '''validate(self: MaterialX.PyMaterialXCore.Element) -> Tuple[bool, str]
'''
    ...

def Vector2 (*args):
      '''

'''      
    ...

class Vector2:
    def asTuple (self, *args, **kwargs):
      '''asTuple(self: MaterialX.PyMaterialXCore.Vector2) -> Tuple[float, float]
'''
    ...
    def copy (self, *args, **kwargs):
      '''copy(self: MaterialX.PyMaterialXCore.Vector2) -> MaterialX.PyMaterialXCore.Vector2
'''
    ...
    def cross (self, *args, **kwargs):
      '''cross(self: MaterialX.PyMaterialXCore.Vector2, arg0: MaterialX.PyMaterialXCore.Vector2) -> float
'''
    ...
    def dot (self, *args, **kwargs):
      '''dot(self: MaterialX.PyMaterialXCore.Vector2, arg0: MaterialX.PyMaterialXCore.Vector2) -> float
'''
    ...
    def getMagnitude (self, *args, **kwargs):
      '''getMagnitude(self: MaterialX.PyMaterialXCore.Vector2) -> float
'''
    ...
    def getNormalized (self, *args, **kwargs):
      '''getNormalized(self: MaterialX.PyMaterialXCore.Vector2) -> MaterialX.PyMaterialXCore.Vector2
'''
    ...

def Vector3 (*args):
      '''

'''      
    ...

class Vector3:
    def asTuple (self, *args, **kwargs):
      '''asTuple(self: MaterialX.PyMaterialXCore.Vector3) -> Tuple[float, float, float]
'''
    ...
    def copy (self, *args, **kwargs):
      '''copy(self: MaterialX.PyMaterialXCore.Vector3) -> MaterialX.PyMaterialXCore.Vector3
'''
    ...
    def cross (self, *args, **kwargs):
      '''cross(self: MaterialX.PyMaterialXCore.Vector3, arg0: MaterialX.PyMaterialXCore.Vector3) -> MaterialX.PyMaterialXCore.Vector3
'''
    ...
    def dot (self, *args, **kwargs):
      '''dot(self: MaterialX.PyMaterialXCore.Vector3, arg0: MaterialX.PyMaterialXCore.Vector3) -> float
'''
    ...
    def getMagnitude (self, *args, **kwargs):
      '''getMagnitude(self: MaterialX.PyMaterialXCore.Vector3) -> float
'''
    ...
    def getNormalized (self, *args, **kwargs):
      '''getNormalized(self: MaterialX.PyMaterialXCore.Vector3) -> MaterialX.PyMaterialXCore.Vector3
'''
    ...

def Vector4 (*args):
      '''

'''      
    ...

class Vector4:
    def asTuple (self, *args, **kwargs):
      '''asTuple(self: MaterialX.PyMaterialXCore.Vector4) -> Tuple[float, float, float, float]
'''
    ...
    def copy (self, *args, **kwargs):
      '''copy(self: MaterialX.PyMaterialXCore.Vector4) -> MaterialX.PyMaterialXCore.Vector4
'''
    ...
    def dot (self, *args, **kwargs):
      '''dot(self: MaterialX.PyMaterialXCore.Vector4, arg0: MaterialX.PyMaterialXCore.Vector4) -> float
'''
    ...
    def getMagnitude (self, *args, **kwargs):
      '''getMagnitude(self: MaterialX.PyMaterialXCore.Vector4) -> float
'''
    ...
    def getNormalized (self, *args, **kwargs):
      '''getNormalized(self: MaterialX.PyMaterialXCore.Vector4) -> MaterialX.PyMaterialXCore.Vector4
'''
    ...

def VectorBase (*args):
      '''

'''      
    ...

class VectorBase:

def Visibility (*args):
      '''

'''      
    ...

class Visibility:
    def CATEGORY (self, *args, **kwargs):
      '''str(object='') -> str
str(bytes_or_buffer[, encoding[, errors]]) -> str

Create a new string object from the given object. If encoding or
errors is specified, then the object must expose a data buffer
that will be decoded using the given encoding and error handler.
Otherwise, returns the result of object.__str__() (if defined)
or repr(object).
encoding defaults to sys.getdefaultencoding().
errors defaults to 'strict'.'''
    ...
    def _addChildCollection (self, *args, **kwargs):
      '''_addChildCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Collection
'''
    ...
    def _addChildDocument (self, *args, **kwargs):
      '''_addChildDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Document
'''
    ...
    def _addChildGeomInfo (self, *args, **kwargs):
      '''_addChildGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomInfo
'''
    ...
    def _addChildGeomProp (self, *args, **kwargs):
      '''_addChildGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def _addChildImplementation (self, *args, **kwargs):
      '''_addChildImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Implementation
'''
    ...
    def _addChildLook (self, *args, **kwargs):
      '''_addChildLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Look
'''
    ...
    def _addChildMaterialAssign (self, *args, **kwargs):
      '''_addChildMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::MaterialAssign
'''
    ...
    def _addChildNode (self, *args, **kwargs):
      '''_addChildNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Node
'''
    ...
    def _addChildNodeDef (self, *args, **kwargs):
      '''_addChildNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeDef
'''
    ...
    def _addChildNodeGraph (self, *args, **kwargs):
      '''_addChildNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeGraph
'''
    ...
    def _addChildProperty (self, *args, **kwargs):
      '''_addChildProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Property
'''
    ...
    def _addChildPropertySet (self, *args, **kwargs):
      '''_addChildPropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySet
'''
    ...
    def _addChildPropertySetAssign (self, *args, **kwargs):
      '''_addChildPropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySetAssign
'''
    ...
    def _addChildToken (self, *args, **kwargs):
      '''_addChildToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Token
'''
    ...
    def _addChildTypeDef (self, *args, **kwargs):
      '''_addChildTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def _addChildVisibility (self, *args, **kwargs):
      '''_addChildVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Visibility
'''
    ...
    def _getChild (self, *args, **kwargs):
      '''_getChild(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def _getChildOfTypeCollection (self, *args, **kwargs):
      '''_getChildOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Collection
'''
    ...
    def _getChildOfTypeDocument (self, *args, **kwargs):
      '''_getChildOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Document
'''
    ...
    def _getChildOfTypeGeomInfo (self, *args, **kwargs):
      '''_getChildOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomInfo
'''
    ...
    def _getChildOfTypeGeomProp (self, *args, **kwargs):
      '''_getChildOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::GeomProp
'''
    ...
    def _getChildOfTypeImplementation (self, *args, **kwargs):
      '''_getChildOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Implementation
'''
    ...
    def _getChildOfTypeLook (self, *args, **kwargs):
      '''_getChildOfTypeLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Look
'''
    ...
    def _getChildOfTypeMaterialAssign (self, *args, **kwargs):
      '''_getChildOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::MaterialAssign
'''
    ...
    def _getChildOfTypeNode (self, *args, **kwargs):
      '''_getChildOfTypeNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Node
'''
    ...
    def _getChildOfTypeNodeDef (self, *args, **kwargs):
      '''_getChildOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeDef
'''
    ...
    def _getChildOfTypeNodeGraph (self, *args, **kwargs):
      '''_getChildOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::NodeGraph
'''
    ...
    def _getChildOfTypeProperty (self, *args, **kwargs):
      '''_getChildOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Property
'''
    ...
    def _getChildOfTypePropertySet (self, *args, **kwargs):
      '''_getChildOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySet
'''
    ...
    def _getChildOfTypePropertySetAssign (self, *args, **kwargs):
      '''_getChildOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::PropertySetAssign
'''
    ...
    def _getChildOfTypeToken (self, *args, **kwargs):
      '''_getChildOfTypeToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Token
'''
    ...
    def _getChildOfTypeTypeDef (self, *args, **kwargs):
      '''_getChildOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::TypeDef
'''
    ...
    def _getChildOfTypeVisibility (self, *args, **kwargs):
      '''_getChildOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX_v1_38_8::Visibility
'''
    ...
    def _getChildrenOfTypeCollection (self, *args, **kwargs):
      '''_getChildrenOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Collection]
'''
    ...
    def _getChildrenOfTypeDocument (self, *args, **kwargs):
      '''_getChildrenOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Document]
'''
    ...
    def _getChildrenOfTypeGeomInfo (self, *args, **kwargs):
      '''_getChildrenOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::GeomInfo]
'''
    ...
    def _getChildrenOfTypeGeomProp (self, *args, **kwargs):
      '''_getChildrenOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::GeomProp]
'''
    ...
    def _getChildrenOfTypeImplementation (self, *args, **kwargs):
      '''_getChildrenOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Implementation]
'''
    ...
    def _getChildrenOfTypeLook (self, *args, **kwargs):
      '''_getChildrenOfTypeLook(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Look]
'''
    ...
    def _getChildrenOfTypeMaterialAssign (self, *args, **kwargs):
      '''_getChildrenOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::MaterialAssign]
'''
    ...
    def _getChildrenOfTypeNode (self, *args, **kwargs):
      '''_getChildrenOfTypeNode(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Node]
'''
    ...
    def _getChildrenOfTypeNodeDef (self, *args, **kwargs):
      '''_getChildrenOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::NodeDef]
'''
    ...
    def _getChildrenOfTypeNodeGraph (self, *args, **kwargs):
      '''_getChildrenOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::NodeGraph]
'''
    ...
    def _getChildrenOfTypeProperty (self, *args, **kwargs):
      '''_getChildrenOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Property]
'''
    ...
    def _getChildrenOfTypePropertySet (self, *args, **kwargs):
      '''_getChildrenOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::PropertySet]
'''
    ...
    def _getChildrenOfTypePropertySetAssign (self, *args, **kwargs):
      '''_getChildrenOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::PropertySetAssign]
'''
    ...
    def _getChildrenOfTypeToken (self, *args, **kwargs):
      '''_getChildrenOfTypeToken(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Token]
'''
    ...
    def _getChildrenOfTypeTypeDef (self, *args, **kwargs):
      '''_getChildrenOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::TypeDef]
'''
    ...
    def _getChildrenOfTypeVisibility (self, *args, **kwargs):
      '''_getChildrenOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, category: str = '') -> List[MaterialX_v1_38_8::Visibility]
'''
    ...
    def _removeChildOfTypeCollection (self, *args, **kwargs):
      '''_removeChildOfTypeCollection(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeDocument (self, *args, **kwargs):
      '''_removeChildOfTypeDocument(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeGeomInfo (self, *args, **kwargs):
      '''_removeChildOfTypeGeomInfo(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeGeomProp (self, *args, **kwargs):
      '''_removeChildOfTypeGeomProp(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeImplementation (self, *args, **kwargs):
      '''_removeChildOfTypeImplementation(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeLook (self, *args, **kwargs):
      '''_removeChildOfTypeLook(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeMaterialAssign (self, *args, **kwargs):
      '''_removeChildOfTypeMaterialAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNode (self, *args, **kwargs):
      '''_removeChildOfTypeNode(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNodeDef (self, *args, **kwargs):
      '''_removeChildOfTypeNodeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeNodeGraph (self, *args, **kwargs):
      '''_removeChildOfTypeNodeGraph(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeProperty (self, *args, **kwargs):
      '''_removeChildOfTypeProperty(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypePropertySet (self, *args, **kwargs):
      '''_removeChildOfTypePropertySet(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypePropertySetAssign (self, *args, **kwargs):
      '''_removeChildOfTypePropertySetAssign(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeToken (self, *args, **kwargs):
      '''_removeChildOfTypeToken(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeTypeDef (self, *args, **kwargs):
      '''_removeChildOfTypeTypeDef(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def _removeChildOfTypeVisibility (self, *args, **kwargs):
      '''_removeChildOfTypeVisibility(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def addChild (self, elementClass, name, typeString=''):
      '''Add a child element of the given subclass, name, and optional type string.'''
    ...
    def addChildOfCategory (self, *args, **kwargs):
      '''addChildOfCategory(self: MaterialX.PyMaterialXCore.Element, category: str, name: str = '') -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def asString (self, *args, **kwargs):
      '''asString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def changeChildCategory (self, *args, **kwargs):
      '''changeChildCategory(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element, arg1: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def clearContent (self, *args, **kwargs):
      '''clearContent(self: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def copyContentFrom (self, *args, **kwargs):
      '''copyContentFrom(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def createStringResolver (self, *args, **kwargs):
      '''createStringResolver(self: MaterialX.PyMaterialXCore.Element, geom: str = '') -> MaterialX_v1_38_8::StringResolver
'''
    ...
    def createValidChildName (self, *args, **kwargs):
      '''createValidChildName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getActiveColorSpace (self, *args, **kwargs):
      '''getActiveColorSpace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveFilePrefix (self, *args, **kwargs):
      '''getActiveFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveGeomPrefix (self, *args, **kwargs):
      '''getActiveGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getActiveSourceUri (self, *args, **kwargs):
      '''getActiveSourceUri(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getAttribute (self, *args, **kwargs):
      '''getAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getAttributeNames (self, *args, **kwargs):
      '''getAttributeNames(self: MaterialX.PyMaterialXCore.Element) -> List[str]
'''
    ...
    def getCategory (self, *args, **kwargs):
      '''getCategory(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getChild (self, name):
      '''Return the child element, if any, with the given name.'''
    ...
    def getChildIndex (self, *args, **kwargs):
      '''getChildIndex(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> int
'''
    ...
    def getChildOfType (self, elementClass, name):
      '''Return the child element, if any, with the given name and subclass.'''
    ...
    def getChildren (self, *args, **kwargs):
      '''getChildren(self: MaterialX.PyMaterialXCore.Element) -> List[MaterialX.PyMaterialXCore.Element]
'''
    ...
    def getChildrenOfType (self, elementClass):
      '''Return a list of all child elements that are instances of the given type.
       The returned list maintains the order in which children were added.'''
    ...
    def getCollection (self, *args, **kwargs):
      '''getCollection(self: MaterialX.PyMaterialXCore.GeomElement) -> MaterialX_v1_38_8::Collection
'''
    ...
    def getCollectionString (self, *args, **kwargs):
      '''getCollectionString(self: MaterialX.PyMaterialXCore.GeomElement) -> str
'''
    ...
    def getColorSpace (self, *args, **kwargs):
      '''getColorSpace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getDescendant (self, *args, **kwargs):
      '''getDescendant(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getDocString (self, *args, **kwargs):
      '''getDocString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getDocument (self, *args, **kwargs):
      '''getDocument(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::Document
'''
    ...
    def getFilePrefix (self, *args, **kwargs):
      '''getFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getGeom (self, *args, **kwargs):
      '''getGeom(self: MaterialX.PyMaterialXCore.GeomElement) -> str
'''
    ...
    def getGeomPrefix (self, *args, **kwargs):
      '''getGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getInheritString (self, *args, **kwargs):
      '''getInheritString(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getInheritsFrom (self, *args, **kwargs):
      '''getInheritsFrom(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getName (self, *args, **kwargs):
      '''getName(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getNamePath (self, *args, **kwargs):
      '''getNamePath(self: MaterialX.PyMaterialXCore.Element, relativeTo: MaterialX.PyMaterialXCore.Element = None) -> str
'''
    ...
    def getNamespace (self, *args, **kwargs):
      '''getNamespace(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getParent (self, *args, **kwargs):
      '''getParent(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getQualifiedName (self, *args, **kwargs):
      '''getQualifiedName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> str
'''
    ...
    def getRoot (self, *args, **kwargs):
      '''getRoot(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getSelf (self, *args, **kwargs):
      '''getSelf(self: MaterialX.PyMaterialXCore.Element) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getSourceUri (self, *args, **kwargs):
      '''getSourceUri(self: MaterialX.PyMaterialXCore.Element) -> str
'''
    ...
    def getUpstreamEdge (self, *args, **kwargs):
      '''getUpstreamEdge(self: MaterialX.PyMaterialXCore.Element, index: int = 0) -> MaterialX_v1_38_8::Edge
'''
    ...
    def getUpstreamEdgeCount (self, *args, **kwargs):
      '''getUpstreamEdgeCount(self: MaterialX.PyMaterialXCore.Element) -> int
'''
    ...
    def getUpstreamElement (self, *args, **kwargs):
      '''getUpstreamElement(self: MaterialX.PyMaterialXCore.Element, index: int = 0) -> MaterialX.PyMaterialXCore.Element
'''
    ...
    def getViewerCollection (self, *args, **kwargs):
      '''getViewerCollection(self: MaterialX.PyMaterialXCore.Visibility) -> str
'''
    ...
    def getViewerGeom (self, *args, **kwargs):
      '''getViewerGeom(self: MaterialX.PyMaterialXCore.Visibility) -> str
'''
    ...
    def getVisibilityType (self, *args, **kwargs):
      '''getVisibilityType(self: MaterialX.PyMaterialXCore.Visibility) -> str
'''
    ...
    def getVisible (self, *args, **kwargs):
      '''getVisible(self: MaterialX.PyMaterialXCore.Visibility) -> bool
'''
    ...
    def hasAttribute (self, *args, **kwargs):
      '''hasAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> bool
'''
    ...
    def hasCollectionString (self, *args, **kwargs):
      '''hasCollectionString(self: MaterialX.PyMaterialXCore.GeomElement) -> bool
'''
    ...
    def hasColorSpace (self, *args, **kwargs):
      '''hasColorSpace(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasFilePrefix (self, *args, **kwargs):
      '''hasFilePrefix(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasGeom (self, *args, **kwargs):
      '''hasGeom(self: MaterialX.PyMaterialXCore.GeomElement) -> bool
'''
    ...
    def hasGeomPrefix (self, *args, **kwargs):
      '''hasGeomPrefix(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritString (self, *args, **kwargs):
      '''hasInheritString(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritanceCycle (self, *args, **kwargs):
      '''hasInheritanceCycle(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasInheritedBase (self, *args, **kwargs):
      '''hasInheritedBase(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasNamespace (self, *args, **kwargs):
      '''hasNamespace(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasSourceUri (self, *args, **kwargs):
      '''hasSourceUri(self: MaterialX.PyMaterialXCore.Element) -> bool
'''
    ...
    def hasViewerCollection (self, *args, **kwargs):
      '''hasViewerCollection(self: MaterialX.PyMaterialXCore.Visibility) -> bool
'''
    ...
    def hasViewerGeom (self, *args, **kwargs):
      '''hasViewerGeom(self: MaterialX.PyMaterialXCore.Visibility) -> bool
'''
    ...
    def hasVisibilityType (self, *args, **kwargs):
      '''hasVisibilityType(self: MaterialX.PyMaterialXCore.Visibility) -> bool
'''
    ...
    def isA (self, elementClass, category=''):
      '''Return True if this element is an instance of the given subclass.
       If a category string is specified, then both subclass and category
       matches are required.'''
    ...
    def removeAttribute (self, *args, **kwargs):
      '''removeAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def removeChild (self, *args, **kwargs):
      '''removeChild(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def removeChildOfType (self, elementClass, name):
      '''Remove the typed child element, if any, with the given name.'''
    ...
    def setAttribute (self, *args, **kwargs):
      '''setAttribute(self: MaterialX.PyMaterialXCore.Element, arg0: str, arg1: str) -> None
'''
    ...
    def setCategory (self, *args, **kwargs):
      '''setCategory(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setChildIndex (self, *args, **kwargs):
      '''setChildIndex(self: MaterialX.PyMaterialXCore.Element, arg0: str, arg1: int) -> None
'''
    ...
    def setCollection (self, *args, **kwargs):
      '''setCollection(self: MaterialX.PyMaterialXCore.GeomElement, arg0: MaterialX_v1_38_8::Collection) -> None
'''
    ...
    def setCollectionString (self, *args, **kwargs):
      '''setCollectionString(self: MaterialX.PyMaterialXCore.GeomElement, arg0: str) -> None
'''
    ...
    def setColorSpace (self, *args, **kwargs):
      '''setColorSpace(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setDocString (self, *args, **kwargs):
      '''setDocString(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setFilePrefix (self, *args, **kwargs):
      '''setFilePrefix(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setGeom (self, *args, **kwargs):
      '''setGeom(self: MaterialX.PyMaterialXCore.GeomElement, arg0: str) -> None
'''
    ...
    def setGeomPrefix (self, *args, **kwargs):
      '''setGeomPrefix(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setInheritString (self, *args, **kwargs):
      '''setInheritString(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setInheritsFrom (self, *args, **kwargs):
      '''setInheritsFrom(self: MaterialX.PyMaterialXCore.Element, arg0: MaterialX.PyMaterialXCore.Element) -> None
'''
    ...
    def setName (self, *args, **kwargs):
      '''setName(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setNamespace (self, *args, **kwargs):
      '''setNamespace(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setSourceUri (self, *args, **kwargs):
      '''setSourceUri(self: MaterialX.PyMaterialXCore.Element, arg0: str) -> None
'''
    ...
    def setViewerCollection (self, *args, **kwargs):
      '''setViewerCollection(self: MaterialX.PyMaterialXCore.Visibility, arg0: str) -> None
'''
    ...
    def setViewerGeom (self, *args, **kwargs):
      '''setViewerGeom(self: MaterialX.PyMaterialXCore.Visibility, arg0: str) -> None
'''
    ...
    def setVisibilityType (self, *args, **kwargs):
      '''setVisibilityType(self: MaterialX.PyMaterialXCore.Visibility, arg0: str) -> None
'''
    ...
    def setVisible (self, *args, **kwargs):
      '''setVisible(self: MaterialX.PyMaterialXCore.Visibility, arg0: bool) -> None
'''
    ...
    def traverseGraph (self, *args, **kwargs):
      '''traverseGraph(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::GraphIterator
'''
    ...
    def traverseInheritance (self, *args, **kwargs):
      '''traverseInheritance(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::InheritanceIterator
'''
    ...
    def traverseTree (self, *args, **kwargs):
      '''traverseTree(self: MaterialX.PyMaterialXCore.Element) -> MaterialX_v1_38_8::TreeIterator
'''
    ...
    def validate (self, *args, **kwargs):
      '''validate(self: MaterialX.PyMaterialXCore.Element) -> Tuple[bool, str]
'''
    ...

def XmlReadOptions (*args):
      '''

'''      
    ...

class XmlReadOptions:
    def parentXIncludes (self, *args, **kwargs):
      ''''''
    ...
    def readComments (self, *args, **kwargs):
      ''''''
    ...
    def readNewlines (self, *args, **kwargs):
      ''''''
    ...
    def readXIncludeFunction (self, *args, **kwargs):
      ''''''
    ...
    def upgradeVersion (self, *args, **kwargs):
      ''''''
    ...

def XmlWriteOptions (*args):
      '''

'''      
    ...

class XmlWriteOptions:
    def elementPredicate (self, *args, **kwargs):
      ''''''
    ...
    def writeXIncludeEnable (self, *args, **kwargs):
      ''''''
    ...

def __builtins__ (*args):
      '''

'''      
    ...

def __cached__ (*args):
      '''

'''      
    ...

def __doc__ (*args):
      '''

'''      
    ...

def __file__ (*args):
      '''

'''      
    ...

def __loader__ (*args):
      '''

'''      
    ...

def __name__ (*args):
      '''

'''      
    ...

def __package__ (*args):
      '''

'''      
    ...

def __path__ (*args):
      '''

'''      
    ...

def __spec__ (*args):
      '''

'''      
    ...

def __version__ (*args):
      '''

'''      
    ...

def colorspace (*args):
      '''

'''      
    ...

def createDocument (*args):
      '''

'''      
    ...

def createNamePath (*args):
      '''

'''      
    ...

def createValidName (*args):
      '''

'''      
    ...

def createValueFromStrings (*args):
      '''

'''      
    ...

def datatype (*args):
      '''

'''      
    ...

def flattenFilenames (*args):
      '''

'''      
    ...

def geomStringsMatch (*args):
      '''

'''      
    ...

def getColorSpaces (*args):
      '''

'''      
    ...

def getConnectedOutputs (*args):
      '''

'''      
    ...

def getDefaultDataLibraryFolders (*args):
      '''

'''      
    ...

def getDefaultDataSearchPath (*args):
      '''

'''      
    ...

def getDefaultOCIOConfig (*args):
      '''

'''      
    ...

def getEnvironmentPath (*args):
      '''

'''      
    ...

def getGeometryBindings (*args):
      '''

'''      
    ...

def getShaderNodes (*args):
      '''

'''      
    ...

def getSourceSearchPath (*args):
      '''

'''      
    ...

def getSubdirectories (*args):
      '''

'''      
    ...

def getTypeString (*args):
      '''

'''      
    ...

def getValueString (*args):
      '''

'''      
    ...

def getVersionIntegers (*args):
      '''

'''      
    ...

def getVersionString (*args):
      '''

'''      
    ...

def incrementName (*args):
      '''

'''      
    ...

def isColorType (*args):
      '''

'''      
    ...

def isColorValue (*args):
      '''

'''      
    ...

def isValidName (*args):
      '''

'''      
    ...

def joinStrings (*args):
      '''

'''      
    ...

def loadDocuments (*args):
      '''

'''      
    ...

def loadLibraries (*args):
      '''

'''      
    ...

def loadLibrary (*args):
      '''

'''      
    ...

def main (*args):
      '''

'''      
    ...

def os (*args):
      '''

'''      
    ...

def parentNamePath (*args):
      '''

'''      
    ...

def prependXInclude (*args):
      '''

'''      
    ...

def prettyPrint (*args):
      '''

'''      
    ...

def readFile (*args):
      '''

'''      
    ...

def readFromXmlFile (*args):
      '''

'''      
    ...

def readFromXmlFileBase (*args):
      '''

'''      
    ...

def readFromXmlString (*args):
      '''

'''      
    ...

def replaceSubstrings (*args):
      '''

'''      
    ...

def splitNamePath (*args):
      '''

'''      
    ...

def splitString (*args):
      '''

'''      
    ...

def stringEndsWith (*args):
      '''

'''      
    ...

def stringStartsWith (*args):
      '''

'''      
    ...

def stringToBoolean (*args):
      '''

'''      
    ...

def stringToValue (*args):
      '''

'''      
    ...

def sys (*args):
      '''

'''      
    ...

def targetStringsMatch (*args):
      '''

'''      
    ...

def transformColor (*args):
      '''

'''      
    ...

def typeToName (*args):
      '''

'''      
    ...

def valueToString (*args):
      '''

'''      
    ...

def warnings (*args):
      '''

'''      
    ...

def writeToXmlFile (*args):
      '''

'''      
    ...

def writeToXmlString (*args):
      '''

'''      
    ...
